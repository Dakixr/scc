{
    "description": [
        {
            "excerpt": "agora-py is a Python library that supports Web-scale Ontology-driven Access to Distributed Linked Data. \nCurrently, there is a huge number of dereferenciable Linked Data resources that are not being properly consumed neither explored. \nThat is, the absolute majority of approaches for consuming Linked Data either ignore or inhibit such virtue,  \nunderutilizing the Web as a platform. \nAgora (agora-py) aims to be a tool that enables Linked Data consumers to live-query the Web of Data in a unified and explorative way: \n",
            "confidence": [
                0.9428399361383036,
                0.9657185062651809,
                0.9988051065390621,
                0.909358510486351,
                0.9855534448771865
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "   * the scope of the given query, \n",
            "confidence": [
                0.9443811540415147
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "to drive the exploration of Linked Data resources. \n",
            "confidence": [
                0.9773752570927108
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Agora enables Linked Data consumers to live-query the Web of Data using \nSPARQL. The given queries (in fact, their BGP and filters) together with the registered  \n",
            "confidence": [
                0.9905085310607101,
                0.9476253887449794
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "for row in a.query(query): \n",
            "confidence": [
                0.9560187895509076
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The Linked Data principles [^1] enable the creation of the Web of Data: \n",
            "confidence": [
                0.9804721171589174
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "| Universe of discourse (UoD) | loaded data            | Web of Data    | known data sources | Web of Data                     | known data sources    | \n",
            "confidence": [
                0.9643929111906288
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Only link traversal leverages available Linked Data (look-up) interfaces. A URI should not just serve as a global identifier, but also as provider of a structured data representation of the identified entity. The absolute majority of implemented solutions ignore both principles. \nWhy do not we rely on these HTTP look-up interfaces to directly consume Linked Data? Is it really necessary to give them up in favor of using SPARQL endpoints or any other (non-LD) interface to efficiently access and query Linked Data? \nThe three main benefits of the Web of Data are: \n",
            "confidence": [
                0.97519395474952,
                0.9881272621578914,
                0.9843820378989266
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Enables freshness and serendipitous discovery of data sources and results. \n",
            "confidence": [
                0.9588737659153242
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Link traversal is focused on querying the whole Web of Data without any prior knowledge about the vocabularies that are being used to describe the data. \nOntology-driven link traversal is less ambitious and aims only at querying the sub-dataspace that is described following the previously known vocabularies. In practice, it is only interested in those resources that are described so that they can be correctly interpreted, explored and consumed without extra effort. \nAssuming that data are linked using the properties specified in the selected vocabularies, we can extract and exploit the underlying cabigational paths to easily access reachable and query-relevant fragments of data. \n",
            "confidence": [
                0.9973512250393228,
                0.9795223271367042,
                0.9790390267734216
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "A set of known seeds of any type can be used as starting points of such navigational paths, so that they do not need to be explicitly included in queries. Using those seeds facilitates the selection fo data sources based on different criteria: reliability, security, etc. \n",
            "confidence": [
                0.9767161176377144
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The gathering place for Distributed Linked Data. \nThe Agora was a central space or square in ancient Greek city-states. The literal meaning of the word is \"gathering place\" or \"assembly\". \nThe agora was the centre of athletic, artistic, spiritual and political life of the city. \n",
            "confidence": [
                0.9477651772160889,
                0.97629713328966,
                0.9766593940351931
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The simplest Agora Engine is composed by a Fountain and a Planner. \n",
            "confidence": [
                0.939563313988757
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The Fountain is the place where all navigational paths found in known vocabularies are exposed, taking into account a number of heterogeneous seeds to be later on proposed as starting points for search plans. \nThe Fountain queries the given vocabularies in order to create the underlying link graph. Basically, it tries to find out the domain and range of all properties in the vocabulary with the aim of identifying the set of nodes and edges that make up such link graph. In the end, (a subset of) concepts and properties in the ontology become the nodes and edges of the link graph, respectively. \nThe Fountain accepts vocabularies for registration in two different formats: Turtle and RDF/XML. In order to identify the only ontology that should be described in the submitted content, the Fountain parses it and queries the resulting graph with: \n",
            "confidence": [
                0.9910801541056792,
                0.9934308181435948,
                0.9925519865904452
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "There must be a declared prefix that is equal to the URI binded by ?o. The name of such prefix will be considered by Agora as the identifier of the vocabulary. \n",
            "confidence": [
                0.9530793614168607
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The nodes of the link graph are created from all those concepts described in a given ontology that belong to the result set of the following query: \n",
            "confidence": [
                0.9656359653628771
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Thus, there are some rules that must be taken into account in order to let the Fountain detect nodes in ontologies. That is, nodes are all URIs that match at least one of the following: \n",
            "confidence": [
                0.9502272501333491
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "It has at least one subclass in the ontology or it is the superclass of any other. \nIt belongs to the domain of a datatype property. \n",
            "confidence": [
                0.9463646236243691,
                0.9784005542731734
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "It is important to note that no automatic reasoning is performed in this process. All required information must be materialized in the ontology description that is being submitted. Furthermore, existing conflicts and/or inconsistencies in definitions will not be treated; neither a warning nor an error message will be generated. \nSimilarly to the process of node extraction, the detection of valid edges for the link graph in an ontology is built on the following query: \n",
            "confidence": [
                0.9378633688669685,
                0.995527708841857
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The result set of the corresponding query is composed of all the URIs that have been described in such a way that they can be considered as edges. The corresponding matching rules for edges are: \nIt is a rdf:Property, an owl:ObjectProperty or an owl:DatatypeProperty. \nThere is some restriction on it as a property. \nOnce the Fountain has identified all nodes from the vocabularies, it is prepared to search for the incoming (references) and outgoing (properties) edges for each of them. To do so, it creates and keeps a tuple map that puts nodes and their properties together: \n",
            "confidence": [
                0.9545342250582929,
                0.9477408764567656,
                0.970640667942341,
                0.9752465359782467
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Having such map in memory, it is trivial to filter the properties of each node (fixing a value for n). \nThe domain of an edge e is composed by all those nodes for which e is a property. \n",
            "confidence": [
                0.9762257825166163,
                0.9882284706313175
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "The range of an edge e is composed by: \nAll those nodes for which e is a reference. \nDatatype URIs that appear in a data-range restriction of e for a certain node. \n",
            "confidence": [
                0.9646594071944683,
                0.9389827680394464,
                0.9836684485966648
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "A Python library for Web-scale Ontology-driven Access to Distributed Linked Data",
            "confidence": [
                1.0
            ],
            "technique": "GitHub API"
        }
    ],
    "citation": [
        {
            "excerpt": "[ldf]: <http://linkeddatafragments.org/>\n\n[^1]: Tim Berners-Lee. Linked data-design issues (2006) http://www.w3.org/DesignIssues/LinkedData.html\n\n[^2]: Hartig et al. A Database Perspective on Consuming Linked Data on the Web (2010)\n\n[^3]: Olaf Hartig. An Overview on Execution Strategies for Linked Data Queries (2013)\n\n[^4]: Olaf Hartig. SQUIN: A Traversal Based Query Execution System for the Web of Linked Data (2013)\n\n[^5]: Olaf Hartig. SPARQL for a Web of Linked Data: Semantics and Computability (2012)\n\n[^6]: Bouquet et al. Querying the Web of Data: A Formal Approach (2009)\n\n\nagora-py is distributed under the Apache License, version 2.0.\n",
            "confidence": [
                1
            ],
            "technique": "Header extraction"
        },
        {
            "excerpt": "The process to obtain the incoming edges of all nodes is identical to that of properties. Here, the corresponding query that results in the required tuple map is the following:\n\n```sql\nSELECT ?c ?p WHERE {\n    {\n        ?r owl:onProperty ?p.\n        { ?r owl:someValuesFrom ?c }\n        UNION\n        { ?r owl:allValuesFrom ?c }\n        UNION\n        { ?r owl:onClass ?c }\n    }\n    UNION\n    { ?p rdfs:range ?c }\n    FILTER (isURI(?p) && isURI(?c))\n}\n```\n\nGiven a node *n*, its references are all those URIs that fulfill the following conditions:\n\n* *n* belongs to its range.\n* There is a restriction that specifies that any of its values may be of the type represented by *n*.\n\n",
            "confidence": [
                1
            ],
            "technique": "Header extraction"
        },
        {
            "excerpt": "| Response and throughput     | fast / fast            | fast / fast    | slow / medium      | medium / slow                   | medium / slow         | \n",
            "confidence": [
                0.9891605818130551
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "    <img src=\"docs/img/approach.png\" title=\"Ontology-driven link traversal approach\" width=\"80%\"> \n",
            "confidence": [
                0.9941720630214353
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "    <img src=\"docs/img/concept.png\" title=\"Concept of Agora\"> \n",
            "confidence": [
                0.9468805424507283
            ],
            "technique": "Supervised classification"
        },
        {
            "excerpt": "Graph pattern = { \n",
            "confidence": [
                0.9028399248104376
            ],
            "technique": "Supervised classification"
        }
    ],
    "installation": [
        {
            "excerpt": "agora-py is still not uploaded to PyPi, however the current repository\ncan be passed as source for pip:\n\n```\n$ pip install git+https://github.com/oeg-upm/agora-py.git\n```\n\n",
            "confidence": [
                1
            ],
            "technique": "Header extraction"
        }
    ],
    "invocation": [
        {
            "excerpt": "print a.fountain.seeds \n",
            "confidence": [
                0.936606094659785
            ],
            "technique": "Supervised classification"
        }
    ],
    "long_title": {
        "excerpt": "agora-py",
        "confidence": [
            1.0
        ],
        "technique": "Regular expression"
    },
    "faq": [
        {
            "excerpt": "Some problems of (live-)querying the Web of Data:\n\n* Not any approach for executing queries that range over all Linked Data on the Web can guarantee complete query results.\n* Its openness and growth introduces data integration issues such as coreferencing and schema heterogeneity.\n* Looking up certain URIs may result in the retrieval of an unforeseeable large set of RDF triples.\n* Response times may vary significantly between different servers. Look-ups may take unexpectedly long or may not be answered at all.\n* Restrictions on clients such as sercing only a limited number of requests per second (rate limits).\n\n",
            "confidence": [
                1
            ],
            "technique": "Header extraction"
        }
    ],
    "usage": [
        {
            "excerpt": "Before issuing the first query, Agora needs to know the following:\n1. The vocabulary that will drive the exploration;\n2. One seed resource whose URI and type (any Class in the vocabulary) is known.\n\n",
            "confidence": [
                1
            ],
            "technique": "Header extraction"
        },
        {
            "excerpt": "<p align=\"center\">\n    <img src=\"docs/img/voc_branch.png\" title=\"Excerpt from vocabulary for path extraction\">\n</p>\n\n",
            "confidence": [
                1
            ],
            "technique": "Header extraction"
        }
    ],
    "codeRepository": {
        "excerpt": "https://github.com/oeg-upm/agora-py",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "owner": {
        "excerpt": "oeg-upm",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "ownerType": {
        "excerpt": "Organization",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateCreated": {
        "excerpt": "2017-02-24T07:54:39Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateModified": {
        "excerpt": "2018-04-10T09:41:18Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "license": {
        "excerpt": {
            "name": "Apache License 2.0",
            "url": "https://api.github.com/licenses/apache-2.0"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "name": {
        "excerpt": "agora-py",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "fullName": {
        "excerpt": "oeg-upm/agora-py",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "issueTracker": {
        "excerpt": "https://api.github.com/repos/oeg-upm/agora-py/issues{/number}",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forks_url": {
        "excerpt": "https://api.github.com/repos/oeg-upm/agora-py/forks",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "stargazers_count": {
        "excerpt": {
            "count": 0,
            "date": "Sun, 23 Jan 2022 14:16:58 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forks_count": {
        "excerpt": {
            "count": 1,
            "date": "Sun, 23 Jan 2022 14:16:58 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "downloadUrl": {
        "excerpt": "https://github.com/oeg-upm/agora-py/releases",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "topics": {
        "excerpt": [
            "linked-data",
            "rdf",
            "sparql",
            "ontologies"
        ],
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "languages": {
        "excerpt": [
            "Python",
            "JavaScript",
            "HTML",
            "CSS"
        ],
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "readme_url": {
        "excerpt": "https://github.com/oeg-upm/agora-py/blob/master/README.md",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "licenseText": {
        "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.'",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "hasDocumentation": {
        "excerpt": [
            "https://github.com/oeg-upm/agora-py/tree/master/docs"
        ],
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    }
}