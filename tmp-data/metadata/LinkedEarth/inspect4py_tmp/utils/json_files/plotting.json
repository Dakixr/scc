{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/LinkedEarth/Pyleoclim_util/pyleoclim/utils/plotting.py", "fileNameBase": "plotting", "extension": "py", "doc": {"long_description": "@author: deborahkhider\nContains all relevant plotting functions", "short_description": "Created on Tue Feb 25 05:45:52 2020", "full": "Created on Tue Feb 25 05:45:52 2020\n@author: deborahkhider\nContains all relevant plotting functions"}}, "dependencies": [{"import": "matplotlib", "alias": "plt", "type": "external"}, {"import": "pathlib", "type": "external"}, {"import": "matplotlib", "alias": "mpl", "type": "external"}], "functions": {"plot_scatter_xy": {"doc": {"short_description": "Plot a scatter on top of a line plot.", "args": {"x1": {"description": "x axis of timeseries1 - plotted as a line", "type_name": "array", "is_optional": false}, "y1": {"description": "values of timeseries1 - plotted as a line", "type_name": "array", "is_optional": false}, "x2": {"description": "x axis of scatter points", "type_name": "array", "is_optional": false}, "y2": {"description": "y of scatter points", "type_name": "array", "is_optional": false}, "figsize": {"description": "a list of two integers indicating the figure size", "type_name": "list", "is_optional": false}, "xlabel": {"description": "label for x-axis", "type_name": "str", "is_optional": false}, "ylabel": {"description": "label for y-axis", "type_name": "str", "is_optional": false}, "title": {"description": "the title for the figure", "type_name": "str", "is_optional": false}, "xlim": {"description": "set the limits of the x axis", "type_name": "list", "is_optional": false}, "ylim": {"description": "set the limits of the y axis", "type_name": "list", "is_optional": false}, "ax": {"description": "the pyplot.axis object", "type_name": "pyplot.axis", "is_optional": false}, "legend": {"description": "plot legend or not", "type_name": "bool", "is_optional": false}, "lgd_kwargs": {"description": "the keyword arguments for ax.legend()", "type_name": "dict", "is_optional": false}, "plot_kwargs": {"description": "the keyword arguments for ax.plot()", "type_name": "dict", "is_optional": false}, "mute": {"description": "if True, the plot will not show;\n recommend to turn on when more modifications are going to be made on ax\n (going to be deprecated)", "type_name": "bool", "is_optional": false}, "savefig_settings": {"description": "the dictionary of arguments for plt.savefig(); some notes below:\n- \"path\" must be specified; it can be any existed or non-existed path,\n  with or without a suffix; if the suffix is not given in \"path\", it will follow \"format\"\n- \"format\" can be one of {\"pdf\", \"eps\", \"png\", \"ps\"}", "type_name": "dict", "is_optional": false}}, "returns": {"type_name": "the pyplot.axis object", "is_generator": false, "return_name": "ax"}}, "args": ["x1", "y1", "x2", "y2", "figsize", "xlabel", "ylabel", "title", "xlim", "ylim", "savefig_settings", "ax", "legend", "plot_kwargs", "lgd_kwargs", "mute"], "returns": [["fig", "ax"], ["ax"]], "min_max_lineno": {"min_lineno": 23, "max_lineno": 124}, "calls": ["ax.plot", "ax.scatter", "savefig_settings.copy", "plot_kwargs.copy", "lgd_kwargs.copy", "matplotlib.subplots", "ax.set_xlabel", "ax.set_ylabel", "ax.set_title", "ax.set_xlim", "ax.set_ylim", "ax.legend", "ax.legend().remove", "locals", "plotting.savefig", "ax.legend"]}, "plot_xy": {"doc": {"short_description": "Plot a timeseries", "args": {"x": {"description": "The time axis for the timeseries", "type_name": "array", "is_optional": false}, "y": {"description": "The values of the timeseries", "type_name": "array", "is_optional": false}, "figsize": {"description": "a list of two integers indicating the figure size", "type_name": "list", "is_optional": false}, "xlabel": {"description": "label for x-axis", "type_name": "str", "is_optional": false}, "ylabel": {"description": "label for y-axis", "type_name": "str", "is_optional": false}, "title": {"description": "the title for the figure", "type_name": "str", "is_optional": false}, "xlim": {"description": "set the limits of the x axis", "type_name": "list", "is_optional": false}, "ylim": {"description": "set the limits of the y axis", "type_name": "list", "is_optional": false}, "ax": {"description": "the pyplot.axis object", "type_name": "pyplot.axis", "is_optional": false}, "legend": {"description": "plot legend or not", "type_name": "bool", "is_optional": false}, "lgd_kwargs": {"description": "the keyword arguments for ax.legend()", "type_name": "dict", "is_optional": false}, "plot_kwargs": {"description": "the keyword arguments for ax.plot()", "type_name": "dict", "is_optional": false}, "mute": {"description": "if True, the plot will not show;\nrecommend to turn on when more modifications are going to be made on ax\n (going to be deprecated)", "type_name": "bool", "is_optional": false}, "savefig_settings": {"description": "the dictionary of arguments for plt.savefig(); some notes below:\n- \"path\" must be specified; it can be any existed or non-existed path,\n  with or without a suffix; if the suffix is not given in \"path\", it will follow \"format\"\n- \"format\" can be one of {\"pdf\", \"eps\", \"png\", \"ps\"}", "type_name": "dict", "is_optional": false}, "invert_xaxis": {"description": "if True, the x-axis of the plot will be inverted", "type_name": "bool", "is_optional": true}}, "returns": {"type_name": "the pyplot.axis object", "is_generator": false, "return_name": "ax"}}, "args": ["x", "y", "figsize", "xlabel", "ylabel", "title", "xlim", "ylim", "savefig_settings", "ax", "legend", "plot_kwargs", "lgd_kwargs", "mute", "invert_xaxis"], "returns": [["fig", "ax"], ["ax"]], "min_max_lineno": {"min_lineno": 126, "max_lineno": 226}, "calls": ["ax.plot", "savefig_settings.copy", "plot_kwargs.copy", "lgd_kwargs.copy", "matplotlib.subplots", "ax.set_xlabel", "ax.set_ylabel", "ax.set_title", "ax.set_xlim", "ax.set_ylim", "ax.legend", "ax.legend().remove", "ax.invert_xaxis", "locals", "plotting.savefig", "ax.legend"]}, "stackplot": {"doc": {"long_description": "Please not that this function uses a different default style than the Pyleoclim package.\nTo change the style, pass it in the set_style argument", "short_description": "Stack plot of timeseries", "args": {"x": {"description": "x values of individual timeseries", "type_name": "nested list", "is_optional": false}, "y": {"description": "y values of individual timeseries", "type_name": "nested list", "is_optional": false}, "figsize": {"description": "a list of two integers indicating the figure size", "type_name": "list", "is_optional": false}, "xlabel": {"description": "label for x-axis", "type_name": "str", "is_optional": false}, "ylabel": {"description": "label for y-axis", "type_name": "str", "is_optional": false}, "xlim": {"description": "set the limits of the x axis", "type_name": "list", "is_optional": false}, "ylim": {"description": "set the limits of the y axes. Should be the same length as y", "type_name": "nested list", "is_optional": false}, "title": {"description": "the title for the figure", "type_name": "str", "is_optional": false}, "ax": {"description": "the pyplot.axis object", "type_name": "pyplot.axis", "is_optional": false}, "style": {"description": "style of the plot. See set_style", "type_name": "str", "is_optional": false}, "plot_kwargs": {"description": "the keyword arguments for ax.plot()", "type_name": "dict", "is_optional": false}, "mute": {"description": "if True, the plot will not show;\n  recommend to turn on when more modifications are going to be made on ax\n (going to be deprecated)", "type_name": "bool", "is_optional": false}, "savefig_settings": {"description": "the dictionary of arguments for plt.savefig(); some notes below:\n- \"path\" must be specified; it can be any existed or non-existed path,\n  with or without a suffix; if the suffix is not given in \"path\", it will follow \"format\"\n- \"format\" can be one of {\"pdf\", \"eps\", \"png\", \"ps\"}", "type_name": "dict", "is_optional": false}, "color": {"description": "list of colors chosen from a particular coloring scheme with the same size as y to distinguish different series", "type_name": "list", "is_optional": false}}}, "args": ["x", "y", "figsize", "xlabel", "ylabel", "xlim", "ylim", "title", "savefig_settings", "ax", "style", "plot_kwargs", "mute", "color"], "returns": [["fig", "ax"], ["ax"]], "min_max_lineno": {"min_lineno": 227, "max_lineno": 339}, "calls": ["min", "max", "fig.subplots_adjust", "range", "savefig_settings.copy", "plot_kwargs.copy", "plotting.set_style", "matplotlib.subplots", "len", "ax[].spines[].set_visible", "ax[].tick_params", "locals", "len", "ax[].plot", "ax[].plot", "ax[].set_xlim", "ax[].set_xlim", "ax[].set_ylim", "ax[].set_xlabel", "ax[].set_ylabel", "ax[].yaxis.set_label_position", "ax[].yaxis.tick_right", "ax[].spines[].set_visible", "ax[].spines[].set_visible", "ax[].spines[].set_visible", "ax[].tick_params", "ax[].yaxis.label.set_color", "plotting.savefig", "len"], "store_vars_calls": {"min_x": "min", "max_x": "max"}}, "in_notebook": {"doc": {"short_description": "Check if the code is executed in a Jupyter notebook", "returns": {"type_name": "bool", "is_generator": false}}, "min_max_lineno": {"min_lineno": 343, "max_lineno": 359}, "calls": ["get_ipython"]}, "showfig": {"doc": {"short_description": "Show the figure", "args": {"fig": {"description": "The matplotlib figure object", "type_name": "matplotlib.pyplot.figure", "is_optional": false}, "close": {"description": "if True, close the figure automatically", "type_name": "bool", "is_optional": false}}}, "args": ["fig", "close"], "min_max_lineno": {"min_lineno": 361, "max_lineno": 394}, "calls": ["matplotlib.show", "plotting.closefig"]}, "closefig": {"doc": {"short_description": "Show the figure", "args": {"fig": {"description": "The matplotlib figure object", "type_name": "matplotlib.pyplot.figure", "is_optional": false}}}, "args": ["fig"], "min_max_lineno": {"min_lineno": 395, "max_lineno": 413}, "calls": ["matplotlib.close", "matplotlib.close"]}, "savefig": {"doc": {"short_description": "Save a figure to a path", "args": {"fig": {"description": "the figure to save", "type_name": "matplotlib.pyplot.figure", "is_optional": false}, "path": {"description": "the path to save the figure, can be ignored and specify in \"settings\" instead", "type_name": "str", "is_optional": false}, "settings": {"description": "the dictionary of arguments for plt.savefig(); some notes below:\n- \"path\" must be specified in settings if not assigned with the keyword argument;\n  it can be any existed or non-existed path, with or without a suffix;\n  if the suffix is not given in \"path\", it will follow \"format\"\n- \"format\" can be one of {\"pdf\", \"eps\", \"png\", \"ps\"}", "type_name": "dict", "is_optional": false}}}, "args": ["fig", "path", "settings", "verbose"], "min_max_lineno": {"min_lineno": 414, "max_lineno": 459}, "calls": ["savefig_args.update", "pathlib.Path", "savefig_args.pop", "str", "fig.savefig", "matplotlib.close", "ValueError", "dirpath.exists", "dirpath.mkdir", "pathlib.Path", "print", "print", "str"], "store_vars_calls": {"path": "pathlib.Path", "path_str": "str"}}, "set_style": {"doc": {"long_description": "This function is inspired by [Seaborn](https://github.com/mwaskom/seaborn).\nSee a demo in the example_notebooks folder on GitHub to look at the different styles", "short_description": "Modify the visualization style", "args": {"style": {"description": "set the styles for the figure:\n    - journal (default): fonts appropriate for paper\n    - web: web-like font (e.g. ggplot)\n    - matplotlib: the original matplotlib style\n    In addition, the following options are available:\n    - _spines/_nospines: allow to show/hide spines\n    - _grid/_nogrid: allow to show gridlines (default: _grid)", "type_name": "{journal,web,matplotlib,_spines, _nospines,_grid,_nogrid}", "is_optional": false, "default": "_grid"}, "font_scale": {"description": "Default is 1. Corresponding to 12 Font Size.", "type_name": "float", "is_optional": false, "default": "1."}}}, "args": ["style", "font_scale"], "min_max_lineno": {"min_lineno": 461, "max_lineno": 593}, "calls": ["font_dict.update", "style_dict.update", "style_dict.update", "style_dict.update", "matplotlib.rcParams.update", "style_dict.update", "ValueError", "style_dict.update", "style_dict.update", "font_dict.items"]}}, "is_test": false}