{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/LinkedEarth/Pyleoclim_util/pyleoclim/utils/tsmodel.py", "fileNameBase": "tsmodel", "extension": "py", "doc": {"short_description": "Module for timeseries modeling", "full": "Module for timeseries modeling"}}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "statsmodels.tsa.arima_process", "import": "arma_generate_sample", "type": "external"}, {"from_module": "statsmodels.tsa.arima.model", "import": "ARIMA", "type": "external"}, {"from_module": "tsbase", "import": "is_evenly_spaced", "type": "external"}, {"from_module": "scipy", "import": "optimize", "type": "external"}], "functions": {"ar1_model": {"doc": {"long_description": "constant tau, \u00e0 la REDFIT.", "short_description": "Simulate a (possibly irregularly-sampled) AR(1) process with given decay", "args": {"t": {"description": "time axis of the time series", "type_name": "array", "is_optional": false}, "tau": {"description": "the averaged persistence", "type_name": "float", "is_optional": false}}, "returns": {"description": "the AR(1) time series", "type_name": "array", "is_generator": false, "return_name": "y"}}, "args": ["t", "tau", "output_sigma"], "returns": [["y"]], "min_max_lineno": {"min_lineno": 23, "max_lineno": 59}, "calls": ["numpy.size", "numpy.zeros", "range", "numpy.exp", "numpy.random.normal", "numpy.sqrt"], "store_vars_calls": {"n": "np.size", "y": "np.zeros", "rho": "np.exp", "err": "np.random.normal"}}, "ar1_fit": {"doc": {"short_description": "Returns the lag-1 autocorrelation from AR(1) fit OR persistence from tauest.", "args": {"y": {"description": "the time series", "type_name": "array", "is_optional": false}, "t": {"description": "the time axis of that series", "type_name": "array", "is_optional": false}}, "returns": {"description": "lag-1 autocorrelation coefficient (for evenly-spaced time series)\nOR estimated persistence (for unevenly-spaced time series)", "type_name": "float", "is_generator": false, "return_name": "g"}}, "args": ["y", "t"], "returns": [["g"]], "min_max_lineno": {"min_lineno": 61, "max_lineno": 87}, "calls": ["tsbase.is_evenly_spaced", "tsmodel.ar1_fit_evenly", "tsmodel.tau_estimation"], "store_vars_calls": {"g": "tau_estimation"}}, "ar1_sim": {"doc": {"short_description": "Produce p realizations of an AR(1) process of length n with lag-1 autocorrelation g calculated from `y` and (if provided) `t`", "args": {"y": {"description": "a time series; NaNs not allowed", "type_name": "array", "is_optional": false}, "p": {"description": "column dimension (number of surrogates)", "type_name": "int", "is_optional": false}, "t": {"description": "the time axis of the series", "type_name": "array", "is_optional": false}}, "returns": {"description": "n by p matrix of simulated AR(1) vector", "type_name": "array", "is_generator": false, "return_name": "ysim"}}, "args": ["y", "p", "t"], "returns": [["ysim"]], "min_max_lineno": {"min_lineno": 88, "max_lineno": 148}, "calls": ["numpy.size", "numpy.empty", "numpy.std", "tsbase.is_evenly_spaced", "tsmodel.ar1_fit_evenly", "numpy.arange", "tsmodel.tau_estimation", "numpy.arange", "numpy.sqrt", "statsmodels.tsa.arima_process.arma_generate_sample", "tsmodel.ar1_model"], "store_vars_calls": {"n": "np.size", "ysim": "np.empty", "sig": "np.std", "g": "ar1_fit_evenly", "tau_est": "tau_estimation"}}, "gen_ar1_evenly": {"doc": {"short_description": "Generate AR(1) series samples", "args": {"t": {"description": "the time axis", "type_name": "array", "is_optional": false}, "g": {"description": "lag-1 autocorrelation", "type_name": "float", "is_optional": false}, "scale": {"description": "The standard deviation of noise.", "type_name": "float", "is_optional": false}, "burnin": {"description": "Number of observation at the beginning of the sample to drop. Used to reduce dependence on initial values.", "type_name": "int", "is_optional": false}}, "returns": {"description": "the generated AR(1) series", "type_name": "array", "is_generator": false, "return_name": "y"}}, "args": ["t", "g", "scale", "burnin"], "returns": [["y"]], "min_max_lineno": {"min_lineno": 149, "max_lineno": 182}, "calls": ["statsmodels.tsa.arima_process.arma_generate_sample", "numpy.size"], "store_vars_calls": {"y": "arma_generate_sample"}}, "ar1_fit_evenly": {"doc": {"short_description": "Returns the lag-1 autocorrelation from AR(1) fit.", "args": {"y": {"description": "vector of (float) numbers as a time series", "type_name": "array", "is_optional": false}}, "returns": {"description": "lag-1 autocorrelation coefficient", "type_name": "float", "is_generator": false, "return_name": "g"}}, "args": ["y"], "returns": [["g"]], "min_max_lineno": {"min_lineno": 184, "max_lineno": 210}, "calls": ["statsmodels.tsa.arima.model.ARIMA().fit", "print", "numpy.spacing", "statsmodels.tsa.arima.model.ARIMA"], "store_vars_calls": {"ar1_mod": "ARIMA().fit", "eps": "np.spacing"}}, "tau_estimation": {"doc": {"short_description": "Estimates the  temporal decay scale of an (un)evenly spaced time series.", "args": {"y": {"description": "a time series", "type_name": "array", "is_optional": false}, "t": {"description": "time axis of the time series", "type_name": "array", "is_optional": false}}, "returns": {"description": "the estimated persistence", "type_name": "float", "is_generator": false, "return_name": "tau_est"}}, "args": ["y", "t"], "returns": [["tau_est"]], "min_max_lineno": {"min_lineno": 211, "max_lineno": 250}, "calls": ["numpy.diff", "numpy.sum", "scipy.optimize.minimize_scalar", "numpy.log"], "store_vars_calls": {"dt": "np.diff"}, "functions": {"ar1_fun": {"args": ["a"], "min_max_lineno": {"min_lineno": 240, "max_lineno": 243}, "calls": ["numpy.sum"]}}}, "colored_noise": {"doc": {"short_description": "Generate a colored noise timeseries", "args": {"alpha": {"description": "exponent of the 1/f^alpha noise", "type_name": "float", "is_optional": false}, "t": {"description": "time vector of the generated noise", "type_name": "float", "is_optional": false}, "f0": {"description": "fundamental frequency", "type_name": "float", "is_optional": false}, "m": {"description": "maximum number of the waves, which determines the highest frequency of the components in the synthetic noise", "type_name": "int", "is_optional": false}}, "returns": {"description": "the generated 1/f^alpha noise", "type_name": "array", "is_generator": false, "return_name": "y"}}, "args": ["alpha", "t", "f0", "m", "seed"], "returns": [["y"]], "min_max_lineno": {"min_lineno": 252, "max_lineno": 301}, "calls": ["numpy.size", "numpy.zeros", "range", "numpy.arange", "numpy.random.seed", "numpy.sin", "numpy.sum", "numpy.random.rand", "int"], "store_vars_calls": {"n": "np.size", "y": "np.zeros", "sin_func": "np.sin"}}, "colored_noise_2regimes": {"doc": {"short_description": "Generate a colored noise timeseries with two regimes", "args": {"alpha1, alpha2": {"description": "the exponent of the 1/f^alpha noise", "type_name": "float", "is_optional": false}, "f_break": {"description": "the frequency where the scaling breaks", "type_name": "float", "is_optional": false}, "t": {"description": "time vector of the generated noise", "type_name": "float", "is_optional": false}, "f0": {"description": "fundamental frequency", "type_name": "float", "is_optional": false}, "m": {"description": "maximum number of the waves, which determines the highest frequency of the components in the synthetic noise", "type_name": "int", "is_optional": false}}, "returns": {"description": "the generated 1/f^alpha noise", "type_name": "array", "is_generator": false, "return_name": "y"}}, "args": ["alpha1", "alpha2", "f_break", "t", "f0", "m", "seed"], "returns": [["y"]], "min_max_lineno": {"min_lineno": 302, "max_lineno": 363}, "calls": ["numpy.size", "numpy.zeros", "range", "numpy.arange", "numpy.random.seed", "numpy.exp", "numpy.ndarray", "numpy.sin", "numpy.sum", "numpy.random.rand", "numpy.size", "int", "numpy.log"], "store_vars_calls": {"n": "np.size", "y": "np.zeros", "coeff": "np.ndarray", "sin_func": "np.sin"}}}, "is_test": false}