{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/LinkedEarth/Pyleoclim_util/pyleoclim/tests/test_ui_Lipd.py", "fileNameBase": "test_ui_Lipd", "extension": "py", "doc": {"long_description": "@author: deborahkhider\n\n\nTests for pyleoclim.core.ui.Lipd\n\nNaming rules:\n1. class: Test{filename}{Class}{method} with appropriate camel case\n2. function: test_{method}_t{test_id}\n\nNotes on how to test:\n0. Make sure [pytest](https://docs.pytest.org) has been installed: `pip install pytest`\n1. execute `pytest {directory_path}` in terminal to perform all tests in all testing files inside the specified directory\n2. execute `pytest {file_path}` in terminal to perform all tests in the specified file\n3. execute `pytest {file_path}::{TestClass}::{test_method}` in terminal to perform a specific test class/method inside the specified file\n4. after `pip install pytest-xdist`, one may execute \"pytest -n 4\" to test in parallel with number of workers specified by `-n`\n5. for more details, see https://docs.pytest.org/en/stable/usage.html", "short_description": "Created on Mon Feb  8 13:02:02 2021", "full": "Created on Mon Feb  8 13:02:02 2021\n\n@author: deborahkhider\n\n\nTests for pyleoclim.core.ui.Lipd\n\nNaming rules:\n1. class: Test{filename}{Class}{method} with appropriate camel case\n2. function: test_{method}_t{test_id}\n\nNotes on how to test:\n0. Make sure [pytest](https://docs.pytest.org) has been installed: `pip install pytest`\n1. execute `pytest {directory_path}` in terminal to perform all tests in all testing files inside the specified directory\n2. execute `pytest {file_path}` in terminal to perform all tests in the specified file\n3. execute `pytest {file_path}::{TestClass}::{test_method}` in terminal to perform a specific test class/method inside the specified file\n4. after `pip install pytest-xdist`, one may execute \"pytest -n 4\" to test in parallel with number of workers specified by `-n`\n5. for more details, see https://docs.pytest.org/en/stable/usage.html"}}, "dependencies": [{"import": "pytest", "type": "external"}, {"import": "pyleoclim", "alias": "pyleo", "type": "external"}, {"from_module": "urllib.request", "import": "urlopen", "type": "external"}, {"import": "json", "type": "external"}, {"from_module": "pyleoclim.tests.examples", "import": "load_dataset", "type": "external"}], "classes": {"TestUiLipdTo_tso": {"doc": {"short_description": "Test Lipd.to_tso()", "full": "Test Lipd.to_tso()\n    "}, "min_max_lineno": {"min_lineno": 47, "max_lineno": 54}, "methods": {"test_to_tso_t0": {"args": ["self"], "min_max_lineno": {"min_lineno": 50, "max_lineno": 54}, "calls": ["test_ui_Lipd.load_data", "load_data.to_tso", "len"], "store_vars_calls": {"d": "load_data", "ts": "d.to_tso"}}}}, "TestUiLipdExtract": {"doc": {"short_description": "Test Lipd.extract()", "full": "Test Lipd.extract()\n    "}, "min_max_lineno": {"min_lineno": 55, "max_lineno": 66}, "methods": {"test_extract_t0": {"args": ["self"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 66}, "calls": ["test_ui_Lipd.importLiPD", "pyleoclim.Lipd", "pyleoclim.Lipd.extract"], "store_vars_calls": {"D": "importLiPD", "d": "pyleo.Lipd", "d2": "d.extract"}}}}, "TestUiLipdTo_LipdSeriesList": {"doc": {"short_description": "Test Lipd.to_LipdSeriesList", "full": "Test Lipd.to_LipdSeriesList\n    "}, "min_max_lineno": {"min_lineno": 67, "max_lineno": 73}, "methods": {"test_to_LipdSeriesList_t0": {"args": ["self"], "min_max_lineno": {"min_lineno": 70, "max_lineno": 73}, "calls": ["test_ui_Lipd.load_data", "load_data.to_LipdSeriesList"], "store_vars_calls": {"d": "load_data", "ts": "d.to_LipdSeriesList"}}}}, "TestUiLipdTo_LipdSeries": {"doc": {"short_description": "Test Lipd.to_LipdSeries", "full": "Test Lipd.to_LipdSeries\n    "}, "min_max_lineno": {"min_lineno": 74, "max_lineno": 80}, "methods": {"test_to_LipdSeries_t0": {"args": ["self"], "min_max_lineno": {"min_lineno": 77, "max_lineno": 80}, "calls": ["test_ui_Lipd.load_data", "load_data.to_LipdSeries"], "store_vars_calls": {"d": "load_data", "ts": "d.to_LipdSeries"}}}}, "TestUiLipdMapAllArchive": {"doc": {"short_description": "Test Lipd.mapAllArchive", "full": "Test Lipd.mapAllArchive\n    "}, "min_max_lineno": {"min_lineno": 81, "max_lineno": 87}, "methods": {"test_mapAllArchive_t0": {"args": ["self"], "min_max_lineno": {"min_lineno": 84, "max_lineno": 87}, "calls": ["test_ui_Lipd.load_data", "load_data.mapAllArchive"], "store_vars_calls": {"d": "load_data", "res": "d.mapAllArchive"}}}}}, "functions": {"importLiPD": {"returns": [["d"]], "min_max_lineno": {"min_lineno": 33, "max_lineno": 38}, "calls": ["urllib.request.urlopen", "json.loads", "urllib.request.urlopen.read"], "store_vars_calls": {"response": "urlopen", "d": "json.loads"}}, "load_data": {"returns": [["d"]], "min_max_lineno": {"min_lineno": 39, "max_lineno": 46}, "calls": ["pyleoclim.Lipd", "pyleoclim.Lipd"], "store_vars_calls": {"d": "pyleo.Lipd"}}}, "is_test": true}