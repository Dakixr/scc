{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/spider/spider/tests/audio_slicer_test.py", "fileNameBase": "audio_slicer_test", "extension": "py", "doc": {"long_description": "Max Morrison\n\nUnit tests for the spider.preprocessing.audio_slicer module", "short_description": "spider.tests: test_audio_slicer.py", "full": "spider.tests: test_audio_slicer.py\n\nMax Morrison\n\nUnit tests for the spider.preprocessing.audio_slicer module"}}, "dependencies": [{"import": "librosa", "type": "external"}, {"import": "unittest", "type": "external"}, {"import": "math", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "spider.featurization.audio_slicer", "import": "AudioSlicer", "type": "external"}], "classes": {"TestAudioSlicer": {"extend": ["unittest.TestCase"], "min_max_lineno": {"min_lineno": 15, "max_lineno": 116}, "methods": {"setUp": {"doc": {"short_description": "Setup the audio testing environment for Python unittest"}, "args": ["self"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 27}, "calls": ["librosa.util.example_audio_file", "librosa.load", "len", "int", "spider.featurization.audio_slicer.AudioSlicer"], "store_vars_calls": {"audio_file": "librosa.util.example_audio_file", "self._audio_length": "len", "self._samples_per_clip": "int", "self._featurizer": "AudioSlicer"}}, "testDefault": {"doc": {"short_description": "Test the default setting of the audio_slicer"}, "args": ["self"], "min_max_lineno": {"min_lineno": 28, "max_lineno": 49}, "calls": ["math.ceil", "audio_slicer_test.TestAudioSlicer._featurizer.produce", "audio_slicer_test.TestAudioSlicer.assertEqual", "audio_slicer_test.TestAudioSlicer.assertEqual", "audio_slicer_test.TestAudioSlicer.assertTrue", "numpy.array_equal", "float"], "store_vars_calls": {"num_clips": "math.ceil", "features": "self._featurizer.produce"}}, "testOverlap": {"doc": {"short_description": "Test the overlap functionality to split clips with shared data"}, "args": ["self"], "min_max_lineno": {"min_lineno": 51, "max_lineno": 66}, "calls": ["spider.featurization.audio_slicer.AudioSlicer", "math.ceil", "spider.featurization.audio_slicer.AudioSlicer.produce", "audio_slicer_test.TestAudioSlicer.assertEqual", "audio_slicer_test.TestAudioSlicer.assertTrue", "numpy.array_equal", "float"], "store_vars_calls": {"featurizer": "AudioSlicer", "num_clips": "math.ceil", "features": "featurizer.produce"}}, "testNoop": {"doc": {"short_description": "Test that clipping audio at its same length does nothing"}, "args": ["self"], "min_max_lineno": {"min_lineno": 67, "max_lineno": 84}, "calls": ["spider.featurization.audio_slicer.AudioSlicer", "spider.featurization.audio_slicer.AudioSlicer.produce", "audio_slicer_test.TestAudioSlicer.assertEqual", "audio_slicer_test.TestAudioSlicer.assertTrue", "float", "numpy.array_equal"], "store_vars_calls": {"featurizer": "AudioSlicer", "features": "featurizer.produce"}}, "testMultiple": {"doc": {"short_description": "Test processing of multiple clips in one call"}, "args": ["self"], "min_max_lineno": {"min_lineno": 85, "max_lineno": 99}, "calls": ["numpy.array_split", "spider.featurization.audio_slicer.AudioSlicer", "int", "spider.featurization.audio_slicer.AudioSlicer.produce", "audio_slicer_test.TestAudioSlicer.assertEqual"], "store_vars_calls": {"audio": "np.array_split", "featurizer": "AudioSlicer", "samples_per_clip": "int", "features": "featurizer.produce"}}, "testPadding": {"doc": {"short_description": "Test the padding capabilities for short clips"}, "args": ["self"], "min_max_lineno": {"min_lineno": 100, "max_lineno": 116}, "calls": ["spider.featurization.audio_slicer.AudioSlicer", "spider.featurization.audio_slicer.AudioSlicer.produce", "audio_slicer_test.TestAudioSlicer.assertEqual", "spider.featurization.audio_slicer.AudioSlicer", "spider.featurization.audio_slicer.AudioSlicer.produce", "audio_slicer_test.TestAudioSlicer.assertEqual"], "store_vars_calls": {"featurizer": "AudioSlicer", "features": "featurizer.produce"}}}}}, "main_info": {"main_flag": 1, "main_function": "audio_slicer_test.unittest.main", "type": "script"}, "is_test": true}