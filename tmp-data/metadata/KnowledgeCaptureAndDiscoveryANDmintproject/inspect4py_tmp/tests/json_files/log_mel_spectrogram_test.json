{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/spider/spider/tests/log_mel_spectrogram_test.py", "fileNameBase": "log_mel_spectrogram_test", "extension": "py", "doc": {"long_description": "Max Morrison\n\nUnit tests for the spider.preprocessing.logmelspectrogram module", "short_description": "spider.tests: test_log_mel_spectrogram.py", "full": "spider.tests: test_log_mel_spectrogram.py\n\nMax Morrison\n\nUnit tests for the spider.preprocessing.logmelspectrogram module"}}, "dependencies": [{"import": "librosa", "type": "external"}, {"import": "unittest", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "warnings", "type": "external"}, {"from_module": "spider.featurization.logmelspectrogram", "import": "LogMelSpectrogram", "type": "external"}], "classes": {"TestLogMelSpectrogram": {"extend": ["unittest.TestCase"], "min_max_lineno": {"min_lineno": 15, "max_lineno": 60}, "methods": {"setUp": {"doc": {"short_description": "Setup the audio testing environment for Python unittest"}, "args": ["self"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 25}, "calls": ["librosa.util.example_audio_file", "librosa.load", "len", "spider.featurization.logmelspectrogram.LogMelSpectrogram"], "store_vars_calls": {"audio_file": "librosa.util.example_audio_file", "self._audio_length": "len", "self._featurizer": "LogMelSpectrogram"}}, "testDefault": {"doc": {"short_description": "Test the default parameters of the logmelspectrogram"}, "args": ["self"], "min_max_lineno": {"min_lineno": 26, "max_lineno": 32}, "calls": ["log_mel_spectrogram_test.TestLogMelSpectrogram._featurizer.produce", "log_mel_spectrogram_test.TestLogMelSpectrogram.assertEqual"], "store_vars_calls": {"features": "self._featurizer.produce"}}, "testSizing": {"doc": {"short_description": "Test the effect of parameter changes on output size"}, "args": ["self"], "min_max_lineno": {"min_lineno": 33, "max_lineno": 40}, "calls": ["spider.featurization.logmelspectrogram.LogMelSpectrogram", "spider.featurization.logmelspectrogram.LogMelSpectrogram.produce", "log_mel_spectrogram_test.TestLogMelSpectrogram.assertEqual"], "store_vars_calls": {"featurizer": "LogMelSpectrogram", "features": "featurizer.produce"}}, "testNoop": {"doc": {"short_description": "Test that an empty array is well-handled"}, "args": ["self"], "min_max_lineno": {"min_lineno": 41, "max_lineno": 50}, "calls": ["warnings.catch_warnings", "warnings.simplefilter", "log_mel_spectrogram_test.TestLogMelSpectrogram._featurizer.produce", "log_mel_spectrogram_test.TestLogMelSpectrogram.assertEqual", "log_mel_spectrogram_test.TestLogMelSpectrogram.assertEqual", "len", "numpy.array"], "store_vars_calls": {"features": "self._featurizer.produce"}}, "testMultiple": {"doc": {"short_description": "Test that multiple time series in a single call are well-handled"}, "args": ["self"], "min_max_lineno": {"min_lineno": 51, "max_lineno": 60}, "calls": ["numpy.array_split", "log_mel_spectrogram_test.TestLogMelSpectrogram._featurizer.produce", "log_mel_spectrogram_test.TestLogMelSpectrogram.assertEqual"], "store_vars_calls": {"audio": "np.array_split", "features": "self._featurizer.produce"}}}}}, "is_test": true}