{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/somef/src/somef/test/test_parser_somef.py", "fileNameBase": "test_parser_somef", "extension": "py"}, "dependencies": [{"import": "unittest", "type": "external"}, {"import": "os", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"from_module": "parser_somef", "import": "extract_headers", "type": "external"}, {"from_module": "parser_somef", "import": "extract_headers_with_tags", "type": "external"}, {"from_module": "parser_somef", "import": "extract_content_per_header", "type": "external"}, {"from_module": "parser_somef", "import": "extract_bash", "type": "external"}, {"from_module": "parser_somef", "import": "extract_blocks_excerpts", "type": "external"}, {"from_module": "parser_somef", "import": "extract_text_excerpts_header", "type": "external"}, {"from_module": "parser_somef", "import": "extract_headers_parents", "type": "external"}, {"from_module": "parser_somef", "import": "is_header", "type": "external"}], "classes": {"TestParserSomef": {"extend": ["unittest.TestCase"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 75}, "methods": {"test_extract_header_content": {"doc": {"short_description": "Test to check if the markdown parser works against hash headers"}, "args": ["self"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 20}, "calls": ["open", "data_file.read", "parser_somef.extract_headers", "len"], "store_vars_calls": {"text": "data_file.read", "headers": "extract_headers"}}, "test_extract_header_content_hash": {"doc": {"short_description": "Test to check if the markdown parser works against hash headers"}, "args": ["self"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 27}, "calls": ["open", "data_file.read", "parser_somef.extract_headers_with_tags", "len"], "store_vars_calls": {"text": "data_file.read", "headers": "extract_headers_with_tags"}}, "test_extract_content_per_header": {"doc": {"short_description": "Test to check if the markdown parser gets the content of headers"}, "args": ["self"], "min_max_lineno": {"min_lineno": 28, "max_lineno": 35}, "calls": ["open", "data_file.read", "parser_somef.extract_headers", "parser_somef.extract_content_per_header", "len"], "store_vars_calls": {"text": "data_file.read", "headers": "extract_headers"}}, "test_extract_bash": {"doc": {"short_description": "Test to check if the markdown extracts bash code"}, "args": ["self"], "min_max_lineno": {"min_lineno": 36, "max_lineno": 42}, "calls": ["open", "data_file.read", "parser_somef.extract_bash", "len", "content.keys"], "store_vars_calls": {"text": "data_file.read"}}, "test_extract_blocks_excerpts": {"doc": {"short_description": "Test to check if the markdown parser detects the right text blocks"}, "args": ["self"], "min_max_lineno": {"min_lineno": 43, "max_lineno": 51}, "calls": ["open", "data_file.read", "parser_somef.extract_headers", "parser_somef.extract_content_per_header", "parser_somef.extract_blocks_excerpts", "len"], "store_vars_calls": {"text": "data_file.read", "headers": "extract_headers", "excerpts": "extract_blocks_excerpts"}}, "test_extract_text_excerpts_header": {"doc": {"short_description": "Test to check if the markdown parser detects the correct headers"}, "args": ["self"], "min_max_lineno": {"min_lineno": 52, "max_lineno": 58}, "calls": ["open", "data_file.read", "parser_somef.extract_text_excerpts_header", "len"], "store_vars_calls": {"text": "data_file.read", "excerpts": "extract_text_excerpts_header"}}, "test_extract_headers_parents": {"doc": {"short_description": "Test to check if the markdown parser detects header partents correctly"}, "args": ["self"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 65}, "calls": ["open", "data_file.read", "parser_somef.extract_headers_parents", "len"], "store_vars_calls": {"text": "data_file.read", "parents": "extract_headers_parents"}}, "test_issue_431": {"args": ["self"], "min_max_lineno": {"min_lineno": 66, "max_lineno": 75}, "calls": ["print", "print", "parser_somef.is_header", "parser_somef.is_header", "parser_somef.is_header", "parser_somef.is_header"]}}}}, "is_test": true}