{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/provenance-api/server/openapi_server/test/test_provenance_ensemble_controller.py", "fileNameBase": "test_provenance_ensemble_controller", "extension": "py"}, "dependencies": [{"from_module": "__future__", "import": "absolute_import", "type": "external"}, {"import": "unittest", "type": "external"}, {"from_module": "flask", "import": "json", "type": "external"}, {"from_module": "six", "import": "BytesIO", "type": "external"}, {"from_module": "openapi_server.models.provenance_ensemble", "import": "ProvenanceEnsemble", "type": "external"}, {"from_module": "openapi_server.test", "import": "BaseTestCase", "type": "external"}], "classes": {"TestProvenanceEnsembleController": {"doc": {"short_description": "ProvenanceEnsembleController integration test stubs", "full": "ProvenanceEnsembleController integration test stubs"}, "extend": ["BaseTestCase"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 119}, "methods": {"test_provenanceensembles_get": {"doc": {"long_description": "List all ProvenanceEnsemble entities", "short_description": "Test case for provenanceensembles_get"}, "args": ["self"], "min_max_lineno": {"min_lineno": 16, "max_lineno": 33}, "calls": ["test_provenance_ensemble_controller.TestProvenanceEnsembleController.client.open", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.assert200", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.data.decode"], "store_vars_calls": {"response": "self.client.open"}}, "test_provenanceensembles_id_delete": {"doc": {"long_description": "Delete a ProvenanceEnsemble", "short_description": "Test case for provenanceensembles_id_delete"}, "args": ["self"], "min_max_lineno": {"min_lineno": 34, "max_lineno": 48}, "calls": ["test_provenance_ensemble_controller.TestProvenanceEnsembleController.client.open", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.assert200", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.data.decode"], "store_vars_calls": {"response": "self.client.open"}}, "test_provenanceensembles_id_get": {"doc": {"long_description": "Get a ProvenanceEnsemble", "short_description": "Test case for provenanceensembles_id_get"}, "args": ["self"], "min_max_lineno": {"min_lineno": 49, "max_lineno": 65}, "calls": ["test_provenance_ensemble_controller.TestProvenanceEnsembleController.client.open", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.assert200", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.data.decode"], "store_vars_calls": {"response": "self.client.open"}}, "test_provenanceensembles_id_put": {"doc": {"long_description": "Update a ProvenanceEnsemble", "short_description": "Test case for provenanceensembles_id_put"}, "args": ["self"], "min_max_lineno": {"min_lineno": 66, "max_lineno": 92}, "calls": ["test_provenance_ensemble_controller.TestProvenanceEnsembleController.client.open", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.assert200", "flask.json.dumps", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.data.decode"], "store_vars_calls": {"response": "self.client.open"}}, "test_provenanceensembles_post": {"doc": {"long_description": "Create a ProvenanceEnsemble", "short_description": "Test case for provenanceensembles_post"}, "args": ["self"], "min_max_lineno": {"min_lineno": 93, "max_lineno": 119}, "calls": ["test_provenance_ensemble_controller.TestProvenanceEnsembleController.client.open", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.assert200", "flask.json.dumps", "test_provenance_ensemble_controller.TestProvenanceEnsembleController.data.decode"], "store_vars_calls": {"response": "self.client.open"}}}}}, "main_info": {"main_flag": 1, "main_function": "test_provenance_ensemble_controller.unittest.main", "type": "script"}, "is_test": true}