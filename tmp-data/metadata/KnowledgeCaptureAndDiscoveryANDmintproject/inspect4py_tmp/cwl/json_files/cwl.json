{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/mic/src/mic/cwl/cwl.py", "fileNameBase": "cwl", "extension": "py"}, "dependencies": [{"from_module": "datetime", "import": "datetime", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"from_module": "typing", "import": "Dict", "type": "external"}, {"import": "click", "type": "external"}, {"import": "yaml", "type": "external"}, {"import": "logging", "type": "external"}, {"from_module": "mic._utils", "import": "check_mic_path", "type": "external"}, {"from_module": "mic.cli_docs", "import": "info_start_run", "type": "external"}, {"from_module": "mic.cli_docs", "import": "info_end_run", "type": "external"}, {"from_module": "mic.cli_docs", "import": "info_end_run_failed", "type": "external"}, {"from_module": "mic.component.executor", "import": "execute_local", "type": "external"}, {"from_module": "mic.component.reprozip", "import": "format_code", "type": "external"}, {"from_module": "mic.config_yaml", "import": "write_to_yaml", "type": "external"}, {"from_module": "mic.constants", "import": "PARAMETERS_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "DEFAULT_DESCRIPTION_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "DEFAULT_VALUE_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "DATATYPE_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "NAME_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "PATH_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "OUTPUTS_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "INPUTS_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "EXECUTIONS_DIR", "type": "external"}], "functions": {"is_parameter": {"args": ["_type"], "returns": [["_exit"]], "min_max_lineno": {"min_lineno": 20, "max_lineno": 23}}, "is_input": {"args": ["_type"], "returns": [["_exit"]], "min_max_lineno": {"min_lineno": 25, "max_lineno": 28}}, "get_parameters": {"args": ["spec"], "returns": [["parameters"]], "min_max_lineno": {"min_lineno": 30, "max_lineno": 36}, "calls": ["spec[].items", "cwl.is_parameter"]}, "get_inputs": {"args": ["spec"], "returns": [["inputs"]], "min_max_lineno": {"min_lineno": 38, "max_lineno": 44}, "calls": ["spec[].items", "cwl.is_input"]}, "get_outputs": {"args": ["spec"], "returns": [["files"]], "min_max_lineno": {"min_lineno": 46, "max_lineno": 52}, "calls": ["spec[].items", "cwl.is_input"]}, "get_docker_image": {"args": ["cwl_spec"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 58}, "calls": ["ValueError"]}, "update_docker_image": {"args": ["cwl_spec_path", "docker_image"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 70}, "calls": ["yaml.load", "click.secho", "cwl_spec_path.open", "ValueError", "mic.config_yaml.write_to_yaml", "click.secho"], "store_vars_calls": {"cwl_spec": "yaml.load"}}, "get_base_command": {"args": ["cwl_spec"], "min_max_lineno": {"min_lineno": 72, "max_lineno": 77}, "calls": ["ValueError"]}, "supported": {"args": ["cwl_spec"], "min_max_lineno": {"min_lineno": 79, "max_lineno": 84}, "calls": ["ValueError"]}, "add_parameters": {"args": ["config_yaml_path", "cwl_spec", "values"], "min_max_lineno": {"min_lineno": 86, "max_lineno": 106}, "calls": ["yaml.load", "cwl_spec.items", "config_yaml_path.open", "spec[].update", "mic.config_yaml.write_to_yaml", "click.secho", "type", "click.secho"], "store_vars_calls": {"spec": "yaml.load"}}, "add_inputs": {"args": ["config_yaml_path", "cwl_spec", "values"], "min_max_lineno": {"min_lineno": 108, "max_lineno": 125}, "calls": ["yaml.load", "cwl_spec.items", "config_yaml_path.open", "spec[].update", "mic.config_yaml.write_to_yaml", "click.secho", "click.secho"], "store_vars_calls": {"spec": "yaml.load"}}, "add_outputs": {"args": ["config_yaml_path", "cwl_spec", "values"], "min_max_lineno": {"min_lineno": 127, "max_lineno": 145}, "calls": ["yaml.load", "cwl_spec.items", "config_yaml_path.open", "spec[].update", "mic.config_yaml.write_to_yaml", "click.secho", "click.secho"], "store_vars_calls": {"spec": "yaml.load"}}}, "is_test": false}