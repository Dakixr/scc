{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/data_registration/register_dataset.py", "fileNameBase": "register_dataset", "extension": "py"}, "dependencies": [{"import": "requests", "type": "external"}, {"import": "logging", "type": "external"}, {"import": "json", "type": "external"}, {"import": "argparse", "type": "external"}, {"import": "os", "type": "external"}], "functions": {"register_dataset": {"doc": {"short_description": "Create dataset, standard variables, dataset variables and resources", "args": {"details": {"description": "Dataset file parsed as json", "type_name": "dict", "is_optional": false}}}, "args": ["details"], "returns": [["dsid"]], "min_max_lineno": {"min_lineno": 21, "max_lineno": 51}, "calls": ["print", "register_dataset.get_resources_json", "print", "register_dataset.create_dataset", "print", "register_dataset.create_resources", "register_dataset.get_json_from_path", "register_dataset.create_standard_variables", "register_dataset.create_dataset_variables", "len"], "store_vars_calls": {"resources": "get_resources_json", "dsid": "create_dataset", "variables_details": "get_json_from_path", "dsvars": "create_standard_variables"}}, "sync_dataset_metadata": {"args": ["dsid"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 58}, "calls": ["register_dataset.submit_request"]}, "create_dataset": {"doc": {"short_description": "Create dataset", "args": {"details": {"description": "Dataset file parsed as json", "type_name": "dict", "is_optional": false}}, "returns": {"description": "dataset id", "type_name": "str", "is_generator": false}}, "args": ["details"], "returns": [["dsid"]], "min_max_lineno": {"min_lineno": 60, "max_lineno": 84}, "calls": ["register_dataset.submit_request", "len"], "store_vars_calls": {"result": "submit_request"}}, "create_standard_variables": {"doc": {"short_description": "Create standard variables if they don't exist", "args": {"variables_details": {"description": "the details of the variables from the file", "type_name": "dict", "is_optional": false}}, "returns": {"description": "the standard variables created", "type_name": "dict", "is_generator": false}}, "args": ["variables_details"], "returns": [["new_dsvars"]], "min_max_lineno": {"min_lineno": 89, "max_lineno": 144}, "calls": ["register_dataset.submit_request", "len", "stdvars.extend", "list", "len", "register_dataset.submit_request", "new_dsvars.append", "map", "len", "new_stdvars.append", "len", "new_dsvar[].append"], "store_vars_calls": {"find_result": "submit_request", "register_result": "submit_request"}}, "create_dataset_variables": {"doc": {"short_description": "Create the dataset variables", "args": {"dataset_id": {"description": "dataset id", "type_name": "str", "is_optional": false}, "dataset_variables": {"description": "dataset variables", "type_name": "dict", "is_optional": false}}, "returns": {"description": "the dataset variables created", "type_name": "dict", "is_generator": false}}, "args": ["dataset_id", "dataset_variables"], "min_max_lineno": {"min_lineno": 148, "max_lineno": 168}, "calls": ["register_dataset.submit_request", "len"], "store_vars_calls": {"response": "submit_request"}}, "create_resources": {"doc": {"short_description": "Create the resource for the dataset", "args": {"dataset_id": {"description": "the dataset id", "type_name": "str", "is_optional": false}, "resources": {"description": "the resources to be added to the dataset", "type_name": "dict", "is_optional": false}}}, "args": ["dataset_id", "resources"], "min_max_lineno": {"min_lineno": 173, "max_lineno": 192}, "calls": ["register_dataset.divide_chunks", "len", "print", "list", "register_dataset.submit_request"], "store_vars_calls": {"resource_chunks": "divide_chunks", "chunklist": "list"}}, "get_resources_json": {"doc": {"short_description": "Get the resources from the json"}, "args": ["resources"], "returns": [["resources"]], "min_max_lineno": {"min_lineno": 196, "max_lineno": 203}, "calls": ["isinstance", "isinstance", "open", "json.load"]}, "get_json_from_path": {"doc": {"short_description": "Get json file from path", "args": {"path": {"description": "the path of the file", "type_name": "str", "is_optional": false}}, "returns": {"description": "payload", "type_name": "dict", "is_generator": false}}, "args": ["path"], "min_max_lineno": {"min_lineno": 207, "max_lineno": 218}, "calls": ["open", "json.load"]}, "submit_request": {"doc": {"short_description": "Send a HTTP request to the datacatalog server", "args": {"url": {"description": "the url of the datacatalog server", "type_name": "str", "is_optional": false}, "payload": {"description": "the json to send to the server", "type_name": "dict", "is_optional": false}}, "returns": {"description": "the response from the server ", "type_name": "dict", "is_generator": false}}, "args": ["url", "payload", "skipReturn"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 221, "max_lineno": 249}, "calls": ["requests.post", "requests.post.raise_for_status", "logging.error", "logging.error", "logging.error", "exit", "requests.post.json", "requests.post.json", "print", "logging.error"], "store_vars_calls": {"r": "requests.post", "result": "r.json"}}, "divide_chunks": {"args": ["l", "n"], "min_max_lineno": {"min_lineno": 252, "max_lineno": 256}, "calls": ["range", "len"]}, "create_provenance_id": {"args": ["provenance_id"], "min_max_lineno": {"min_lineno": 258, "max_lineno": 279}, "calls": ["requests.post", "requests.post.raise_for_status", "logging.error", "logging.error", "exit", "requests.post.json"], "store_vars_calls": {"r": "requests.post"}}, "main": {"doc": {"short_description": "Main function"}, "min_max_lineno": {"min_lineno": 281, "max_lineno": 306}, "calls": ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "register_dataset.create_provenance_id", "open", "os.path.dirname", "os.chdir", "json.load", "register_dataset.register_dataset", "register_dataset.sync_dataset_metadata", "os.path.join", "os.getcwd"], "store_vars_calls": {"parser": "argparse.ArgumentParser", "args": "parser.parse_args", "dir_name": "os.path.dirname", "details": "json.load", "dsid": "register_dataset"}}}, "main_info": {"main_flag": 1, "main_function": "register_dataset.main", "type": "script"}, "is_test": false}