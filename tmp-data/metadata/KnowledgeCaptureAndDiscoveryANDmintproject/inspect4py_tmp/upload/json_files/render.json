{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/Dash/viz/models/upload/render.py", "fileNameBase": "render", "extension": "py"}, "dependencies": [{"import": "re", "type": "external"}], "functions": {"generate_layout": {"args": ["thread_id"], "returns": [["dlayout"]], "min_max_lineno": {"min_lineno": 11, "max_lineno": 115}, "calls": ["html.Div", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "dcc.Tabs", "html.Div", "html.H4", "dcc.Tab", "dcc.Tab", "dcc.Tab", "dcc.Tab", "html.Div", "dcc.Upload", "html.Div", "html.Div", "html.Div", "html.Div", "html.P", "html.Div", "html.Div", "html.Label", "dcc.Input", "html.Div", "html.P", "dcc.Dropdown", "html.P", "dcc.Dropdown", "html.P", "dcc.Dropdown", "html.P", "dcc.Dropdown", "html.P", "dcc.Dropdown", "html.P", "html.Div", "html.Button", "html.H3", "html.P", "dcc.Dropdown", "html.P", "dcc.Checklist", "html.Button", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.A", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "html.Button"], "store_vars_calls": {"dlayout": "html.Div"}}, "fix_dbname": {"args": ["name"], "min_max_lineno": {"min_lineno": 118, "max_lineno": 122}, "calls": ["name.strip().lower().replace().replace().replace().replace().replace().replace().replace", "name.strip().lower().replace().replace().replace().replace().replace().replace", "name.strip().lower().replace().replace().replace().replace().replace", "name.strip().lower().replace().replace().replace().replace", "name.strip().lower().replace().replace().replace", "name.strip().lower().replace().replace", "name.strip().lower().replace", "name.strip().lower", "name.strip"]}, "load_thread_data": {"args": ["thread_id"], "returns": [["df"]], "min_max_lineno": {"min_lineno": 123, "max_lineno": 157}, "calls": ["pd.DataFrame", "pd.read_sql", "print", "re.sub", "render.fix_dbname", "pd.DataFrame", "pd.DataFrame", "df.drop.drop", "pd.read_sql", "pd.read_sql", "df.drop.columns.duplicated"], "store_vars_calls": {"meta_df": "pd.DataFrame", "model_config": "re.sub", "runs_table_name": "fix_dbname", "op_table_df": "pd.DataFrame", "df": "df.drop"}}, "store_data": {"args": ["dataframe"], "returns": [["scols", "sdata"]], "min_max_lineno": {"min_lineno": 158, "max_lineno": 162}, "calls": ["dataframe.columns.values.tolist", "dataframe.to_dict"], "store_vars_calls": {"scols": "dataframe.columns.values.tolist", "sdata": "dataframe.to_dict"}}, "split_filter_part": {"args": ["filter_part"], "returns": [["name", "value"]], "min_max_lineno": {"min_lineno": 173, "max_lineno": 195}, "calls": ["filter_part.split", "value_part.strip.strip", "value_part[].replace", "operator_type[].strip", "name_part.rfind", "float", "name_part.find"], "store_vars_calls": {"value_part": "value_part.strip", "value": "float"}}, "parse_contents": {"args": ["contents", "filename"], "returns": [["df"]], "min_max_lineno": {"min_lineno": 197, "max_lineno": 214}, "calls": ["contents.split", "base64.b64decode", "pd.read_csv", "print", "html.Div", "io.StringIO", "pd.read_excel", "base64.b64decode.decode", "io.BytesIO"], "store_vars_calls": {"decoded": "base64.b64decode", "df": "pd.read_excel"}}, "create_datatable": {"args": ["dataframe"], "returns": [["dtable"]], "min_max_lineno": {"min_lineno": 216, "max_lineno": 240}, "calls": ["print", "dash_table.DataTable", "dataframe.to_dict"], "store_vars_calls": {"dtable": "dash_table.DataTable"}}, "generate_map": {"args": ["spatial_data", "lat", "lon", "hover", "color"], "returns": [["fig"]], "min_max_lineno": {"min_lineno": 242, "max_lineno": 247}, "calls": ["px.scatter_mapbox", "px.scatter_mapbox.update_layout", "px.scatter_mapbox.update_layout"], "store_vars_calls": {"fig": "px.scatter_mapbox"}}, "update_output": {"args": ["threadid", "contents", "filename"], "returns": [["uploadinfo", "sdata", "cols", "ncols", "scatterchildren", "parallelchildren", "mapchildren", "outputcontent"]], "min_max_lineno": {"min_lineno": 250, "max_lineno": 286}, "calls": ["app.callback", "pd.DataFrame", "load_thread_data.columns.values.tolist", "load_thread_data.iloc[].select_dtypes().columns.tolist", "load_thread_data.to_dict", "dcc.Graph", "dcc.Graph", "html.Div", "render.parse_contents", "html.Div", "html.P", "dcc.Graph", "Output", "Output", "Output", "Output", "Output", "Output", "Output", "Output", "Input", "Input", "State", "render.load_thread_data", "html.Div", "html.H4", "html.Div", "render.create_datatable", "html.Div", "load_thread_data.iloc[].select_dtypes"], "store_vars_calls": {"df": "load_thread_data", "cols": "df.columns.values.tolist", "ncols": "df.iloc[].select_dtypes().columns.tolist", "sdata": "df.to_dict", "scatterchildren": "dcc.Graph", "mapchildren": "dcc.Graph", "outputcontent": "html.Div", "uploadinfo": "html.Div"}}, "update_table": {"args": ["filter", "selectedpoints", "sdata", "latcol", "loncol"], "min_max_lineno": {"min_lineno": 288, "max_lineno": 316}, "calls": ["app.callback", "filter.split", "pd.DataFrame", "pd.merge.to_dict", "Output", "pd.DataFrame", "pd.merge", "render.split_filter_part", "Input", "Input", "State", "State", "State", "getattr", "dff[].str.contains", "dff[].str.startswith"], "store_vars_calls": {"filtering_expressions": "filter.split", "dff": "pd.merge", "dfPoints": "pd.DataFrame"}}, "make_scatter": {"args": ["n_clicks", "x", "y", "color", "facet_col", "facet_row", "hover_info", "tabledata", "thread"], "returns": [["fig", "config"]], "min_max_lineno": {"min_lineno": 331, "max_lineno": 369}, "calls": ["app.callback", "px.scatter", "pd.DataFrame", "pd.DataFrame().sort_values", "Output", "Output", "Input", "Input", "Input", "Input", "Input", "Input", "Input", "State", "State", "sortvalues.append", "pd.DataFrame"], "store_vars_calls": {"fig": "px.scatter", "data_graph": "pd.DataFrame().sort_values"}}, "make_map": {"args": ["n_clicks", "lat", "lon", "tabledata"], "returns": [["fig"]], "min_max_lineno": {"min_lineno": 371, "max_lineno": 386}, "calls": ["app.callback", "pd.DataFrame", "data_graph[].drop_duplicates", "render.generate_map", "Output", "Input", "Input", "Input", "State"], "store_vars_calls": {"data_graph": "data_graph[].drop_duplicates", "fig": "generate_map"}}, "store_selectedpoints": {"args": ["selectedpoints"], "min_max_lineno": {"min_lineno": 388, "max_lineno": 398}, "calls": ["app.callback", "Output", "pd.DataFrame", "pd.DataFrame.to_dict", "Input"], "store_vars_calls": {"dfPoints": "pd.DataFrame"}}, "parallel_coordinates_options": {"args": ["cols", "ncols"], "returns": [["col_options", "col_options"]], "min_max_lineno": {"min_lineno": 401, "max_lineno": 410}, "calls": ["app.callback", "dict", "Output", "Output", "Input", "Input", "sorted"]}, "make_parallel": {"args": ["n_clicks", "scale", "cols", "tabledata", "thread"], "returns": [["fig", "config", "msg"], ["fig", "msg"]], "min_max_lineno": {"min_lineno": 412, "max_lineno": 440}, "calls": ["app.callback", "cols.append", "set", "list", "pd.DataFrame", "px.parallel_coordinates", "Output", "Output", "Output", "Input", "State", "State", "State", "State", "pd.DataFrame.loc[].median"], "store_vars_calls": {"colset": "set", "collist": "list", "figdata": "pd.DataFrame", "fig": "px.parallel_coordinates"}}}, "is_test": false}