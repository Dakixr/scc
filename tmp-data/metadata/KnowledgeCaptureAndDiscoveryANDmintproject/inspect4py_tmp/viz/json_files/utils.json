{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/Dash/viz/utils.py", "fileNameBase": "utils", "extension": "py"}, "dependencies": [{"from_module": "urllib.parse", "import": "urlparse", "type": "external"}, {"from_module": "urllib.parse", "import": "parse_qs", "type": "external"}, {"from_module": "urllib.request", "import": "urlopen", "type": "external"}, {"import": "os", "type": "external"}, {"from_module": "sqlalchemy", "import": "create_engine", "type": "external"}, {"import": "dash", "type": "external"}, {"import": "dash_core_components", "alias": "dcc", "type": "external"}, {"import": "dash_html_components", "alias": "html", "type": "external"}, {"from_module": "dash.dependencies", "import": "Input", "type": "external"}, {"from_module": "dash.dependencies", "import": "Output", "type": "external"}, {"from_module": "dash.dependencies", "import": "State", "type": "external"}, {"from_module": "dash.exceptions", "import": "PreventUpdate", "type": "external"}, {"import": "dash_table", "type": "external"}, {"import": "dash_leaflet", "alias": "dl", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "plotly", "alias": "px", "type": "external"}, {"from_module": "plotly.subplots", "import": "make_subplots", "type": "external"}, {"import": "plotly", "alias": "go", "type": "external"}, {"from_module": "sqlalchemy", "import": "create_engine", "type": "external"}, {"import": "json", "type": "external"}, {"import": "time", "type": "external"}, {"import": "datetime", "alias": "dt", "type": "external"}, {"import": "base64", "type": "external"}, {"import": "io", "type": "external"}, {"from_module": "viz.app", "import": "app", "type": "external"}, {"from_module": "viz.app", "import": "engine", "type": "external"}], "functions": {"parse_search": {"args": ["search", "key"], "min_max_lineno": {"min_lineno": 36, "max_lineno": 43}, "calls": ["urllib.parse.parse_qs", "urllib.parse.urlparse", "print"], "store_vars_calls": {"query_dict": "parse_qs"}}}, "body": {"calls": ["sqlalchemy.create_engine"], "store_vars_calls": {"con": "create_engine"}}, "is_test": false}