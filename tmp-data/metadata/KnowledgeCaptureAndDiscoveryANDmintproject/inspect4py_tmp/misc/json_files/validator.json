{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/data-catalog/api/dcat_service/misc/validator.py", "fileNameBase": "validator", "extension": "py"}, "dependencies": [{"from_module": "dcat_service.misc.validation_result", "import": "ValidationResult", "type": "external"}, {"import": "uuid", "type": "external"}], "classes": {"Validator": {"min_max_lineno": {"min_lineno": 7, "max_lineno": 10}, "methods": {"validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 8, "max_lineno": 10}}}}, "ValidateNotEmpty": {"extend": ["Validator"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 25}, "methods": {"__init__": {"args": ["self", "attribute", "empty_values"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 18}, "calls": ["set"]}, "validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 25}, "calls": ["getattr", "any", "validation_result.add_error"], "store_vars_calls": {"attribute_value": "getattr"}}}}, "ValidateIsList": {"extend": ["Validator"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 37}, "methods": {"__init__": {"args": ["self", "attribute"], "min_max_lineno": {"min_lineno": 28, "max_lineno": 30}}, "validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 31, "max_lineno": 37}, "calls": ["getattr", "type", "validation_result.add_error"], "store_vars_calls": {"attribute_value": "getattr"}}}}, "ValidateIsDict": {"extend": ["Validator"], "min_max_lineno": {"min_lineno": 39, "max_lineno": 49}, "methods": {"__init__": {"args": ["self", "attribute"], "min_max_lineno": {"min_lineno": 40, "max_lineno": 42}}, "validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 43, "max_lineno": 49}, "calls": ["getattr", "type", "validation_result.add_error"], "store_vars_calls": {"attribute_value": "getattr"}}}}, "ValidateProperUUID": {"extend": ["Validator"], "min_max_lineno": {"min_lineno": 51, "max_lineno": 64}, "methods": {"__init__": {"args": ["self", "attribute"], "min_max_lineno": {"min_lineno": 52, "max_lineno": 54}}, "validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 55, "max_lineno": 64}, "calls": ["getattr", "uuid.UUID", "str", "validation_result.add_error", "validation_result.add_error"], "store_vars_calls": {"attribute_value": "getattr", "uuid_val": "uuid.UUID"}}}}, "ValidateTemporalCoverage": {"extend": ["Validator"], "min_max_lineno": {"min_lineno": 66, "max_lineno": 101}, "methods": {"__init__": {"args": ["self", "attribute", "ignore_empty_values"], "min_max_lineno": {"min_lineno": 67, "max_lineno": 71}}, "validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 72, "max_lineno": 101}, "calls": ["getattr", "validation_result.add_error", "isinstance", "validation_result.add_error", "validation_result.add_error", "validation_result.add_error", "datetime.strptime", "datetime.strptime", "validation_result.add_error", "validation_result.add_error"], "store_vars_calls": {"attribute_value": "getattr"}}}}, "ValidateSpatialCoverage": {"min_max_lineno": {"min_lineno": 103, "max_lineno": 180}, "methods": {"__init__": {"args": ["self", "attribute", "ignore_empty_values"], "min_max_lineno": {"min_lineno": 104, "max_lineno": 110}, "calls": ["set", "re.compile"], "store_vars_calls": {"self.supported_types": "set", "self.wkt_polygon_regex": "re.compile"}}, "validate": {"args": ["self", "record", "validation_result"], "min_max_lineno": {"min_lineno": 111, "max_lineno": 149}, "calls": ["getattr", "validation_result.add_error", "isinstance", "validation_result.add_error", "validation_result.add_error", "validation_result.add_error", "validation_result.add_error", "validation_result.add_error", "validator.ValidateSpatialCoverage._is_valid_wkt_polygon", "validation_result.add_error", "validator.ValidateSpatialCoverage._is_valid_bounding_box", "validation_result.add_error", "validator.ValidateSpatialCoverage._is_valid_wkt_point"], "store_vars_calls": {"attribute_value": "getattr"}}, "_is_valid_wkt_polygon": {"args": ["self", "spatial_coverage_value"], "min_max_lineno": {"min_lineno": 150, "max_lineno": 153}, "calls": ["validator.ValidateSpatialCoverage.wkt_polygon_regex.match", "str"], "store_vars_calls": {"match": "self.wkt_polygon_regex.match"}}, "_is_valid_bounding_box": {"args": ["self", "spatial_coverage_value"], "min_max_lineno": {"min_lineno": 154, "max_lineno": 163}, "calls": ["isinstance", "all", "validator.ValidateSpatialCoverage._is_numeric", "validator.ValidateSpatialCoverage._is_numeric", "validator.ValidateSpatialCoverage._is_numeric", "validator.ValidateSpatialCoverage._is_numeric", "spatial_coverage_value.get", "spatial_coverage_value.get", "spatial_coverage_value.get", "spatial_coverage_value.get"]}, "_is_valid_wkt_point": {"args": ["self", "spatial_coverage_value"], "min_max_lineno": {"min_lineno": 165, "max_lineno": 172}, "calls": ["isinstance", "all", "validator.ValidateSpatialCoverage._is_numeric", "validator.ValidateSpatialCoverage._is_numeric", "spatial_coverage_value.get", "spatial_coverage_value.get"]}, "_is_numeric": {"args": ["self", "string"], "min_max_lineno": {"min_lineno": 174, "max_lineno": 180}, "calls": ["float"]}}}, "ValidatorRunner": {"min_max_lineno": {"min_lineno": 182, "max_lineno": 196}, "methods": {"__init__": {"args": ["self", "validators"], "min_max_lineno": {"min_lineno": 183, "max_lineno": 185}}, "run_validations": {"args": ["self", "records"], "returns": [["validation_results"]], "min_max_lineno": {"min_lineno": 186, "max_lineno": 196}, "calls": ["dcat_service.misc.validation_result.ValidationResult", "validation_results.append", "validator.validate", "record.to_json"], "store_vars_calls": {"validation_result": "ValidationResult"}}}}}, "is_test": false}