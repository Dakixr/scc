{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/solution-catalog-client/solutioncatalog/api/results_api.py", "fileNameBase": "results_api", "extension": "py", "doc": {"long_description": "No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501\n\nThe version of the OpenAPI document: 0.0.1\nGenerated by: https://openapi-generator.tech", "short_description": "Solution Catalog", "full": "Solution Catalog\n\nNo description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501\n\nThe version of the OpenAPI document: 0.0.1\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"from_module": "__future__", "import": "absolute_import", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}, {"from_module": "solutioncatalog.api_client", "import": "ApiClient", "type": "external"}, {"from_module": "solutioncatalog.exceptions", "import": "ApiTypeError", "type": "external"}, {"from_module": "solutioncatalog.exceptions", "import": "ApiValueError", "type": "external"}], "classes": {"ResultsApi": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator", "full": "NOTE: This class is auto generated by OpenAPI Generator\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 162}, "methods": {"__init__": {"args": ["self", "api_client"], "min_max_lineno": {"min_lineno": 34, "max_lineno": 38}, "calls": ["solutioncatalog.api_client.ApiClient"], "store_vars_calls": {"api_client": "ApiClient"}}, "results_scenario_id_subgoal_id_thread_id_get": {"doc": {"long_description": "Gets the details of a single instance of a results  # noqa: E501\nThis method makes a synchronous HTTP request by default. To make an\nasynchronous HTTP request, please pass async_req=True\n>>> thread = api.results_scenario_id_subgoal_id_thread_id_get(scenario_id, subgoal_id, thread_id, async_req=True)\n>>> result = thread.get()", "short_description": "Get the results of a thread  # noqa: E501", "args": {"bool": {"description": "execute request asynchronously", "type_name": "async_req", "is_optional": false}, "scenario_id": {"description": "The ID of the scenario (required)", "type_name": "str", "is_optional": false}, "subgoal_id": {"description": "The ID of the subgoal (required)", "type_name": "str", "is_optional": false}, "thread_id": {"description": "The ID of the thread (required)", "type_name": "str", "is_optional": false}, "_preload_content": {"description": "if False, the urllib3.HTTPResponse object will\nbe returned without reading/decoding response\ndata. Default is True."}, "_request_timeout": {"description": "timeout setting for this request. If one\nnumber provided, it will be total request\ntimeout. It can also be a pair (tuple) of\n(connection, read) timeouts."}}, "returns": {"description": "object\nIf the method is called asynchronously,\nreturns the request thread.", "is_generator": false}}, "args": ["self", "scenario_id", "subgoal_id", "thread_id"], "min_max_lineno": {"min_lineno": 39, "max_lineno": 65}, "calls": ["results_api.ResultsApi.results_scenario_id_subgoal_id_thread_id_get_with_http_info"]}, "results_scenario_id_subgoal_id_thread_id_get_with_http_info": {"doc": {"long_description": "Gets the details of a single instance of a results  # noqa: E501\nThis method makes a synchronous HTTP request by default. To make an\nasynchronous HTTP request, please pass async_req=True\n>>> thread = api.results_scenario_id_subgoal_id_thread_id_get_with_http_info(scenario_id, subgoal_id, thread_id, async_req=True)\n>>> result = thread.get()", "short_description": "Get the results of a thread  # noqa: E501", "args": {"bool": {"description": "execute request asynchronously", "type_name": "async_req", "is_optional": false}, "scenario_id": {"description": "The ID of the scenario (required)", "type_name": "str", "is_optional": false}, "subgoal_id": {"description": "The ID of the subgoal (required)", "type_name": "str", "is_optional": false}, "thread_id": {"description": "The ID of the thread (required)", "type_name": "str", "is_optional": false}, "_return_http_data_only": {"description": "response data without head status code\nand headers"}, "_preload_content": {"description": "if False, the urllib3.HTTPResponse object will\nbe returned without reading/decoding response\ndata. Default is True."}, "_request_timeout": {"description": "timeout setting for this request. If one\nnumber provided, it will be total request\ntimeout. It can also be a pair (tuple) of\n(connection, read) timeouts."}}, "returns": {"description": "tuple(object, status_code(int), headers(HTTPHeaderDict))\nIf the method is called asynchronously,\nreturns the request thread.", "is_generator": false}}, "args": ["self", "scenario_id", "subgoal_id", "thread_id"], "min_max_lineno": {"min_lineno": 66, "max_lineno": 162}, "calls": ["locals", "all_params.append", "all_params.append", "all_params.append", "all_params.append", "six.iteritems", "results_api.ResultsApi.api_client.select_header_accept", "results_api.ResultsApi.api_client.call_api", "solutioncatalog.exceptions.ApiValueError", "solutioncatalog.exceptions.ApiValueError", "solutioncatalog.exceptions.ApiValueError", "solutioncatalog.exceptions.ApiTypeError", "locals.get", "locals.get", "locals.get", "locals.get"], "store_vars_calls": {"local_var_params": "locals"}}}}}, "is_test": false}