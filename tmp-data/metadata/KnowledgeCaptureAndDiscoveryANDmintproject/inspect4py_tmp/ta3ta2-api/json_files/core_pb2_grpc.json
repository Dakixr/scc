{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/ta3ta2-api/core_pb2_grpc.py", "fileNameBase": "core_pb2_grpc", "extension": "py"}, "dependencies": [{"import": "grpc", "type": "external"}, {"import": "core_pb2", "alias": "core__pb2", "type": "internal"}], "classes": {"CoreStub": {"extend": ["object"], "min_max_lineno": {"min_lineno": 7, "max_lineno": 71}, "methods": {"__init__": {"doc": {"short_description": "Constructor.", "args": {"channel": {"description": "A grpc.Channel."}}}, "args": ["self", "channel"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 71}, "calls": ["channel.unary_stream", "channel.unary_stream", "channel.unary_unary", "channel.unary_unary", "channel.unary_unary", "channel.unary_stream", "channel.unary_stream", "channel.unary_unary", "channel.unary_unary", "channel.unary_unary", "channel.unary_unary"], "store_vars_calls": {"self.CreatePipelines": "channel.unary_stream", "self.ExecutePipeline": "channel.unary_stream", "self.ListPipelines": "channel.unary_unary", "self.DeletePipelines": "channel.unary_unary", "self.CancelPipelines": "channel.unary_unary", "self.GetCreatePipelineResults": "channel.unary_stream", "self.GetExecutePipelineResults": "channel.unary_stream", "self.ExportPipeline": "channel.unary_unary", "self.SetProblemDoc": "channel.unary_unary", "self.StartSession": "channel.unary_unary", "self.EndSession": "channel.unary_unary"}}}}, "CoreServicer": {"extend": ["object"], "min_max_lineno": {"min_lineno": 74, "max_lineno": 168}, "methods": {"CreatePipelines": {"doc": {"long_description": "Request the TA2 system generate pipelines to satisfy a given task,\ntraining data, and targets.  The response is a stream of result messages\nindicating progress, failure, or completion of an individual pipeline\ncreation task associated with the request.  The stream is closed by the\nserver when all pipeline creation tasks have been completed.", "short_description": "Train step - multiple result messages returned via GRPC streaming."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 78, "max_lineno": 89}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "ExecutePipeline": {"doc": {"long_description": "Request the TA2 system execute a previously created pipeline against an\ninput dataset.  This response is a stream of result messages indicating\nprogress, failure, or completion of the pipeline execution task.  The\nstream is closed by the server when all pipeline execution tasks have\nbeen completed. Labels / predicted values are made available to TA3\nsystems for user inspection.", "short_description": "Predict step - multiple results messages returned via GRPC streaming."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 90, "max_lineno": 102}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "ListPipelines": {"doc": {"short_description": "Lists all pipelines in session."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 103, "max_lineno": 109}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "DeletePipelines": {"doc": {"short_description": "Deletes specified pipelines in session, returns IDs of successfully deleted pipelines. "}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 110, "max_lineno": 116}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "CancelPipelines": {"doc": {"long_description": "delete.  Returns IDs of successfully canceled pipelines.  State of a canceled pipeline is\nunspecified.  It could be useable or not.", "short_description": "Cancels processing (creation or execution) of specified pipelines in session, but does not"}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 117, "max_lineno": 125}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "GetCreatePipelineResults": {"doc": {"short_description": "Obtain results; lists existing pipelines then streams new results as they become available."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 126, "max_lineno": 132}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "GetExecutePipelineResults": {"args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 133, "max_lineno": 139}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "ExportPipeline": {"doc": {"short_description": "Export executable of a pipeline, including any optional preprocessing used in session."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 140, "max_lineno": 146}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "SetProblemDoc": {"doc": {"short_description": "Set problem schema for current session."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 147, "max_lineno": 153}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "StartSession": {"doc": {"long_description": "Create a new user session, which provides a session context for creation and execution of pipelines.", "short_description": "Session management."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 154, "max_lineno": 161}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}, "EndSession": {"doc": {"short_description": "Terminate a user session and release associated context resources."}, "args": ["self", "request", "context"], "min_max_lineno": {"min_lineno": 162, "max_lineno": 168}, "calls": ["context.set_code", "context.set_details", "NotImplementedError"]}}}}, "functions": {"add_CoreServicer_to_server": {"args": ["servicer", "server"], "min_max_lineno": {"min_lineno": 170, "max_lineno": 231}, "calls": ["grpc.method_handlers_generic_handler", "server.add_generic_rpc_handlers", "grpc.unary_stream_rpc_method_handler", "grpc.unary_stream_rpc_method_handler", "grpc.unary_unary_rpc_method_handler", "grpc.unary_unary_rpc_method_handler", "grpc.unary_unary_rpc_method_handler", "grpc.unary_stream_rpc_method_handler", "grpc.unary_stream_rpc_method_handler", "grpc.unary_unary_rpc_method_handler", "grpc.unary_unary_rpc_method_handler", "grpc.unary_unary_rpc_method_handler", "grpc.unary_unary_rpc_method_handler"], "store_vars_calls": {"generic_handler": "grpc.method_handlers_generic_handler"}}}, "is_test": false}