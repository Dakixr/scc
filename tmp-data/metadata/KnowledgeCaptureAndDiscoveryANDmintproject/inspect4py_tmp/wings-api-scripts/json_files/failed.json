{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/wings-api-scripts/failed.py", "fileNameBase": "failed", "extension": "py"}, "dependencies": [{"import": "json", "type": "external"}, {"import": "argparse", "type": "external"}, {"import": "os", "type": "external"}, {"import": "wings", "type": "external"}, {"import": "logging", "type": "external"}, {"import": "requests", "type": "external"}, {"import": "configparser", "type": "external"}, {"import": "csv", "type": "external"}, {"import": "concurrent", "type": "external"}, {"import": "urllib", "type": "external"}], "functions": {"get_sparql_info": {"args": ["execution"], "returns": [["response"]], "min_max_lineno": {"min_lineno": 37, "max_lineno": 62}, "calls": ["requests.post"], "store_vars_calls": {"response": "requests.post"}}, "show_failed": {"args": ["execution_selected"], "min_max_lineno": {"min_lineno": 64, "max_lineno": 66}, "calls": ["logger.info"]}, "write_csv_file": {"doc": {"long_description": "@type json_response:\n@param execution_id:\n@type execution_id:\n@return:\n@rtype:", "short_description": "@param json_response:"}, "args": ["filename", "list_dict"], "min_max_lineno": {"min_lineno": 96, "max_lineno": 116}, "calls": ["open", "csv.DictWriter", "logger.error", "csv.DictWriter.writerow"], "store_vars_calls": {"writer": "csv.DictWriter"}}, "details_files": {"args": ["files"], "returns": [["all_files"]], "min_max_lineno": {"min_lineno": 118, "max_lineno": 134}, "calls": ["input[].keys", "logger.info", "all_files.append", "urllib.parse.quote", "id_file.split"]}, "download_files": {"args": ["inputs_links", "execution_name", "session", "pattern"], "returns": [["all_files"]], "min_max_lineno": {"min_lineno": 136, "max_lineno": 148}, "calls": ["logger.info", "os.mkdir", "logger.info", "session.get", "open().write", "open"], "store_vars_calls": {"r": "session.get"}}, "run": {"args": ["execution", "pattern"], "min_max_lineno": {"min_lineno": 149, "max_lineno": 160}, "calls": ["wingsExecution.get_run_details().json", "failed.details_files", "failed.write_csv_file", "failed.download_files", "execution_id.split", "wingsExecution.get_run_details"], "store_vars_calls": {"execution_details": "wingsExecution.get_run_details().json", "inputs_links": "details_files"}}}, "body": {"calls": ["logging.getLogger", "logging.StreamHandler", "logging.Formatter", "argparse.ArgumentParser", "argparse.ArgumentParser.parse_args", "configparser.ConfigParser", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.setLevel", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "configparser.ConfigParser.read", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info"], "store_vars_calls": {"logger": "logging.getLogger", "handler": "logging.StreamHandler", "formatter": "logging.Formatter", "parser": "argparse.ArgumentParser", "args": "parser.parse_args", "config": "configparser.ConfigParser"}}, "main_info": {"main_flag": 1, "type": "script"}, "is_test": false}