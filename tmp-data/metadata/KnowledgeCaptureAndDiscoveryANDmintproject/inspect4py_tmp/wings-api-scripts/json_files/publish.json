{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/wings-api-scripts/publish.py", "fileNameBase": "publish", "extension": "py"}, "dependencies": [{"import": "argparse", "type": "external"}, {"import": "concurrent", "type": "external"}, {"import": "configparser", "type": "external"}, {"import": "csv", "type": "external"}, {"import": "logging", "type": "external"}, {"import": "time", "type": "external"}, {"import": "wings", "type": "external"}], "functions": {"write_csv_file": {"doc": {"long_description": "@type json_response:\n@param execution_id:\n@type execution_id:\n@return:\n@rtype:", "short_description": "@param json_response:"}, "args": ["filename", "list_dict"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 72}, "calls": ["open", "csv.DictWriter", "logger.error", "csv.DictWriter.writerow"], "store_vars_calls": {"writer": "csv.DictWriter"}}, "publish_page": {"doc": {"long_description": "@param execution: the object returned by wings\n@type execution: string\n@return:\n@rtype:", "short_description": "Publish the execution"}, "args": ["execution"], "min_max_lineno": {"min_lineno": 74, "max_lineno": 91}, "calls": ["wings.Execution.publish().json", "time.ctime", "wings.Execution.publish().json.keys", "logger.info", "logger.error", "wings.Execution.publish"], "store_vars_calls": {"publish_output": "wings.Execution.publish().json", "execution_start_time": "time.ctime"}}}, "body": {"calls": ["logging.getLogger", "logging.StreamHandler", "logging.Formatter", "argparse.ArgumentParser", "argparse.ArgumentParser.parse_args", "configparser.ConfigParser", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.setLevel", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "configparser.ConfigParser.read", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info"], "store_vars_calls": {"logger": "logging.getLogger", "handler": "logging.StreamHandler", "formatter": "logging.Formatter", "parser": "argparse.ArgumentParser", "args": "parser.parse_args", "config": "configparser.ConfigParser"}}, "main_info": {"main_flag": 1, "type": "script"}, "is_test": false}