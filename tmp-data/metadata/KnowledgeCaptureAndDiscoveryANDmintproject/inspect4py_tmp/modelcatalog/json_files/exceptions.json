{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/exceptions.py", "fileNameBase": "exceptions", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "six", "type": "external"}], "classes": {"OpenApiException": {"doc": {"short_description": "The base exception class for all OpenAPIExceptions", "full": "The base exception class for all OpenAPIExceptions"}, "extend": ["Exception"], "min_max_lineno": {"min_lineno": 16, "max_lineno": 18}}, "ApiTypeError": {"extend": ["OpenApiException", "TypeError"], "min_max_lineno": {"min_lineno": 20, "max_lineno": 47}, "methods": {"__init__": {"doc": {"short_description": "Raises an exception for TypeErrors", "args": {"msg": {"description": "the exception message\nKeyword Args:", "type_name": "str", "is_optional": false}, "path_to_item": {"description": "a list of keys an indices to get to the\ncurrent_item\nNone if unset", "type_name": "list", "is_optional": false}, "valid_classes": {"description": "the primitive classes that current item\nshould be an instance of\nNone if unset", "type_name": "tuple", "is_optional": false}, "key_type": {"description": "False if our value is a value in a dict\nTrue if it is a key in a dict\nFalse if our item is an item in a list\nNone if unset", "type_name": "bool", "is_optional": false}}}, "args": ["self", "msg", "path_to_item", "valid_classes", "key_type"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 47}, "calls": ["Exception.__init__", "exceptions.render_path"]}}}, "ApiValueError": {"extend": ["OpenApiException", "ValueError"], "min_max_lineno": {"min_lineno": 49, "max_lineno": 65}, "methods": {"__init__": {"args": ["self", "msg", "path_to_item"], "min_max_lineno": {"min_lineno": 50, "max_lineno": 65}, "calls": ["Exception.__init__", "exceptions.render_path"]}}}, "ApiKeyError": {"extend": ["OpenApiException", "KeyError"], "min_max_lineno": {"min_lineno": 67, "max_lineno": 82}, "methods": {"__init__": {"args": ["self", "msg", "path_to_item"], "min_max_lineno": {"min_lineno": 68, "max_lineno": 82}, "calls": ["Exception.__init__", "exceptions.render_path"]}}}, "ApiException": {"extend": ["OpenApiException"], "min_max_lineno": {"min_lineno": 84, "max_lineno": 110}, "methods": {"__init__": {"args": ["self", "status", "reason", "http_resp"], "min_max_lineno": {"min_lineno": 86, "max_lineno": 97}, "calls": ["http_resp.getheaders"], "store_vars_calls": {"self.headers": "http_resp.getheaders"}}, "__str__": {"doc": {"short_description": "Custom error messages for exception"}, "args": ["self"], "returns": [["error_message"]], "min_max_lineno": {"min_lineno": 98, "max_lineno": 110}}}}}, "functions": {"render_path": {"doc": {"short_description": "Returns a string representation of a path"}, "args": ["path_to_item"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 112, "max_lineno": 121}, "calls": ["isinstance"]}}, "is_test": false}