{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/configuration.py", "fileNameBase": "configuration", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"from_module": "__future__", "import": "absolute_import", "type": "external"}, {"import": "copy", "type": "external"}, {"import": "logging", "type": "external"}, {"import": "multiprocessing", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "urllib3", "type": "external"}, {"import": "six", "type": "external"}, {"from_module": "six.moves", "import": "http_client", "alias": "httplib", "type": "external"}], "classes": {"TypeWithDefault": {"extend": ["type"], "min_max_lineno": {"min_lineno": 25, "max_lineno": 37}, "methods": {"__init__": {"args": ["cls", "name", "bases", "dct"], "min_max_lineno": {"min_lineno": 26, "max_lineno": 29}, "calls": ["type.__init__"]}, "__call__": {"args": ["cls"], "min_max_lineno": {"min_lineno": 30, "max_lineno": 34}, "calls": ["copy.copy", "type.__call__"], "store_vars_calls": {"cls._default": "type.__call__"}}, "set_default": {"args": ["cls", "default"], "min_max_lineno": {"min_lineno": 35, "max_lineno": 37}, "calls": ["copy.copy"], "store_vars_calls": {"cls._default": "copy.copy"}}}}, "Configuration": {"doc": {"long_description": "Ref: https://openapi-generator.tech\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator", "full": "NOTE: This class is auto generated by OpenAPI Generator\n\nRef: https://openapi-generator.tech\nDo not edit the class manually.\n\n:param host: Base url\n:param api_key: Dict to store API key(s)\n:param api_key_prefix: Dict to store API prefix (e.g. Bearer)\n:param username: Username for HTTP basic authentication\n:param password: Password for HTTP basic authentication"}, "min_max_lineno": {"min_lineno": 39, "max_lineno": 338}, "methods": {"__init__": {"doc": {"short_description": "Constructor"}, "args": ["self", "host", "api_key", "api_key_prefix", "username", "password"], "min_max_lineno": {"min_lineno": 52, "max_lineno": 140}, "calls": ["logging.getLogger", "logging.getLogger", "multiprocessing.cpu_count"]}, "logger_file": {"doc": {"long_description": "If the logger_file is None, then add stream handler and remove file\nhandler. Otherwise, add file handler and remove stream handler.", "short_description": "The logger file.", "args": {"value": {"description": "The logger_file path."}}}, "args": ["self", "value"], "min_max_lineno": {"min_lineno": 154, "max_lineno": 172}, "calls": ["logging.FileHandler", "configuration.Configuration.logger_file_handler.setFormatter", "six.iteritems", "logger.addHandler"], "store_vars_calls": {"self.logger_file_handler": "logging.FileHandler"}}, "debug": {"doc": {"short_description": "Debug status", "args": {"value": {"description": "The debug status, True or False."}}}, "args": ["self", "value"], "min_max_lineno": {"min_lineno": 182, "max_lineno": 203}, "calls": ["six.iteritems", "six.iteritems", "logger.setLevel", "logger.setLevel"]}, "logger_format": {"doc": {"long_description": "The logger_formatter will be updated when sets logger_format.", "short_description": "The logger format.", "args": {"value": {"description": "The format string."}}}, "args": ["self", "value"], "min_max_lineno": {"min_lineno": 215, "max_lineno": 226}, "calls": ["logging.Formatter"], "store_vars_calls": {"self.logger_formatter": "logging.Formatter"}}, "get_api_key_with_prefix": {"doc": {"short_description": "Gets API key (with prefix if set).", "args": {"identifier": {"description": "The identifier of apiKey."}}, "returns": {"description": "The token for api key authentication.", "is_generator": false}}, "args": ["self", "identifier"], "returns": [["key"]], "min_max_lineno": {"min_lineno": 227, "max_lineno": 242}, "calls": ["configuration.Configuration.api_key.get", "configuration.Configuration.refresh_api_key_hook", "configuration.Configuration.api_key_prefix.get"], "store_vars_calls": {"key": "self.api_key.get", "prefix": "self.api_key_prefix.get"}}, "get_basic_auth_token": {"doc": {"short_description": "Gets HTTP basic authentication header (string).", "returns": {"description": "The token for basic HTTP authentication.", "is_generator": false}}, "args": ["self"], "min_max_lineno": {"min_lineno": 243, "max_lineno": 251}, "calls": ["urllib3.util.make_headers().get", "urllib3.util.make_headers"]}, "auth_settings": {"doc": {"short_description": "Gets Auth Settings dict for api client.", "returns": {"description": "The Auth Settings information dict.", "is_generator": false}}, "args": ["self"], "min_max_lineno": {"min_lineno": 252, "max_lineno": 265}}, "to_debug_report": {"doc": {"short_description": "Gets the essential information for debugging.", "returns": {"description": "The report for debugging.", "is_generator": false}}, "args": ["self"], "min_max_lineno": {"min_lineno": 268, "max_lineno": 279}}, "get_host_settings": {"doc": {"short_description": "Gets an array of host settings", "returns": {"description": "An array of host settings", "is_generator": false}}, "args": ["self"], "min_max_lineno": {"min_lineno": 280, "max_lineno": 297}}, "get_host_from_settings": {"doc": {"short_description": "Gets host URL based on the index and variables", "args": {"index": {"description": "array index of the host settings"}, "variables": {"description": "hash of variable and the corresponding value"}}, "returns": {"description": "URL based on host settings", "is_generator": false}}, "args": ["self", "index", "variables"], "returns": [["url"]], "min_max_lineno": {"min_lineno": 300, "max_lineno": 338}, "calls": ["configuration.Configuration.get_host_settings", "ValueError", "len", "url.replace.replace.replace", "len", "url.replace.replace.replace", "ValueError"], "store_vars_calls": {"servers": "self.get_host_settings", "url": "url.replace"}}}}}, "is_test": false}