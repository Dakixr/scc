{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/rest.py", "fileNameBase": "rest", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"from_module": "__future__", "import": "absolute_import", "type": "external"}, {"import": "io", "type": "external"}, {"import": "json", "type": "external"}, {"import": "logging", "type": "external"}, {"import": "re", "type": "external"}, {"import": "ssl", "type": "external"}, {"import": "certifi", "type": "external"}, {"import": "six", "type": "external"}, {"from_module": "six.moves.urllib.parse", "import": "urlencode", "type": "external"}, {"import": "urllib3", "type": "external"}, {"from_module": "modelcatalog.exceptions", "import": "ApiException", "type": "external"}, {"from_module": "modelcatalog.exceptions", "import": "ApiValueError", "type": "external"}], "classes": {"RESTResponse": {"extend": ["io.IOBase"], "min_max_lineno": {"min_lineno": 33, "max_lineno": 48}, "methods": {"__init__": {"args": ["self", "resp"], "min_max_lineno": {"min_lineno": 35, "max_lineno": 40}}, "getheaders": {"doc": {"short_description": "Returns a dictionary of the response headers."}, "args": ["self"], "min_max_lineno": {"min_lineno": 41, "max_lineno": 44}, "calls": ["rest.RESTResponse.urllib3_response.getheaders"]}, "getheader": {"doc": {"short_description": "Returns a given response header."}, "args": ["self", "name", "default"], "min_max_lineno": {"min_lineno": 45, "max_lineno": 48}, "calls": ["rest.RESTResponse.urllib3_response.getheader"]}}}, "RESTClientObject": {"extend": ["object"], "min_max_lineno": {"min_lineno": 50, "max_lineno": 297}, "methods": {"__init__": {"args": ["self", "configuration", "pools_size", "maxsize"], "min_max_lineno": {"min_lineno": 52, "max_lineno": 107}, "calls": ["certifi.where", "urllib3.ProxyManager", "urllib3.PoolManager"], "store_vars_calls": {"ca_certs": "certifi.where", "self.pool_manager": "urllib3.PoolManager"}}, "request": {"doc": {"short_description": "Perform requests.", "args": {"method": {"description": "http request method"}, "url": {"description": "http request url"}, "query_params": {"description": "query parameters in the url"}, "headers": {"description": "http request headers"}, "body": {"description": "request json body, for `application/json`"}, "post_params": {"description": "request post parameters,\n`application/x-www-form-urlencoded`\nand `multipart/form-data`"}, "_preload_content": {"description": "if False, the urllib3.HTTPResponse object will\nbe returned without reading/decoding response\ndata. Default is True."}, "_request_timeout": {"description": "timeout setting for this request. If one\nnumber provided, it will be total request\ntimeout. It can also be a pair (tuple) of\n(connection, read) timeouts."}}}, "args": ["self", "method", "url", "query_params", "headers", "body", "post_params", "_preload_content", "_request_timeout"], "returns": [["r"]], "min_max_lineno": {"min_lineno": 109, "max_lineno": 232}, "calls": ["method.upper.upper.upper", "modelcatalog.exceptions.ApiValueError", "isinstance", "rest.RESTResponse", "logger.debug", "modelcatalog.exceptions.ApiException", "urllib3.Timeout", "re.search", "rest.RESTClientObject.pool_manager.request", "modelcatalog.exceptions.ApiException", "rest.RESTClientObject.data.decode", "isinstance", "urllib3.Timeout", "rest.RESTClientObject.pool_manager.request", "str", "len", "six.moves.urllib.parse.urlencode", "json.dumps", "rest.RESTClientObject.pool_manager.request", "type", "rest.RESTClientObject.pool_manager.request", "isinstance", "isinstance", "rest.RESTClientObject.pool_manager.request", "modelcatalog.exceptions.ApiException"], "store_vars_calls": {"method": "method.upper", "r": "self.pool_manager.request", "timeout": "urllib3.Timeout", "r.data": "r.data.decode", "request_body": "json.dumps"}}, "GET": {"args": ["self", "url", "headers", "query_params", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 233, "max_lineno": 240}, "calls": ["rest.RESTClientObject.request"]}, "HEAD": {"args": ["self", "url", "headers", "query_params", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 241, "max_lineno": 248}, "calls": ["rest.RESTClientObject.request"]}, "OPTIONS": {"args": ["self", "url", "headers", "query_params", "post_params", "body", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 249, "max_lineno": 258}, "calls": ["rest.RESTClientObject.request"]}, "DELETE": {"args": ["self", "url", "headers", "query_params", "body", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 259, "max_lineno": 267}, "calls": ["rest.RESTClientObject.request"]}, "POST": {"args": ["self", "url", "headers", "query_params", "post_params", "body", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 268, "max_lineno": 277}, "calls": ["rest.RESTClientObject.request"]}, "PUT": {"args": ["self", "url", "headers", "query_params", "post_params", "body", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 278, "max_lineno": 287}, "calls": ["rest.RESTClientObject.request"]}, "PATCH": {"args": ["self", "url", "headers", "query_params", "post_params", "body", "_preload_content", "_request_timeout"], "min_max_lineno": {"min_lineno": 288, "max_lineno": 297}, "calls": ["rest.RESTClientObject.request"]}}}}, "body": {"calls": ["logging.getLogger"], "store_vars_calls": {"logger": "logging.getLogger"}}, "is_test": false}