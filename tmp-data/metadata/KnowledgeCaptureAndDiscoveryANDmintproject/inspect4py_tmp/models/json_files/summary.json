{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/ingestion-api-client/ingestion/models/summary.py", "fileNameBase": "summary", "extension": "py", "doc": {"long_description": "No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501\n\nOpenAPI spec version: 1.2.0\nGenerated by: https://openapi-generator.tech", "short_description": "ingestion", "full": "ingestion\n\nNo description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501\n\nOpenAPI spec version: 1.2.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"Summary": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 168}, "methods": {"__init__": {"doc": {"short_description": "Summary - a model defined in OpenAPI"}, "args": ["self", "problem_formulation", "scenario", "thread"], "min_max_lineno": {"min_lineno": 45, "max_lineno": 59}}, "problem_formulation": {"doc": {"short_description": "Sets the problem_formulation of this Summary.", "args": {"problem_formulation": {"description": "The problem_formulation of this Summary.  # noqa: E501"}}}, "args": ["self", "problem_formulation"], "min_max_lineno": {"min_lineno": 70, "max_lineno": 80}}, "scenario": {"doc": {"short_description": "Sets the scenario of this Summary.", "args": {"scenario": {"description": "The scenario of this Summary.  # noqa: E501"}}}, "args": ["self", "scenario"], "min_max_lineno": {"min_lineno": 91, "max_lineno": 101}}, "thread": {"doc": {"short_description": "Sets the thread of this Summary.", "args": {"thread": {"description": "The thread of this Summary.  # noqa: E501"}}}, "args": ["self", "thread"], "min_max_lineno": {"min_lineno": 112, "max_lineno": 122}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 123, "max_lineno": 149}, "calls": ["six.iteritems", "hasattr", "isinstance", "getattr", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 150, "max_lineno": 153}, "calls": ["pprint.pformat", "summary.Summary.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 154, "max_lineno": 157}, "calls": ["summary.Summary.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 158, "max_lineno": 164}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 165, "max_lineno": 168}}}}}, "is_test": false}