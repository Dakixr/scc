{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/data-catalog/api/dcat_service/models/variable.py", "fileNameBase": "variable", "extension": "py"}, "dependencies": [{"from_module": "dcat_service.db_models", "import": "VariableDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "Base", "type": "external"}, {"from_module": "dcat_service.models.standard_variable", "import": "StandardVariable", "type": "external"}, {"from_module": "dcat_service.models.dataset", "import": "Dataset", "type": "external"}, {"from_module": "dcat_service.misc.validation_result", "import": "ValidationResult", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "Validator", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateNotEmpty", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidatorRunner", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateProperUUID", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateIsList", "type": "external"}, {"from_module": "dcat_service", "import": "session_scope", "type": "external"}, {"from_module": "sqlalchemy", "import": "bindparam", "type": "external"}, {"from_module": "sqlalchemy", "import": "Table", "type": "external"}, {"from_module": "sqlalchemy", "import": "tuple_", "type": "external"}, {"from_module": "sqlalchemy.dialects", "import": "postgresql", "type": "external"}, {"from_module": "uuid", "import": "uuid4", "type": "external"}], "classes": {"Variable": {"min_max_lineno": {"min_lineno": 13, "max_lineno": 82}, "methods": {"__init__": {"args": ["self", "dataset_id", "name", "record_id", "standard_variable_ids", "json_metadata"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 21}}, "to_json": {"args": ["self"], "min_max_lineno": {"min_lineno": 22, "max_lineno": 29}}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 31, "max_lineno": 33}, "calls": ["str", "variable.Variable.to_json"]}, "schema_validators": {"min_max_lineno": {"min_lineno": 34, "max_lineno": 44}, "calls": ["dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateProperUUID", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateProperUUID", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateIsList", "dcat_service.misc.validator.ValidateNotEmpty"]}, "find_by_record_id": {"args": ["record_id", "session"], "min_max_lineno": {"min_lineno": 46, "max_lineno": 49}, "calls": ["session.query().filter().first", "session.query().filter", "session.query"]}, "find_by_record_ids": {"args": ["record_ids", "session"], "min_max_lineno": {"min_lineno": 50, "max_lineno": 58}, "calls": ["session.query().filter().all", "dcat_service.session_scope", "sess.query().filter().all", "session.query().filter", "sess.query().filter", "dcat_service.db_models.VariableDB.id.in_", "dcat_service.db_models.VariableDB.id.in_", "session.query", "sess.query"]}, "find_by_dataset_id_and_name": {"args": ["dataset_ids_and_names", "session"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 67}, "calls": ["session.query().filter().all", "dcat_service.session_scope", "sess.query().filter().all", "session.query().filter", "sess.query().filter", "sqlalchemy.tuple_().in_", "sqlalchemy.tuple_().in_", "session.query", "sess.query", "sqlalchemy.tuple_", "sqlalchemy.tuple_"]}, "from_json": {"args": ["variable_definition"], "min_max_lineno": {"min_lineno": 68, "max_lineno": 82}, "calls": ["variable_definition.get", "variable_definition.get", "variable_definition.get", "variable_definition.get", "variable_definition.get", "variable.Variable", "str", "uuid.uuid4"], "store_vars_calls": {"json_metadata": "variable_definition.get", "record_id": "variable_definition.get", "dataset_id": "variable_definition.get", "name": "variable_definition.get", "standard_variable_ids": "variable_definition.get"}}}}, "VariableCollectionBuilder": {"min_max_lineno": {"min_lineno": 84, "max_lineno": 231}, "methods": {"__init__": {"args": ["self", "session"], "min_max_lineno": {"min_lineno": 85, "max_lineno": 95}, "calls": ["set", "set"]}, "instantiate_variables": {"args": ["self", "variable_definitions"], "min_max_lineno": {"min_lineno": 96, "max_lineno": 103}, "calls": ["Variable.from_json.Variable.from_json", "Variable.from_json.VariableCollectionBuilder.db_records_references[].add", "Variable.from_json.VariableCollectionBuilder.db_records_references[].update", "Variable.from_json.Variable.from_json"], "store_vars_calls": {"variable": "Variable.from_json"}}, "validate_schema": {"args": ["self"], "min_max_lineno": {"min_lineno": 104, "max_lineno": 114}, "calls": ["dcat_service.misc.validator.ValidatorRunner", "dcat_service.misc.validator.ValidatorRunner.run_validations", "variable.Variable.schema_validators", "validation_result.is_valid", "validation_results_with_errors.append"], "store_vars_calls": {"validator_runner": "ValidatorRunner", "validation_results": "validator_runner.run_validations"}}, "build_record_associations": {"args": ["self"], "min_max_lineno": {"min_lineno": 115, "max_lineno": 182}, "calls": ["dcat_service.models.dataset.Dataset.find_by_record_ids", "dcat_service.models.standard_variable.StandardVariable.find_by_record_ids", "set", "set", "valid_dataset_associations.keys", "valid_standard_variables_associations.keys", "dcat_service.misc.validation_result.ValidationResult", "str", "str", "len", "variable.Variable.find_by_dataset_id_and_name", "str", "str", "str", "str", "dcat_service.misc.validation_result.ValidationResult.add_error", "set", "len", "dcat_service.misc.validation_result.ValidationResult.add_error", "dcat_service.misc.validation_result.ValidationResult.add_error", "dcat_service.misc.validation_result.ValidationResult.is_valid", "validation_results_with_errors.append", "list", "str", "str", "variable.to_json", "str", "str", "prelim_dataset_id_and_name_to_var.keys", "dcat_service.misc.validation_result.ValidationResult", "dcat_service.misc.validation_result.ValidationResult.add_error", "validation_results_with_errors.append", "variable.to_json"], "store_vars_calls": {"datasets": "Dataset.find_by_record_ids", "standard_variables": "StandardVariable.find_by_record_ids", "valid_dataset_ids": "set", "valid_standard_variable_ids": "set", "validation_result": "ValidationResult", "dataset_id": "str", "name": "str", "existing_variables": "Variable.find_by_dataset_id_and_name", "record_id": "str"}}, "persist": {"args": ["self"], "returns": [["variable_json_records"]], "min_max_lineno": {"min_lineno": 183, "max_lineno": 231}, "calls": ["sqlalchemy.Table", "sqlalchemy.dialects.postgresql.insert().values", "sqlalchemy.dialects.postgresql.insert().values.on_conflict_do_update", "sqlalchemy.Table", "sqlalchemy.dialects.postgresql.insert().values", "variable.VariableCollectionBuilder.session.execute", "variable.VariableCollectionBuilder.session.execute", "variable_json_records.append", "sqlalchemy.dialects.postgresql.insert", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.dialects.postgresql.insert", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "variables_standard_variables_json_records.append", "dcat_service.db_models.VariableDB.json_metadata.op"], "store_vars_calls": {"variable_db_table": "Table", "insert_variables_stmt": "postgresql.insert().values", "do_update_variables_stmt": "insert_variables_stmt.on_conflict_do_update", "variables_standard_variables_table": "Table", "insert_variables_standard_variables_stm": "postgresql.insert().values"}}}}}, "is_test": false}