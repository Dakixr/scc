{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/models/software_image.py", "fileNameBase": "software_image", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"SoftwareImage": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 1438}, "methods": {"__init__": {"doc": {"short_description": "SoftwareImage - a model defined in OpenAPI"}, "args": ["self", "has_download_instructions", "keywords", "has_documentation", "software_requirements", "has_download_url", "type", "has_installation_instructions", "compatible_visualization_software", "copyright_holder", "has_faq", "logo", "has_contact_person", "id", "identifier", "author", "has_build_file", "short_description", "has_execution_command", "date_published", "license", "has_source_code", "has_example", "publisher", "doi", "has_funding", "support_details", "has_version", "has_typical_data_source", "description", "reference_publication", "screenshot", "had_primary_source", "issue_tracker", "date_created", "contributor", "available_in_registry", "has_purpose", "has_executable_instructions", "has_sample_visualization", "memory_requirements", "website", "citation", "processor_requirements", "has_usage_notes", "readme", "label", "has_assumption", "operating_systems", "has_executable_notebook", "useful_for_calculating_index"], "min_max_lineno": {"min_lineno": 139, "max_lineno": 245}}, "has_download_instructions": {"doc": {"long_description": "Instructions needed to download a software component. The difference with `hasDownloadURL` is that this property captures the human readable instructions required to download software. For example, sometimes an authentication is needed, users need to fill in a form, etc.  # noqa: E501", "short_description": "Sets the has_download_instructions of this SoftwareImage.", "args": {"has_download_instructions": {"description": "The has_download_instructions of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_download_instructions"], "min_max_lineno": {"min_lineno": 257, "max_lineno": 268}}, "keywords": {"doc": {"long_description": "Keywords associated with a software component  # noqa: E501", "short_description": "Sets the keywords of this SoftwareImage.", "args": {"keywords": {"description": "The keywords of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "keywords"], "min_max_lineno": {"min_lineno": 280, "max_lineno": 291}}, "has_documentation": {"doc": {"long_description": "Pointer to the documentation of the model  # noqa: E501", "short_description": "Sets the has_documentation of this SoftwareImage.", "args": {"has_documentation": {"description": "The has_documentation of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_documentation"], "min_max_lineno": {"min_lineno": 303, "max_lineno": 314}}, "software_requirements": {"doc": {"long_description": "Software requirements needed to install a software component  # noqa: E501", "short_description": "Sets the software_requirements of this SoftwareImage.", "args": {"software_requirements": {"description": "The software_requirements of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "software_requirements"], "min_max_lineno": {"min_lineno": 326, "max_lineno": 337}}, "has_download_url": {"doc": {"long_description": "Download URL where to obtain the source/executable of the software  # noqa: E501", "short_description": "Sets the has_download_url of this SoftwareImage.", "args": {"has_download_url": {"description": "The has_download_url of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_download_url"], "min_max_lineno": {"min_lineno": 349, "max_lineno": 360}}, "type": {"doc": {"long_description": "type of the resource  # noqa: E501", "short_description": "Sets the type of this SoftwareImage.", "args": {"type": {"description": "The type of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "type"], "min_max_lineno": {"min_lineno": 372, "max_lineno": 383}}, "has_installation_instructions": {"doc": {"long_description": "Instructions required to install this particular piece of software. Installation instructions usually are available in a human-readable manner.  # noqa: E501", "short_description": "Sets the has_installation_instructions of this SoftwareImage.", "args": {"has_installation_instructions": {"description": "The has_installation_instructions of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_installation_instructions"], "min_max_lineno": {"min_lineno": 395, "max_lineno": 406}}, "compatible_visualization_software": {"doc": {"long_description": "Property that links a software component to other useful software that canbe used to visualize its outputs  # noqa: E501", "short_description": "Sets the compatible_visualization_software of this SoftwareImage.", "args": {"compatible_visualization_software": {"description": "The compatible_visualization_software of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "compatible_visualization_software"], "min_max_lineno": {"min_lineno": 418, "max_lineno": 429}}, "copyright_holder": {"doc": {"long_description": "Copyright holder for a software component  # noqa: E501", "short_description": "Sets the copyright_holder of this SoftwareImage.", "args": {"copyright_holder": {"description": "The copyright_holder of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "copyright_holder"], "min_max_lineno": {"min_lineno": 441, "max_lineno": 452}}, "has_faq": {"doc": {"long_description": "Frequently asked questions about a software  # noqa: E501", "short_description": "Sets the has_faq of this SoftwareImage.", "args": {"has_faq": {"description": "The has_faq of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_faq"], "min_max_lineno": {"min_lineno": 464, "max_lineno": 475}}, "logo": {"doc": {"long_description": "Property that links to the image used as logo for a software component  # noqa: E501", "short_description": "Sets the logo of this SoftwareImage.", "args": {"logo": {"description": "The logo of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "logo"], "min_max_lineno": {"min_lineno": 487, "max_lineno": 498}}, "has_contact_person": {"doc": {"long_description": "Contact person responsible for a software component  # noqa: E501", "short_description": "Sets the has_contact_person of this SoftwareImage.", "args": {"has_contact_person": {"description": "The has_contact_person of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_contact_person"], "min_max_lineno": {"min_lineno": 510, "max_lineno": 521}}, "id": {"doc": {"long_description": "identifier  # noqa: E501", "short_description": "Sets the id of this SoftwareImage.", "args": {"id": {"description": "The id of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "id"], "min_max_lineno": {"min_lineno": 533, "max_lineno": 544}}, "identifier": {"doc": {"long_description": "Identifier of the resource being described  # noqa: E501", "short_description": "Sets the identifier of this SoftwareImage.", "args": {"identifier": {"description": "The identifier of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "identifier"], "min_max_lineno": {"min_lineno": 556, "max_lineno": 567}}, "author": {"doc": {"long_description": "The creator of a software component  # noqa: E501", "short_description": "Sets the author of this SoftwareImage.", "args": {"author": {"description": "The author of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "author"], "min_max_lineno": {"min_lineno": 579, "max_lineno": 590}}, "has_build_file": {"doc": {"long_description": "A file (e.g., Dockerfile) with executable instructions indicating how a Software Image or a Software component is built  # noqa: E501", "short_description": "Sets the has_build_file of this SoftwareImage.", "args": {"has_build_file": {"description": "The has_build_file of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_build_file"], "min_max_lineno": {"min_lineno": 602, "max_lineno": 613}}, "short_description": {"doc": {"long_description": "A summarized description of the resource  # noqa: E501", "short_description": "Sets the short_description of this SoftwareImage.", "args": {"short_description": {"description": "The short_description of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "short_description"], "min_max_lineno": {"min_lineno": 625, "max_lineno": 636}}, "has_execution_command": {"doc": {"long_description": "Execution instructions on how to run the image  # noqa: E501", "short_description": "Sets the has_execution_command of this SoftwareImage.", "args": {"has_execution_command": {"description": "The has_execution_command of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_execution_command"], "min_max_lineno": {"min_lineno": 648, "max_lineno": 659}}, "date_published": {"doc": {"long_description": "Date when a software component was published  # noqa: E501", "short_description": "Sets the date_published of this SoftwareImage.", "args": {"date_published": {"description": "The date_published of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "date_published"], "min_max_lineno": {"min_lineno": 671, "max_lineno": 682}}, "license": {"doc": {"long_description": "License of a software component or its source code  # noqa: E501", "short_description": "Sets the license of this SoftwareImage.", "args": {"license": {"description": "The license of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "license"], "min_max_lineno": {"min_lineno": 694, "max_lineno": 705}}, "has_source_code": {"doc": {"long_description": "Property designed to link a software with its software source code (which may reside in a code repository such as GitHub)  # noqa: E501", "short_description": "Sets the has_source_code of this SoftwareImage.", "args": {"has_source_code": {"description": "The has_source_code of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_source_code"], "min_max_lineno": {"min_lineno": 717, "max_lineno": 728}}, "has_example": {"doc": {"long_description": "An example explaining a scenario where the software component was used in plain language.  # noqa: E501", "short_description": "Sets the has_example of this SoftwareImage.", "args": {"has_example": {"description": "The has_example of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_example"], "min_max_lineno": {"min_lineno": 740, "max_lineno": 751}}, "publisher": {"doc": {"long_description": "Publisher organization or person responsible for a software component  # noqa: E501", "short_description": "Sets the publisher of this SoftwareImage.", "args": {"publisher": {"description": "The publisher of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "publisher"], "min_max_lineno": {"min_lineno": 763, "max_lineno": 774}}, "doi": {"doc": {"long_description": "Digital Object Identifier associated with a software component  # noqa: E501", "short_description": "Sets the doi of this SoftwareImage.", "args": {"doi": {"description": "The doi of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "doi"], "min_max_lineno": {"min_lineno": 786, "max_lineno": 797}}, "has_funding": {"doc": {"long_description": "Property that links a software project to its funding information  # noqa: E501", "short_description": "Sets the has_funding of this SoftwareImage.", "args": {"has_funding": {"description": "The has_funding of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_funding"], "min_max_lineno": {"min_lineno": 809, "max_lineno": 820}}, "support_details": {"doc": {"long_description": "Property to link details, such as mailing lists in case a contact person is not provided  # noqa: E501", "short_description": "Sets the support_details of this SoftwareImage.", "args": {"support_details": {"description": "The support_details of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "support_details"], "min_max_lineno": {"min_lineno": 832, "max_lineno": 843}}, "has_version": {"doc": {"long_description": "Property designed to link a software component with its corresponding versions  # noqa: E501", "short_description": "Sets the has_version of this SoftwareImage.", "args": {"has_version": {"description": "The has_version of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_version"], "min_max_lineno": {"min_lineno": 855, "max_lineno": 866}}, "has_typical_data_source": {"doc": {"long_description": "Typical data sources that are used by a software component  # noqa: E501", "short_description": "Sets the has_typical_data_source of this SoftwareImage.", "args": {"has_typical_data_source": {"description": "The has_typical_data_source of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_typical_data_source"], "min_max_lineno": {"min_lineno": 878, "max_lineno": 889}}, "description": {"doc": {"long_description": "small description  # noqa: E501", "short_description": "Sets the description of this SoftwareImage.", "args": {"description": {"description": "The description of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "description"], "min_max_lineno": {"min_lineno": 901, "max_lineno": 912}}, "reference_publication": {"doc": {"long_description": "Main publication to cite for this software component  # noqa: E501", "short_description": "Sets the reference_publication of this SoftwareImage.", "args": {"reference_publication": {"description": "The reference_publication of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "reference_publication"], "min_max_lineno": {"min_lineno": 924, "max_lineno": 935}}, "screenshot": {"doc": {"long_description": "Image illustrating a snapshot of the target software  # noqa: E501", "short_description": "Sets the screenshot of this SoftwareImage.", "args": {"screenshot": {"description": "The screenshot of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "screenshot"], "min_max_lineno": {"min_lineno": 947, "max_lineno": 958}}, "had_primary_source": {"doc": {"long_description": "Property to identify the original source of the information of the annotated resource. It could be a web page, an organization, a person, some experiment notes, etc.  # noqa: E501", "short_description": "Sets the had_primary_source of this SoftwareImage.", "args": {"had_primary_source": {"description": "The had_primary_source of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "had_primary_source"], "min_max_lineno": {"min_lineno": 970, "max_lineno": 981}}, "issue_tracker": {"doc": {"long_description": "Pointer to the issue tracker of a software component  # noqa: E501", "short_description": "Sets the issue_tracker of this SoftwareImage.", "args": {"issue_tracker": {"description": "The issue_tracker of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "issue_tracker"], "min_max_lineno": {"min_lineno": 993, "max_lineno": 1004}}, "date_created": {"doc": {"long_description": "Date when a software component was created  # noqa: E501", "short_description": "Sets the date_created of this SoftwareImage.", "args": {"date_created": {"description": "The date_created of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "date_created"], "min_max_lineno": {"min_lineno": 1016, "max_lineno": 1027}}, "contributor": {"doc": {"long_description": "Contributor to a software component  # noqa: E501", "short_description": "Sets the contributor of this SoftwareImage.", "args": {"contributor": {"description": "The contributor of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "contributor"], "min_max_lineno": {"min_lineno": 1039, "max_lineno": 1050}}, "available_in_registry": {"doc": {"long_description": "Property that indicates in which registry the software image being described can be found. For example, https://hub.docker.com  # noqa: E501", "short_description": "Sets the available_in_registry of this SoftwareImage.", "args": {"available_in_registry": {"description": "The available_in_registry of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "available_in_registry"], "min_max_lineno": {"min_lineno": 1062, "max_lineno": 1073}}, "has_purpose": {"doc": {"long_description": "Objective or main functionality that can be achieved by running this software  # noqa: E501", "short_description": "Sets the has_purpose of this SoftwareImage.", "args": {"has_purpose": {"description": "The has_purpose of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_purpose"], "min_max_lineno": {"min_lineno": 1085, "max_lineno": 1096}}, "has_executable_instructions": {"doc": {"long_description": "Instructions that indicate how a software component should be executed. The difference with `hasExecutionCommand` is that the execution instructions aim to be human-readable, and have explanations between the different commands and instructions  # noqa: E501", "short_description": "Sets the has_executable_instructions of this SoftwareImage.", "args": {"has_executable_instructions": {"description": "The has_executable_instructions of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_executable_instructions"], "min_max_lineno": {"min_lineno": 1108, "max_lineno": 1119}}, "has_sample_visualization": {"doc": {"long_description": "A typical sample visualization of the softwware outputs  # noqa: E501", "short_description": "Sets the has_sample_visualization of this SoftwareImage.", "args": {"has_sample_visualization": {"description": "The has_sample_visualization of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_sample_visualization"], "min_max_lineno": {"min_lineno": 1131, "max_lineno": 1142}}, "memory_requirements": {"doc": {"long_description": "Memory requirements of a software  # noqa: E501", "short_description": "Sets the memory_requirements of this SoftwareImage.", "args": {"memory_requirements": {"description": "The memory_requirements of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "memory_requirements"], "min_max_lineno": {"min_lineno": 1154, "max_lineno": 1165}}, "website": {"doc": {"long_description": "Website of the software  # noqa: E501", "short_description": "Sets the website of this SoftwareImage.", "args": {"website": {"description": "The website of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "website"], "min_max_lineno": {"min_lineno": 1177, "max_lineno": 1188}}, "citation": {"doc": {"long_description": "How to cite this software  # noqa: E501", "short_description": "Sets the citation of this SoftwareImage.", "args": {"citation": {"description": "The citation of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "citation"], "min_max_lineno": {"min_lineno": 1200, "max_lineno": 1211}}, "processor_requirements": {"doc": {"long_description": "Processor requirements of a software component  # noqa: E501", "short_description": "Sets the processor_requirements of this SoftwareImage.", "args": {"processor_requirements": {"description": "The processor_requirements of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "processor_requirements"], "min_max_lineno": {"min_lineno": 1223, "max_lineno": 1234}}, "has_usage_notes": {"doc": {"long_description": "Property that describes the usage considerations of a particular software. These notes capture the rationale of for that software configuration, along with an explanation for sample inputs, things to consider when running the model with data, etc.  # noqa: E501", "short_description": "Sets the has_usage_notes of this SoftwareImage.", "args": {"has_usage_notes": {"description": "The has_usage_notes of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_usage_notes"], "min_max_lineno": {"min_lineno": 1246, "max_lineno": 1257}}, "readme": {"doc": {"long_description": "URl to the readme file of a software component  # noqa: E501", "short_description": "Sets the readme of this SoftwareImage.", "args": {"readme": {"description": "The readme of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "readme"], "min_max_lineno": {"min_lineno": 1269, "max_lineno": 1280}}, "label": {"doc": {"long_description": "short description of the resource  # noqa: E501", "short_description": "Sets the label of this SoftwareImage.", "args": {"label": {"description": "The label of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "label"], "min_max_lineno": {"min_lineno": 1292, "max_lineno": 1303}}, "has_assumption": {"doc": {"long_description": "Assumptions of a software, e.g. the solver being used for a particular model, the source of the data (e.g., all data must have a given resolution), etc.  # noqa: E501", "short_description": "Sets the has_assumption of this SoftwareImage.", "args": {"has_assumption": {"description": "The has_assumption of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_assumption"], "min_max_lineno": {"min_lineno": 1315, "max_lineno": 1326}}, "operating_systems": {"doc": {"long_description": "Operating systems under which a software component can operate  # noqa: E501", "short_description": "Sets the operating_systems of this SoftwareImage.", "args": {"operating_systems": {"description": "The operating_systems of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "operating_systems"], "min_max_lineno": {"min_lineno": 1338, "max_lineno": 1349}}, "has_executable_notebook": {"doc": {"long_description": "Property that links a software component with an executable notebook (e.g., Jupyter notebook) that illustrates how to use it in an executable manner.  # noqa: E501", "short_description": "Sets the has_executable_notebook of this SoftwareImage.", "args": {"has_executable_notebook": {"description": "The has_executable_notebook of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "has_executable_notebook"], "min_max_lineno": {"min_lineno": 1361, "max_lineno": 1372}}, "useful_for_calculating_index": {"doc": {"long_description": "Property that indicates that a software component (or any of its outputs) can be used to calculate a particular index. The rationale for this property is that indices are usually calculated by applying post-processing steps to the outputs of a software component.  # noqa: E501", "short_description": "Sets the useful_for_calculating_index of this SoftwareImage.", "args": {"useful_for_calculating_index": {"description": "The useful_for_calculating_index of this SoftwareImage.  # noqa: E501"}}}, "args": ["self", "useful_for_calculating_index"], "min_max_lineno": {"min_lineno": 1384, "max_lineno": 1395}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 1396, "max_lineno": 1419}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 1420, "max_lineno": 1423}, "calls": ["pprint.pformat", "software_image.SoftwareImage.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 1424, "max_lineno": 1427}, "calls": ["software_image.SoftwareImage.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 1428, "max_lineno": 1434}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 1435, "max_lineno": 1438}}}}}, "is_test": false}