{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/solution-catalog-client/solutioncatalog/models/scenario.py", "fileNameBase": "scenario", "extension": "py", "doc": {"long_description": "No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501\n\nThe version of the OpenAPI document: 0.0.1\nGenerated by: https://openapi-generator.tech", "short_description": "Solution Catalog", "full": "Solution Catalog\n\nNo description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501\n\nThe version of the OpenAPI document: 0.0.1\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"Scenario": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 217}, "methods": {"__init__": {"doc": {"short_description": "Scenario - a model defined in OpenAPI"}, "args": ["self", "id", "text", "region", "subregion", "time_period"], "min_max_lineno": {"min_lineno": 49, "max_lineno": 69}}, "id": {"doc": {"short_description": "Sets the id of this Scenario.", "args": {"id": {"description": "The id of this Scenario.  # noqa: E501"}}}, "args": ["self", "id"], "min_max_lineno": {"min_lineno": 80, "max_lineno": 90}}, "text": {"doc": {"short_description": "Sets the text of this Scenario.", "args": {"text": {"description": "The text of this Scenario.  # noqa: E501"}}}, "args": ["self", "text"], "min_max_lineno": {"min_lineno": 101, "max_lineno": 111}}, "region": {"doc": {"short_description": "Sets the region of this Scenario.", "args": {"region": {"description": "The region of this Scenario.  # noqa: E501"}}}, "args": ["self", "region"], "min_max_lineno": {"min_lineno": 122, "max_lineno": 132}}, "subregion": {"doc": {"short_description": "Sets the subregion of this Scenario.", "args": {"subregion": {"description": "The subregion of this Scenario.  # noqa: E501"}}}, "args": ["self", "subregion"], "min_max_lineno": {"min_lineno": 143, "max_lineno": 153}}, "time_period": {"doc": {"short_description": "Sets the time_period of this Scenario.", "args": {"time_period": {"description": "The time_period of this Scenario.  # noqa: E501"}}}, "args": ["self", "time_period"], "min_max_lineno": {"min_lineno": 164, "max_lineno": 174}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 175, "max_lineno": 198}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 199, "max_lineno": 202}, "calls": ["pprint.pformat", "scenario.Scenario.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 203, "max_lineno": 206}, "calls": ["scenario.Scenario.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 207, "max_lineno": 213}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 214, "max_lineno": 217}}}}}, "is_test": false}