{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/data-catalog/api/dcat_service/models/dataset.py", "fileNameBase": "dataset", "extension": "py"}, "dependencies": [{"from_module": "uuid", "import": "uuid4", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "VariableDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "DatasetDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "ResourceDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "StandardVariableDB", "type": "external"}, {"from_module": "dcat_service.models.standard_variable", "import": "StandardVariable", "type": "external"}, {"from_module": "dcat_service.models.provenance", "import": "Provenance", "type": "external"}, {"from_module": "dcat_service.misc.exception", "import": "DatasetValidationError", "type": "external"}, {"from_module": "dcat_service.misc.validation_result", "import": "ValidationResult", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidatorRunner", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "Validator", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateNotEmpty", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateProperUUID", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateIsDict", "type": "external"}, {"from_module": "dcat_service", "import": "session_scope", "type": "external"}, {"from_module": "sqlalchemy", "import": "bindparam", "type": "external"}, {"from_module": "sqlalchemy.dialects", "import": "postgresql", "type": "external"}, {"from_module": "sqlalchemy.sql", "import": "func", "type": "external"}], "classes": {"Dataset": {"min_max_lineno": {"min_lineno": 18, "max_lineno": 110}, "methods": {"__init__": {"args": ["self", "provenance_id", "record_id", "name", "description", "json_metadata", "variables"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 26}}, "to_json": {"args": ["self"], "min_max_lineno": {"min_lineno": 28, "max_lineno": 35}}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 37, "max_lineno": 39}, "calls": ["str", "dataset.Dataset.to_json"]}, "find_by_record_id": {"args": ["record_id", "session"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 63}, "calls": ["sqlalchemy.sql.func.ST_AsGeoJSON().label", "session.query().filter().first", "dcat_service.session_scope", "sess.query().filter().first", "sqlalchemy.sql.func.ST_AsGeoJSON", "session.query().filter", "sess.query().filter", "session.query", "sess.query"]}, "find_by_record_ids": {"args": ["record_ids", "session"], "min_max_lineno": {"min_lineno": 64, "max_lineno": 72}, "calls": ["session.query().filter().all", "dcat_service.session_scope", "sess.query().filter().all", "session.query().filter", "sess.query().filter", "dcat_service.db_models.DatasetDB.id.in_", "dcat_service.db_models.DatasetDB.id.in_", "session.query", "sess.query"]}, "schema_validators_for_create": {"min_max_lineno": {"min_lineno": 73, "max_lineno": 83}, "calls": ["dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateProperUUID", "dcat_service.misc.validator.ValidateProperUUID", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateIsDict"]}, "schema_validators_for_update": {"min_max_lineno": {"min_lineno": 85, "max_lineno": 95}, "calls": ["dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateProperUUID", "dcat_service.misc.validator.ValidateProperUUID", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateIsDict"]}, "from_json": {"args": ["dataset_definition"], "min_max_lineno": {"min_lineno": 97, "max_lineno": 110}, "calls": ["dataset_definition.get", "dataset_definition.get", "dataset_definition.get", "dataset_definition.get", "dataset_definition.get", "dataset.Dataset", "str", "uuid.uuid4"], "store_vars_calls": {"record_id": "dataset_definition.get", "provenance_id": "dataset_definition.get", "name": "dataset_definition.get", "description": "dataset_definition.get", "json_metadata": "dataset_definition.get"}}}}, "DatasetCollectionBuilder": {"min_max_lineno": {"min_lineno": 112, "max_lineno": 179}, "methods": {"__init__": {"args": ["self", "session"], "min_max_lineno": {"min_lineno": 113, "max_lineno": 120}, "calls": ["set"]}, "instantiate_variables": {"args": ["self", "dataset_definitions"], "min_max_lineno": {"min_lineno": 121, "max_lineno": 126}, "calls": ["Dataset.from_json.Dataset.from_json", "Dataset.from_json.DatasetCollectionBuilder.db_records_references[].add", "Dataset.from_json.DatasetCollectionBuilder.datasets.append"], "store_vars_calls": {"dataset": "Dataset.from_json"}}, "validate_schema": {"args": ["self"], "min_max_lineno": {"min_lineno": 127, "max_lineno": 137}, "calls": ["dcat_service.misc.validator.ValidatorRunner", "dcat_service.misc.validator.ValidatorRunner.run_validations", "dataset.Dataset.schema_validators_for_create", "validation_result.is_valid", "validation_results_with_errors.append"], "store_vars_calls": {"validator_runner": "ValidatorRunner", "validation_results": "validator_runner.run_validations"}}, "build_record_associations": {"args": ["self"], "min_max_lineno": {"min_lineno": 138, "max_lineno": 153}, "calls": ["dcat_service.models.provenance.Provenance.find_by_record_ids", "set", "valid_provenance_associations.keys", "str", "dcat_service.misc.validation_result.ValidationResult", "dcat_service.misc.validation_result.ValidationResult.add_error", "validation_results_with_errors.append", "dataset.to_json"], "store_vars_calls": {"provenance_arr": "Provenance.find_by_record_ids", "valid_provenance_record_ids": "set", "validation_result": "ValidationResult"}}, "persist": {"args": ["self"], "returns": [["standard_variables_json_records"]], "min_max_lineno": {"min_lineno": 154, "max_lineno": 179}, "calls": ["sqlalchemy.dialects.postgresql.insert().values", "sqlalchemy.dialects.postgresql.insert().values.on_conflict_do_update", "dataset.DatasetCollectionBuilder.session.execute", "dataset.to_json", "sqlalchemy.dialects.postgresql.insert", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.sql.func.now", "sqlalchemy.sql.func.now", "dcat_service.db_models.DatasetDB.json_metadata.op"], "store_vars_calls": {"stmt": "postgresql.insert().values", "do_update_stmt": "stmt.on_conflict_do_update"}}}}, "DatasetCollectionUpdater": {"min_max_lineno": {"min_lineno": 181, "max_lineno": 249}, "methods": {"__init__": {"args": ["self", "session"], "min_max_lineno": {"min_lineno": 182, "max_lineno": 189}, "calls": ["set"]}, "instantiate_variables": {"args": ["self", "dataset_definitions"], "min_max_lineno": {"min_lineno": 190, "max_lineno": 195}, "calls": ["Dataset.from_json.Dataset.from_json", "Dataset.from_json.DatasetCollectionUpdater.db_records_references[].add", "Dataset.from_json.DatasetCollectionUpdater.datasets.append"], "store_vars_calls": {"dataset": "Dataset.from_json"}}, "validate_schema": {"args": ["self"], "min_max_lineno": {"min_lineno": 196, "max_lineno": 206}, "calls": ["dcat_service.misc.validator.ValidatorRunner", "dcat_service.misc.validator.ValidatorRunner.run_validations", "dataset.Dataset.schema_validators_for_create", "validation_result.is_valid", "validation_results_with_errors.append"], "store_vars_calls": {"validator_runner": "ValidatorRunner", "validation_results": "validator_runner.run_validations"}}, "build_record_associations": {"args": ["self"], "min_max_lineno": {"min_lineno": 207, "max_lineno": 223}, "calls": ["dcat_service.models.provenance.Provenance.find_by_record_ids", "set", "valid_provenance_associations.keys", "str", "dcat_service.misc.validation_result.ValidationResult", "dcat_service.misc.validation_result.ValidationResult.add_error", "validation_results_with_errors.append", "dataset.to_json"], "store_vars_calls": {"provenance_arr": "Provenance.find_by_record_ids", "valid_provenance_record_ids": "set", "validation_result": "ValidationResult"}}, "persist": {"args": ["self"], "returns": [["standard_variables_json_records"]], "min_max_lineno": {"min_lineno": 224, "max_lineno": 249}, "calls": ["sqlalchemy.dialects.postgresql.insert().values", "sqlalchemy.dialects.postgresql.insert().values.on_conflict_do_update", "dataset.DatasetCollectionUpdater.session.execute", "dataset.to_json", "sqlalchemy.dialects.postgresql.insert", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.sql.func.now", "sqlalchemy.sql.func.now", "dcat_service.db_models.DatasetDB.json_metadata.op"], "store_vars_calls": {"stmt": "postgresql.insert().values", "do_update_stmt": "stmt.on_conflict_do_update"}}}}}, "is_test": false}