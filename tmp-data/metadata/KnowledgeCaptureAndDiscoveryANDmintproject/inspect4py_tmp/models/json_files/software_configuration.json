{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/models/software_configuration.py", "fileNameBase": "software_configuration", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"SoftwareConfiguration": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 1735}, "methods": {"__init__": {"doc": {"short_description": "SoftwareConfiguration - a model defined in OpenAPI"}, "args": ["self", "has_download_instructions", "keywords", "has_documentation", "has_implementation_script_location", "software_requirements", "has_download_url", "type", "has_installation_instructions", "compatible_visualization_software", "copyright_holder", "has_faq", "logo", "has_contact_person", "tag", "id", "identifier", "has_sample_execution", "has_sample_result", "author", "has_constraint", "has_build_file", "short_description", "has_execution_command", "date_published", "license", "has_source_code", "has_setup", "has_example", "publisher", "has_output", "doi", "has_funding", "has_component_location", "support_details", "has_version", "has_typical_data_source", "description", "reference_publication", "screenshot", "had_primary_source", "issue_tracker", "has_software_image", "date_created", "contributor", "has_purpose", "has_executable_instructions", "has_sample_visualization", "memory_requirements", "website", "citation", "processor_requirements", "has_usage_notes", "has_support_script_location", "readme", "label", "has_assumption", "has_parameter", "operating_systems", "has_executable_notebook", "useful_for_calculating_index", "has_input"], "min_max_lineno": {"min_lineno": 161, "max_lineno": 289}}, "has_download_instructions": {"doc": {"long_description": "Instructions needed to download a software component. The difference with `hasDownloadURL` is that this property captures the human readable instructions required to download software. For example, sometimes an authentication is needed, users need to fill in a form, etc.  # noqa: E501", "short_description": "Sets the has_download_instructions of this SoftwareConfiguration.", "args": {"has_download_instructions": {"description": "The has_download_instructions of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_download_instructions"], "min_max_lineno": {"min_lineno": 301, "max_lineno": 312}}, "keywords": {"doc": {"long_description": "Keywords associated with a software component  # noqa: E501", "short_description": "Sets the keywords of this SoftwareConfiguration.", "args": {"keywords": {"description": "The keywords of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "keywords"], "min_max_lineno": {"min_lineno": 324, "max_lineno": 335}}, "has_documentation": {"doc": {"long_description": "Pointer to the documentation of the model  # noqa: E501", "short_description": "Sets the has_documentation of this SoftwareConfiguration.", "args": {"has_documentation": {"description": "The has_documentation of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_documentation"], "min_max_lineno": {"min_lineno": 347, "max_lineno": 358}}, "has_implementation_script_location": {"doc": {"long_description": "Property that points to the main runnable script for the current function  # noqa: E501", "short_description": "Sets the has_implementation_script_location of this SoftwareConfiguration.", "args": {"has_implementation_script_location": {"description": "The has_implementation_script_location of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_implementation_script_location"], "min_max_lineno": {"min_lineno": 370, "max_lineno": 381}}, "software_requirements": {"doc": {"long_description": "Software requirements needed to install a software component  # noqa: E501", "short_description": "Sets the software_requirements of this SoftwareConfiguration.", "args": {"software_requirements": {"description": "The software_requirements of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "software_requirements"], "min_max_lineno": {"min_lineno": 393, "max_lineno": 404}}, "has_download_url": {"doc": {"long_description": "Download URL where to obtain the source/executable of the software  # noqa: E501", "short_description": "Sets the has_download_url of this SoftwareConfiguration.", "args": {"has_download_url": {"description": "The has_download_url of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_download_url"], "min_max_lineno": {"min_lineno": 416, "max_lineno": 427}}, "type": {"doc": {"long_description": "type of the resource  # noqa: E501", "short_description": "Sets the type of this SoftwareConfiguration.", "args": {"type": {"description": "The type of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "type"], "min_max_lineno": {"min_lineno": 439, "max_lineno": 450}}, "has_installation_instructions": {"doc": {"long_description": "Instructions required to install this particular piece of software. Installation instructions usually are available in a human-readable manner.  # noqa: E501", "short_description": "Sets the has_installation_instructions of this SoftwareConfiguration.", "args": {"has_installation_instructions": {"description": "The has_installation_instructions of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_installation_instructions"], "min_max_lineno": {"min_lineno": 462, "max_lineno": 473}}, "compatible_visualization_software": {"doc": {"long_description": "Property that links a software component to other useful software that canbe used to visualize its outputs  # noqa: E501", "short_description": "Sets the compatible_visualization_software of this SoftwareConfiguration.", "args": {"compatible_visualization_software": {"description": "The compatible_visualization_software of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "compatible_visualization_software"], "min_max_lineno": {"min_lineno": 485, "max_lineno": 496}}, "copyright_holder": {"doc": {"long_description": "Copyright holder for a software component  # noqa: E501", "short_description": "Sets the copyright_holder of this SoftwareConfiguration.", "args": {"copyright_holder": {"description": "The copyright_holder of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "copyright_holder"], "min_max_lineno": {"min_lineno": 508, "max_lineno": 519}}, "has_faq": {"doc": {"long_description": "Frequently asked questions about a software  # noqa: E501", "short_description": "Sets the has_faq of this SoftwareConfiguration.", "args": {"has_faq": {"description": "The has_faq of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_faq"], "min_max_lineno": {"min_lineno": 531, "max_lineno": 542}}, "logo": {"doc": {"long_description": "Property that links to the image used as logo for a software component  # noqa: E501", "short_description": "Sets the logo of this SoftwareConfiguration.", "args": {"logo": {"description": "The logo of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "logo"], "min_max_lineno": {"min_lineno": 554, "max_lineno": 565}}, "has_contact_person": {"doc": {"long_description": "Contact person responsible for a software component  # noqa: E501", "short_description": "Sets the has_contact_person of this SoftwareConfiguration.", "args": {"has_contact_person": {"description": "The has_contact_person of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_contact_person"], "min_max_lineno": {"min_lineno": 577, "max_lineno": 588}}, "tag": {"doc": {"long_description": "Tag used to annotate a version or a software configuration. This annotation is useful to show which version is the latest, or which version is deprecated. Supported tags are: \"latest\", \"deprecated\"  # noqa: E501", "short_description": "Sets the tag of this SoftwareConfiguration.", "args": {"tag": {"description": "The tag of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "tag"], "min_max_lineno": {"min_lineno": 600, "max_lineno": 611}}, "id": {"doc": {"long_description": "identifier  # noqa: E501", "short_description": "Sets the id of this SoftwareConfiguration.", "args": {"id": {"description": "The id of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "id"], "min_max_lineno": {"min_lineno": 623, "max_lineno": 634}}, "identifier": {"doc": {"long_description": "Identifier of the resource being described  # noqa: E501", "short_description": "Sets the identifier of this SoftwareConfiguration.", "args": {"identifier": {"description": "The identifier of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "identifier"], "min_max_lineno": {"min_lineno": 646, "max_lineno": 657}}, "has_sample_execution": {"doc": {"long_description": "Property pointing to a sample execution of a software configuration  # noqa: E501", "short_description": "Sets the has_sample_execution of this SoftwareConfiguration.", "args": {"has_sample_execution": {"description": "The has_sample_execution of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_sample_execution"], "min_max_lineno": {"min_lineno": 669, "max_lineno": 680}}, "has_sample_result": {"doc": {"long_description": "Property designed to link a software configuration to a sample resource resulting from its execution  # noqa: E501", "short_description": "Sets the has_sample_result of this SoftwareConfiguration.", "args": {"has_sample_result": {"description": "The has_sample_result of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_sample_result"], "min_max_lineno": {"min_lineno": 692, "max_lineno": 703}}, "author": {"doc": {"long_description": "The creator of a software component  # noqa: E501", "short_description": "Sets the author of this SoftwareConfiguration.", "args": {"author": {"description": "The author of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "author"], "min_max_lineno": {"min_lineno": 715, "max_lineno": 726}}, "has_constraint": {"doc": {"long_description": "Constraint or rule associated to a software configuration. For example: \"This model accepts only monthly data\", or \"all inputs of this model configuration must share the same location\". More structured restrictions, such as Jena rules or SWRL rules may also be captured with this property  # noqa: E501", "short_description": "Sets the has_constraint of this SoftwareConfiguration.", "args": {"has_constraint": {"description": "The has_constraint of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_constraint"], "min_max_lineno": {"min_lineno": 738, "max_lineno": 749}}, "has_build_file": {"doc": {"long_description": "A file (e.g., Dockerfile) with executable instructions indicating how a Software Image or a Software component is built  # noqa: E501", "short_description": "Sets the has_build_file of this SoftwareConfiguration.", "args": {"has_build_file": {"description": "The has_build_file of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_build_file"], "min_max_lineno": {"min_lineno": 761, "max_lineno": 772}}, "short_description": {"doc": {"long_description": "A summarized description of the resource  # noqa: E501", "short_description": "Sets the short_description of this SoftwareConfiguration.", "args": {"short_description": {"description": "The short_description of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "short_description"], "min_max_lineno": {"min_lineno": 784, "max_lineno": 795}}, "has_execution_command": {"doc": {"long_description": "Execution instructions on how to run the image  # noqa: E501", "short_description": "Sets the has_execution_command of this SoftwareConfiguration.", "args": {"has_execution_command": {"description": "The has_execution_command of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_execution_command"], "min_max_lineno": {"min_lineno": 807, "max_lineno": 818}}, "date_published": {"doc": {"long_description": "Date when a software component was published  # noqa: E501", "short_description": "Sets the date_published of this SoftwareConfiguration.", "args": {"date_published": {"description": "The date_published of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "date_published"], "min_max_lineno": {"min_lineno": 830, "max_lineno": 841}}, "license": {"doc": {"long_description": "License of a software component or its source code  # noqa: E501", "short_description": "Sets the license of this SoftwareConfiguration.", "args": {"license": {"description": "The license of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "license"], "min_max_lineno": {"min_lineno": 853, "max_lineno": 864}}, "has_source_code": {"doc": {"long_description": "Property designed to link a software with its software source code (which may reside in a code repository such as GitHub)  # noqa: E501", "short_description": "Sets the has_source_code of this SoftwareConfiguration.", "args": {"has_source_code": {"description": "The has_source_code of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_source_code"], "min_max_lineno": {"min_lineno": 876, "max_lineno": 887}}, "has_setup": {"doc": {"long_description": "Property used to define configurations with some fixed resources and values. The rationale of this property is to allow predefined configurations  # noqa: E501", "short_description": "Sets the has_setup of this SoftwareConfiguration.", "args": {"has_setup": {"description": "The has_setup of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_setup"], "min_max_lineno": {"min_lineno": 899, "max_lineno": 910}}, "has_example": {"doc": {"long_description": "An example explaining a scenario where the software component was used in plain language.  # noqa: E501", "short_description": "Sets the has_example of this SoftwareConfiguration.", "args": {"has_example": {"description": "The has_example of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_example"], "min_max_lineno": {"min_lineno": 922, "max_lineno": 933}}, "publisher": {"doc": {"long_description": "Publisher organization or person responsible for a software component  # noqa: E501", "short_description": "Sets the publisher of this SoftwareConfiguration.", "args": {"publisher": {"description": "The publisher of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "publisher"], "min_max_lineno": {"min_lineno": 945, "max_lineno": 956}}, "has_output": {"doc": {"long_description": "Property that expresses what are the outputs of a model  # noqa: E501", "short_description": "Sets the has_output of this SoftwareConfiguration.", "args": {"has_output": {"description": "The has_output of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_output"], "min_max_lineno": {"min_lineno": 968, "max_lineno": 979}}, "doi": {"doc": {"long_description": "Digital Object Identifier associated with a software component  # noqa: E501", "short_description": "Sets the doi of this SoftwareConfiguration.", "args": {"doi": {"description": "The doi of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "doi"], "min_max_lineno": {"min_lineno": 991, "max_lineno": 1002}}, "has_funding": {"doc": {"long_description": "Property that links a software project to its funding information  # noqa: E501", "short_description": "Sets the has_funding of this SoftwareConfiguration.", "args": {"has_funding": {"description": "The has_funding of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_funding"], "min_max_lineno": {"min_lineno": 1014, "max_lineno": 1025}}, "has_component_location": {"doc": {"long_description": "Location of the aggregation of all the files needed to execute the component. Usually a zip file including the run script and support scripts, including specification files  # noqa: E501", "short_description": "Sets the has_component_location of this SoftwareConfiguration.", "args": {"has_component_location": {"description": "The has_component_location of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_component_location"], "min_max_lineno": {"min_lineno": 1037, "max_lineno": 1048}}, "support_details": {"doc": {"long_description": "Property to link details, such as mailing lists in case a contact person is not provided  # noqa: E501", "short_description": "Sets the support_details of this SoftwareConfiguration.", "args": {"support_details": {"description": "The support_details of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "support_details"], "min_max_lineno": {"min_lineno": 1060, "max_lineno": 1071}}, "has_version": {"doc": {"long_description": "Property designed to link a software component with its corresponding versions  # noqa: E501", "short_description": "Sets the has_version of this SoftwareConfiguration.", "args": {"has_version": {"description": "The has_version of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_version"], "min_max_lineno": {"min_lineno": 1083, "max_lineno": 1094}}, "has_typical_data_source": {"doc": {"long_description": "Typical data sources that are used by a software component  # noqa: E501", "short_description": "Sets the has_typical_data_source of this SoftwareConfiguration.", "args": {"has_typical_data_source": {"description": "The has_typical_data_source of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_typical_data_source"], "min_max_lineno": {"min_lineno": 1106, "max_lineno": 1117}}, "description": {"doc": {"long_description": "small description  # noqa: E501", "short_description": "Sets the description of this SoftwareConfiguration.", "args": {"description": {"description": "The description of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "description"], "min_max_lineno": {"min_lineno": 1129, "max_lineno": 1140}}, "reference_publication": {"doc": {"long_description": "Main publication to cite for this software component  # noqa: E501", "short_description": "Sets the reference_publication of this SoftwareConfiguration.", "args": {"reference_publication": {"description": "The reference_publication of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "reference_publication"], "min_max_lineno": {"min_lineno": 1152, "max_lineno": 1163}}, "screenshot": {"doc": {"long_description": "Image illustrating a snapshot of the target software  # noqa: E501", "short_description": "Sets the screenshot of this SoftwareConfiguration.", "args": {"screenshot": {"description": "The screenshot of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "screenshot"], "min_max_lineno": {"min_lineno": 1175, "max_lineno": 1186}}, "had_primary_source": {"doc": {"long_description": "Property to identify the original source of the information of the annotated resource. It could be a web page, an organization, a person, some experiment notes, etc.  # noqa: E501", "short_description": "Sets the had_primary_source of this SoftwareConfiguration.", "args": {"had_primary_source": {"description": "The had_primary_source of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "had_primary_source"], "min_max_lineno": {"min_lineno": 1198, "max_lineno": 1209}}, "issue_tracker": {"doc": {"long_description": "Pointer to the issue tracker of a software component  # noqa: E501", "short_description": "Sets the issue_tracker of this SoftwareConfiguration.", "args": {"issue_tracker": {"description": "The issue_tracker of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "issue_tracker"], "min_max_lineno": {"min_lineno": 1221, "max_lineno": 1232}}, "has_software_image": {"doc": {"long_description": "Function to link a function with its corresponding container  # noqa: E501", "short_description": "Sets the has_software_image of this SoftwareConfiguration.", "args": {"has_software_image": {"description": "The has_software_image of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_software_image"], "min_max_lineno": {"min_lineno": 1244, "max_lineno": 1255}}, "date_created": {"doc": {"long_description": "Date when a software component was created  # noqa: E501", "short_description": "Sets the date_created of this SoftwareConfiguration.", "args": {"date_created": {"description": "The date_created of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "date_created"], "min_max_lineno": {"min_lineno": 1267, "max_lineno": 1278}}, "contributor": {"doc": {"long_description": "Contributor to a software component  # noqa: E501", "short_description": "Sets the contributor of this SoftwareConfiguration.", "args": {"contributor": {"description": "The contributor of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "contributor"], "min_max_lineno": {"min_lineno": 1290, "max_lineno": 1301}}, "has_purpose": {"doc": {"long_description": "Objective or main functionality that can be achieved by running this software  # noqa: E501", "short_description": "Sets the has_purpose of this SoftwareConfiguration.", "args": {"has_purpose": {"description": "The has_purpose of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_purpose"], "min_max_lineno": {"min_lineno": 1313, "max_lineno": 1324}}, "has_executable_instructions": {"doc": {"long_description": "Instructions that indicate how a software component should be executed. The difference with `hasExecutionCommand` is that the execution instructions aim to be human-readable, and have explanations between the different commands and instructions  # noqa: E501", "short_description": "Sets the has_executable_instructions of this SoftwareConfiguration.", "args": {"has_executable_instructions": {"description": "The has_executable_instructions of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_executable_instructions"], "min_max_lineno": {"min_lineno": 1336, "max_lineno": 1347}}, "has_sample_visualization": {"doc": {"long_description": "A typical sample visualization of the softwware outputs  # noqa: E501", "short_description": "Sets the has_sample_visualization of this SoftwareConfiguration.", "args": {"has_sample_visualization": {"description": "The has_sample_visualization of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_sample_visualization"], "min_max_lineno": {"min_lineno": 1359, "max_lineno": 1370}}, "memory_requirements": {"doc": {"long_description": "Memory requirements of a software  # noqa: E501", "short_description": "Sets the memory_requirements of this SoftwareConfiguration.", "args": {"memory_requirements": {"description": "The memory_requirements of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "memory_requirements"], "min_max_lineno": {"min_lineno": 1382, "max_lineno": 1393}}, "website": {"doc": {"long_description": "Website of the software  # noqa: E501", "short_description": "Sets the website of this SoftwareConfiguration.", "args": {"website": {"description": "The website of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "website"], "min_max_lineno": {"min_lineno": 1405, "max_lineno": 1416}}, "citation": {"doc": {"long_description": "How to cite this software  # noqa: E501", "short_description": "Sets the citation of this SoftwareConfiguration.", "args": {"citation": {"description": "The citation of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "citation"], "min_max_lineno": {"min_lineno": 1428, "max_lineno": 1439}}, "processor_requirements": {"doc": {"long_description": "Processor requirements of a software component  # noqa: E501", "short_description": "Sets the processor_requirements of this SoftwareConfiguration.", "args": {"processor_requirements": {"description": "The processor_requirements of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "processor_requirements"], "min_max_lineno": {"min_lineno": 1451, "max_lineno": 1462}}, "has_usage_notes": {"doc": {"long_description": "Property that describes the usage considerations of a particular software. These notes capture the rationale of for that software configuration, along with an explanation for sample inputs, things to consider when running the model with data, etc.  # noqa: E501", "short_description": "Sets the has_usage_notes of this SoftwareConfiguration.", "args": {"has_usage_notes": {"description": "The has_usage_notes of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_usage_notes"], "min_max_lineno": {"min_lineno": 1474, "max_lineno": 1485}}, "has_support_script_location": {"doc": {"long_description": "Property that links to the location of scripts that may be used from the main runnable script.  # noqa: E501", "short_description": "Sets the has_support_script_location of this SoftwareConfiguration.", "args": {"has_support_script_location": {"description": "The has_support_script_location of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_support_script_location"], "min_max_lineno": {"min_lineno": 1497, "max_lineno": 1508}}, "readme": {"doc": {"long_description": "URl to the readme file of a software component  # noqa: E501", "short_description": "Sets the readme of this SoftwareConfiguration.", "args": {"readme": {"description": "The readme of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "readme"], "min_max_lineno": {"min_lineno": 1520, "max_lineno": 1531}}, "label": {"doc": {"long_description": "short description of the resource  # noqa: E501", "short_description": "Sets the label of this SoftwareConfiguration.", "args": {"label": {"description": "The label of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "label"], "min_max_lineno": {"min_lineno": 1543, "max_lineno": 1554}}, "has_assumption": {"doc": {"long_description": "Assumptions of a software, e.g. the solver being used for a particular model, the source of the data (e.g., all data must have a given resolution), etc.  # noqa: E501", "short_description": "Sets the has_assumption of this SoftwareConfiguration.", "args": {"has_assumption": {"description": "The has_assumption of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_assumption"], "min_max_lineno": {"min_lineno": 1566, "max_lineno": 1577}}, "has_parameter": {"doc": {"long_description": "Property that indicates the parameters of a model configuration  # noqa: E501", "short_description": "Sets the has_parameter of this SoftwareConfiguration.", "args": {"has_parameter": {"description": "The has_parameter of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_parameter"], "min_max_lineno": {"min_lineno": 1589, "max_lineno": 1600}}, "operating_systems": {"doc": {"long_description": "Operating systems under which a software component can operate  # noqa: E501", "short_description": "Sets the operating_systems of this SoftwareConfiguration.", "args": {"operating_systems": {"description": "The operating_systems of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "operating_systems"], "min_max_lineno": {"min_lineno": 1612, "max_lineno": 1623}}, "has_executable_notebook": {"doc": {"long_description": "Property that links a software component with an executable notebook (e.g., Jupyter notebook) that illustrates how to use it in an executable manner.  # noqa: E501", "short_description": "Sets the has_executable_notebook of this SoftwareConfiguration.", "args": {"has_executable_notebook": {"description": "The has_executable_notebook of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_executable_notebook"], "min_max_lineno": {"min_lineno": 1635, "max_lineno": 1646}}, "useful_for_calculating_index": {"doc": {"long_description": "Property that indicates that a software component (or any of its outputs) can be used to calculate a particular index. The rationale for this property is that indices are usually calculated by applying post-processing steps to the outputs of a software component.  # noqa: E501", "short_description": "Sets the useful_for_calculating_index of this SoftwareConfiguration.", "args": {"useful_for_calculating_index": {"description": "The useful_for_calculating_index of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "useful_for_calculating_index"], "min_max_lineno": {"min_lineno": 1658, "max_lineno": 1669}}, "has_input": {"doc": {"long_description": "Property that links a model configuration to the input types expected by it.  # noqa: E501", "short_description": "Sets the has_input of this SoftwareConfiguration.", "args": {"has_input": {"description": "The has_input of this SoftwareConfiguration.  # noqa: E501"}}}, "args": ["self", "has_input"], "min_max_lineno": {"min_lineno": 1681, "max_lineno": 1692}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 1693, "max_lineno": 1716}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 1717, "max_lineno": 1720}, "calls": ["pprint.pformat", "software_configuration.SoftwareConfiguration.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 1721, "max_lineno": 1724}, "calls": ["software_configuration.SoftwareConfiguration.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 1725, "max_lineno": 1731}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 1732, "max_lineno": 1735}}}}}, "is_test": false}