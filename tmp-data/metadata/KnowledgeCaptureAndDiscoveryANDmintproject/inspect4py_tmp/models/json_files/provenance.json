{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/data-catalog/api/dcat_service/models/provenance.py", "fileNameBase": "provenance", "extension": "py"}, "dependencies": [{"from_module": "dcat_service.db_models", "import": "ProvenanceDB", "type": "external"}, {"from_module": "dcat_service.misc.exception", "import": "ProvenanceValidationError", "type": "external"}, {"from_module": "dcat_service.misc.validation_result", "import": "ValidationResult", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "Validator", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateNotEmpty", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidateProperUUID", "type": "external"}, {"from_module": "dcat_service.misc.validator", "import": "ValidatorRunner", "type": "external"}, {"from_module": "dcat_service", "import": "session_scope", "type": "external"}, {"import": "uuid", "type": "external"}, {"from_module": "sqlalchemy", "import": "bindparam", "type": "external"}, {"from_module": "sqlalchemy.dialects", "import": "postgresql", "type": "external"}, {"from_module": "sqlalchemy.sql", "import": "func", "type": "external"}], "classes": {"Provenance": {"min_max_lineno": {"min_lineno": 14, "max_lineno": 66}, "methods": {"__init__": {"args": ["self", "record_id", "name", "provenance_type", "json_metadata"], "min_max_lineno": {"min_lineno": 15, "max_lineno": 20}}, "to_json": {"args": ["self"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 27}}, "find_by_record_id": {"args": ["record_id", "session"], "min_max_lineno": {"min_lineno": 29, "max_lineno": 37}, "calls": ["uuid.uuid3", "session.query().filter().first", "dcat_service.session_scope", "sess.query().filter().first", "session.query().filter", "sess.query().filter", "session.query", "sess.query"], "store_vars_calls": {"record_id": "uuid.uuid3"}}, "find_by_record_ids": {"args": ["record_ids", "session"], "min_max_lineno": {"min_lineno": 38, "max_lineno": 46}, "calls": ["session.query().filter().all", "dcat_service.session_scope", "sess.query().filter().all", "session.query().filter", "sess.query().filter", "dcat_service.db_models.ProvenanceDB.id.in_", "dcat_service.db_models.ProvenanceDB.id.in_", "session.query", "sess.query"]}, "from_json": {"args": ["provenance_definition"], "min_max_lineno": {"min_lineno": 47, "max_lineno": 58}, "calls": ["provenance_definition.get", "provenance_definition.get", "provenance_definition.get", "provenance_definition.get", "provenance.Provenance", "str", "uuid.uuid4"], "store_vars_calls": {"record_id": "provenance_definition.get", "name": "provenance_definition.get", "provenance_type": "provenance_definition.get", "json_metadata": "provenance_definition.get"}}, "schema_validators": {"min_max_lineno": {"min_lineno": 59, "max_lineno": 66}, "calls": ["dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateNotEmpty", "dcat_service.misc.validator.ValidateProperUUID"]}}}, "ProvenanceCollectionBuilder": {"min_max_lineno": {"min_lineno": 69, "max_lineno": 115}, "methods": {"__init__": {"args": ["self", "session"], "min_max_lineno": {"min_lineno": 70, "max_lineno": 76}}, "instantiate_provenance_arr": {"args": ["self", "provenance_definitions"], "min_max_lineno": {"min_lineno": 77, "max_lineno": 79}, "calls": ["provenance.Provenance.from_json"]}, "validate_schema": {"args": ["self"], "min_max_lineno": {"min_lineno": 80, "max_lineno": 90}, "calls": ["dcat_service.misc.validator.ValidatorRunner", "dcat_service.misc.validator.ValidatorRunner.run_validations", "provenance.Provenance.schema_validators", "validation_result.is_valid", "validation_results_with_errors.append"], "store_vars_calls": {"validator_runner": "ValidatorRunner", "validation_results": "validator_runner.run_validations"}}, "build_record_associations": {"args": ["self"], "min_max_lineno": {"min_lineno": 91, "max_lineno": 94}}, "persist": {"args": ["self"], "returns": [["provenance_json_records"]], "min_max_lineno": {"min_lineno": 95, "max_lineno": 115}, "calls": ["sqlalchemy.dialects.postgresql.insert().values", "sqlalchemy.dialects.postgresql.insert().values.on_conflict_do_update", "provenance.ProvenanceCollectionBuilder.session.execute", "provenance.to_json", "sqlalchemy.dialects.postgresql.insert", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam", "sqlalchemy.bindparam"], "store_vars_calls": {"stmt": "postgresql.insert().values", "do_update_stmt": "stmt.on_conflict_do_update"}}}}}, "is_test": false}