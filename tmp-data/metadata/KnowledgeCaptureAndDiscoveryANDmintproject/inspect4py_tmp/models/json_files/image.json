{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/models/image.py", "fileNameBase": "image", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"Image": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 520}, "methods": {"__init__": {"doc": {"short_description": "Image - a model defined in OpenAPI"}, "args": ["self", "has_dimensionality", "has_format", "path_location", "has_file_structure", "description", "has_data_transformation", "has_presentation", "label", "type", "has_fixed_resource", "is_transformed_from", "had_primary_source", "has_data_transformation_setup", "position", "id", "value"], "min_max_lineno": {"min_lineno": 71, "max_lineno": 109}}, "has_dimensionality": {"doc": {"long_description": "Property to indicate dimensionality of the input or output of a dataset specification  # noqa: E501", "short_description": "Sets the has_dimensionality of this Image.", "args": {"has_dimensionality": {"description": "The has_dimensionality of this Image.  # noqa: E501"}}}, "args": ["self", "has_dimensionality"], "min_max_lineno": {"min_lineno": 121, "max_lineno": 132}}, "has_format": {"doc": {"long_description": "Format followed by a file. For example, txt, nc, etc.  # noqa: E501", "short_description": "Sets the has_format of this Image.", "args": {"has_format": {"description": "The has_format of this Image.  # noqa: E501"}}}, "args": ["self", "has_format"], "min_max_lineno": {"min_lineno": 144, "max_lineno": 155}}, "path_location": {"doc": {"long_description": "Property that indicates the relative path of an input or output with respect to the folder structure of the executable.   For example, let's assume we have an input that has to exist in the folder `/datasets` or the executable will not work. This property ensures that this knowledge is captured for a given software component execution.  In this case the property would capture this as follows:  ``` :input_prep a sd:DatasetSpecification . :input_prep rdfs:label \"precipitation file\" . :input_precip sd:pathLocation \"/datasets/\". ```  # noqa: E501", "short_description": "Sets the path_location of this Image.", "args": {"path_location": {"description": "The path_location of this Image.  # noqa: E501"}}}, "args": ["self", "path_location"], "min_max_lineno": {"min_lineno": 167, "max_lineno": 178}}, "has_file_structure": {"doc": {"long_description": "Relates a dataset specification to the data structure definition  # noqa: E501", "short_description": "Sets the has_file_structure of this Image.", "args": {"has_file_structure": {"description": "The has_file_structure of this Image.  # noqa: E501"}}}, "args": ["self", "has_file_structure"], "min_max_lineno": {"min_lineno": 190, "max_lineno": 201}}, "description": {"doc": {"long_description": "small description  # noqa: E501", "short_description": "Sets the description of this Image.", "args": {"description": {"description": "The description of this Image.  # noqa: E501"}}}, "args": ["self", "description"], "min_max_lineno": {"min_lineno": 213, "max_lineno": 224}}, "has_data_transformation": {"doc": {"long_description": "Property that associates an input/output with their corresponding data transformation.  # noqa: E501", "short_description": "Sets the has_data_transformation of this Image.", "args": {"has_data_transformation": {"description": "The has_data_transformation of this Image.  # noqa: E501"}}}, "args": ["self", "has_data_transformation"], "min_max_lineno": {"min_lineno": 236, "max_lineno": 247}}, "has_presentation": {"doc": {"long_description": "Property that links an instance of a dataset (or a dataset specification) to the presentation of a variable contained (or expected to be contained) on it.  # noqa: E501", "short_description": "Sets the has_presentation of this Image.", "args": {"has_presentation": {"description": "The has_presentation of this Image.  # noqa: E501"}}}, "args": ["self", "has_presentation"], "min_max_lineno": {"min_lineno": 259, "max_lineno": 270}}, "label": {"doc": {"long_description": "short description of the resource  # noqa: E501", "short_description": "Sets the label of this Image.", "args": {"label": {"description": "The label of this Image.  # noqa: E501"}}}, "args": ["self", "label"], "min_max_lineno": {"min_lineno": 282, "max_lineno": 293}}, "type": {"doc": {"long_description": "type of the resource  # noqa: E501", "short_description": "Sets the type of this Image.", "args": {"type": {"description": "The type of this Image.  # noqa: E501"}}}, "args": ["self", "type"], "min_max_lineno": {"min_lineno": 305, "max_lineno": 316}}, "has_fixed_resource": {"doc": {"long_description": "Property that links a parameter or an input to a fixed value. For example, in a given configuration a parameter with the planting date for a model could be fixed to avoid the user changing it for that region.  # noqa: E501", "short_description": "Sets the has_fixed_resource of this Image.", "args": {"has_fixed_resource": {"description": "The has_fixed_resource of this Image.  # noqa: E501"}}}, "args": ["self", "has_fixed_resource"], "min_max_lineno": {"min_lineno": 328, "max_lineno": 339}}, "is_transformed_from": {"doc": {"long_description": "Property that links a dataset specification from a model configuration or setup to the output from a target data transformation. This occurs when a data transformation produces several outputs, but only one of them is the one needed for a model  # noqa: E501", "short_description": "Sets the is_transformed_from of this Image.", "args": {"is_transformed_from": {"description": "The is_transformed_from of this Image.  # noqa: E501"}}}, "args": ["self", "is_transformed_from"], "min_max_lineno": {"min_lineno": 351, "max_lineno": 362}}, "had_primary_source": {"doc": {"long_description": "Property to identify the original source of the information of the annotated resource. It could be a web page, an organization, a person, some experiment notes, etc.  # noqa: E501", "short_description": "Sets the had_primary_source of this Image.", "args": {"had_primary_source": {"description": "The had_primary_source of this Image.  # noqa: E501"}}}, "args": ["self", "had_primary_source"], "min_max_lineno": {"min_lineno": 374, "max_lineno": 385}}, "has_data_transformation_setup": {"doc": {"long_description": "Property to link an input/output dataset to the specific data transformation (with URLs  # noqa: E501", "short_description": "Sets the has_data_transformation_setup of this Image.", "args": {"has_data_transformation_setup": {"description": "The has_data_transformation_setup of this Image.  # noqa: E501"}}}, "args": ["self", "has_data_transformation_setup"], "min_max_lineno": {"min_lineno": 397, "max_lineno": 408}}, "position": {"doc": {"long_description": "Position of the parameter or input/output in the model configuration. This property is needed to know how to organize the I/O of the component on execution  # noqa: E501", "short_description": "Sets the position of this Image.", "args": {"position": {"description": "The position of this Image.  # noqa: E501"}}}, "args": ["self", "position"], "min_max_lineno": {"min_lineno": 420, "max_lineno": 431}}, "id": {"doc": {"long_description": "identifier  # noqa: E501", "short_description": "Sets the id of this Image.", "args": {"id": {"description": "The id of this Image.  # noqa: E501"}}}, "args": ["self", "id"], "min_max_lineno": {"min_lineno": 443, "max_lineno": 454}}, "value": {"doc": {"long_description": "Value associated to the described entity  # noqa: E501", "short_description": "Sets the value of this Image.", "args": {"value": {"description": "The value of this Image.  # noqa: E501"}}}, "args": ["self", "value"], "min_max_lineno": {"min_lineno": 466, "max_lineno": 477}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 478, "max_lineno": 501}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 502, "max_lineno": 505}, "calls": ["pprint.pformat", "image.Image.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 506, "max_lineno": 509}, "calls": ["image.Image.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 510, "max_lineno": 516}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 517, "max_lineno": 520}}}}}, "is_test": false}