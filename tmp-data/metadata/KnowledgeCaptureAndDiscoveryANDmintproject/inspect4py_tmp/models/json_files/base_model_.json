{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/solution-catalog-api/server/openapi_server/models/base_model_.py", "fileNameBase": "base_model_", "extension": "py"}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "six", "type": "external"}, {"import": "typing", "type": "external"}, {"from_module": "openapi_server", "import": "util", "type": "external"}], "classes": {"Model": {"extend": ["object"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 70}, "methods": {"from_dict": {"doc": {"short_description": "Returns the dict as a model"}, "args": ["cls", "dikt"], "min_max_lineno": {"min_lineno": 20, "max_lineno": 24}, "calls": ["openapi_server.util.deserialize_model"]}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 25, "max_lineno": 51}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 52, "max_lineno": 58}, "calls": ["pprint.pformat", "base_model_.Model.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 62}, "calls": ["base_model_.Model.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 63, "max_lineno": 66}}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 67, "max_lineno": 70}}}}}, "body": {"calls": ["typing.TypeVar"], "store_vars_calls": {"T": "typing.TypeVar"}}, "is_test": false}