{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/models/causal_diagram.py", "fileNameBase": "causal_diagram", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"CausalDiagram": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 223}, "methods": {"__init__": {"doc": {"short_description": "CausalDiagram - a model defined in OpenAPI"}, "args": ["self", "has_diagram_part", "description", "id", "label", "type"], "min_max_lineno": {"min_lineno": 49, "max_lineno": 65}}, "has_diagram_part": {"doc": {"long_description": "Property that links a causal diagram with its constituent nodes  # noqa: E501", "short_description": "Sets the has_diagram_part of this CausalDiagram.", "args": {"has_diagram_part": {"description": "The has_diagram_part of this CausalDiagram.  # noqa: E501"}}}, "args": ["self", "has_diagram_part"], "min_max_lineno": {"min_lineno": 77, "max_lineno": 88}}, "description": {"doc": {"long_description": "small description  # noqa: E501", "short_description": "Sets the description of this CausalDiagram.", "args": {"description": {"description": "The description of this CausalDiagram.  # noqa: E501"}}}, "args": ["self", "description"], "min_max_lineno": {"min_lineno": 100, "max_lineno": 111}}, "id": {"doc": {"long_description": "identifier  # noqa: E501", "short_description": "Sets the id of this CausalDiagram.", "args": {"id": {"description": "The id of this CausalDiagram.  # noqa: E501"}}}, "args": ["self", "id"], "min_max_lineno": {"min_lineno": 123, "max_lineno": 134}}, "label": {"doc": {"long_description": "short description of the resource  # noqa: E501", "short_description": "Sets the label of this CausalDiagram.", "args": {"label": {"description": "The label of this CausalDiagram.  # noqa: E501"}}}, "args": ["self", "label"], "min_max_lineno": {"min_lineno": 146, "max_lineno": 157}}, "type": {"doc": {"long_description": "type of the resource  # noqa: E501", "short_description": "Sets the type of this CausalDiagram.", "args": {"type": {"description": "The type of this CausalDiagram.  # noqa: E501"}}}, "args": ["self", "type"], "min_max_lineno": {"min_lineno": 169, "max_lineno": 180}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 181, "max_lineno": 204}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 205, "max_lineno": 208}, "calls": ["pprint.pformat", "causal_diagram.CausalDiagram.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 209, "max_lineno": 212}, "calls": ["causal_diagram.CausalDiagram.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 213, "max_lineno": 219}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 220, "max_lineno": 223}}}}}, "is_test": false}