{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-python-api-client/modelcatalog/models/sample_collection.py", "fileNameBase": "sample_collection", "extension": "py", "doc": {"long_description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech", "short_description": "Model Catalog", "full": "Model Catalog\n\nThis is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)  # noqa: E501\n\nThe version of the OpenAPI document: v1.8.0\nGenerated by: https://openapi-generator.tech"}}, "dependencies": [{"import": "pprint", "type": "external"}, {"import": "re", "type": "external"}, {"import": "six", "type": "external"}], "classes": {"SampleCollection": {"doc": {"long_description": "Ref: https://openapi-generator.tech\n\nDo not edit the class manually.", "short_description": "NOTE: This class is auto generated by OpenAPI Generator.", "full": "NOTE: This class is auto generated by OpenAPI Generator.\nRef: https://openapi-generator.tech\n\nDo not edit the class manually."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 277}, "methods": {"__init__": {"doc": {"short_description": "SampleCollection - a model defined in OpenAPI"}, "args": ["self", "data_catalog_identifier", "has_part", "description", "id", "label", "type", "value"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 73}}, "data_catalog_identifier": {"doc": {"long_description": "An identifier for resources with metadata entries in a data catalog  # noqa: E501", "short_description": "Sets the data_catalog_identifier of this SampleCollection.", "args": {"data_catalog_identifier": {"description": "The data_catalog_identifier of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "data_catalog_identifier"], "min_max_lineno": {"min_lineno": 85, "max_lineno": 96}}, "has_part": {"doc": {"long_description": "Property designed to reference the elements included in a sample collection.  # noqa: E501", "short_description": "Sets the has_part of this SampleCollection.", "args": {"has_part": {"description": "The has_part of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "has_part"], "min_max_lineno": {"min_lineno": 108, "max_lineno": 119}}, "description": {"doc": {"long_description": "small description  # noqa: E501", "short_description": "Sets the description of this SampleCollection.", "args": {"description": {"description": "The description of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "description"], "min_max_lineno": {"min_lineno": 131, "max_lineno": 142}}, "id": {"doc": {"long_description": "identifier  # noqa: E501", "short_description": "Sets the id of this SampleCollection.", "args": {"id": {"description": "The id of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "id"], "min_max_lineno": {"min_lineno": 154, "max_lineno": 165}}, "label": {"doc": {"long_description": "short description of the resource  # noqa: E501", "short_description": "Sets the label of this SampleCollection.", "args": {"label": {"description": "The label of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "label"], "min_max_lineno": {"min_lineno": 177, "max_lineno": 188}}, "type": {"doc": {"long_description": "type of the resource  # noqa: E501", "short_description": "Sets the type of this SampleCollection.", "args": {"type": {"description": "The type of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "type"], "min_max_lineno": {"min_lineno": 200, "max_lineno": 211}}, "value": {"doc": {"long_description": "Value associated to the described entity  # noqa: E501", "short_description": "Sets the value of this SampleCollection.", "args": {"value": {"description": "The value of this SampleCollection.  # noqa: E501"}}}, "args": ["self", "value"], "min_max_lineno": {"min_lineno": 223, "max_lineno": 234}}, "to_dict": {"doc": {"short_description": "Returns the model properties as a dict"}, "args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 235, "max_lineno": 258}, "calls": ["six.iteritems", "getattr", "isinstance", "list", "hasattr", "map", "getattr.to_dict", "isinstance", "dict", "map", "hasattr", "x.to_dict", "getattr.items", "hasattr", "item[].to_dict"], "store_vars_calls": {"value": "getattr"}}, "to_str": {"doc": {"short_description": "Returns the string representation of the model"}, "args": ["self"], "min_max_lineno": {"min_lineno": 259, "max_lineno": 262}, "calls": ["pprint.pformat", "sample_collection.SampleCollection.to_dict"]}, "__repr__": {"doc": {"short_description": "For `print` and `pprint`"}, "args": ["self"], "min_max_lineno": {"min_lineno": 263, "max_lineno": 266}, "calls": ["sample_collection.SampleCollection.to_str"]}, "__eq__": {"doc": {"short_description": "Returns true if both objects are equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 267, "max_lineno": 273}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Returns true if both objects are not equal"}, "args": ["self", "other"], "min_max_lineno": {"min_lineno": 274, "max_lineno": 277}}}}}, "is_test": false}