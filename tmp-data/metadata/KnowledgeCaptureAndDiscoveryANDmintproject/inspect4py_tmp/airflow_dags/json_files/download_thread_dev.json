{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/airflow_dags/download_thread_dev.py", "fileNameBase": "download_thread_dev", "extension": "py"}, "dependencies": [{"from_module": "concurrent.futures", "import": "thread", "type": "external"}, {"from_module": "datetime", "import": "datetime", "type": "external"}, {"from_module": "datetime", "import": "timedelta", "type": "external"}, {"from_module": "textwrap", "import": "dedent", "type": "external"}, {"from_module": "airflow.models.variable", "import": "Variable", "type": "external"}, {"from_module": "airflow", "import": "DAG", "type": "external"}, {"from_module": "airflow.models.param", "import": "Param", "type": "external"}, {"from_module": "airflow.decorators", "import": "task", "type": "external"}, {"from_module": "airflow.providers.amazon.aws.hooks.s3", "import": "S3Hook", "type": "external"}, {"from_module": "airflow.providers.amazon.aws.operators.s3_bucket", "import": "S3CreateBucketOperator", "type": "external"}, {"from_module": "airflow.providers.amazon.aws.operators.s3_bucket", "import": "S3DeleteBucketOperator", "type": "external"}, {"from_module": "airflow.operators.email_operator", "import": "EmailOperator", "type": "external"}, {"from_module": "airflow.operators.python_operator", "import": "PythonOperator", "type": "external"}], "functions": {"convert_string": {"args": ["str"], "returns": [["str"]], "min_max_lineno": {"min_lineno": 18, "max_lineno": 27}, "calls": ["re.compile", "re.compile", "re.compile.match", "re.compile.match", "float", "int"], "store_vars_calls": {"FLOAT_PATTERN": "re.compile", "INT_PATTERN": "re.compile"}}, "post_query": {"args": ["query", "endpoint", "secret", "variables"], "min_max_lineno": {"min_lineno": 28, "max_lineno": 39}, "calls": ["print", "requests.post", "print", "requests.post.json", "endpoint.startswith"], "store_vars_calls": {"response": "requests.post"}}, "query_execution_function": {"doc": {"long_description": "`airflow tasks test example_passing_params_via_test_command run_this <date>\n-t '{\"foo\":\"bar\"}'`", "short_description": "Print out the \"foo\" param passed in via"}, "args": ["ti"], "returns": [["executions"]], "min_max_lineno": {"min_lineno": 40, "max_lineno": 110}, "calls": ["download_thread_dev.post_query", "ti.xcom_push", "airflow.models.variable.Variable.get", "executions.append", "download_thread_dev.convert_string"], "store_vars_calls": {"response": "post_query"}}, "download_file": {"doc": {"short_description": "Download a file from a url and save it to a directory", "args": {"url": {"description": "The URL to download the file from", "type_name": "str", "is_optional": false}, "directory": {"description": "The directory to save the file to", "type_name": "str", "is_optional": false}}}, "args": ["url", "directory"], "min_max_lineno": {"min_lineno": 111, "max_lineno": 127}, "calls": ["print", "requests.get", "url.split", "open", "requests.get.iter_content", "f.write", "f.flush"], "store_vars_calls": {"r": "requests.get"}}, "download_data_function": {"args": ["task_instance"], "returns": [["link"]], "min_max_lineno": {"min_lineno": 128, "max_lineno": 173}, "calls": ["task_instance.xcom_pull", "shutil.make_archive", "print", "airflow.providers.amazon.aws.hooks.s3.S3Hook", "airflow.providers.amazon.aws.hooks.s3.S3Hook.load_file", "task_instance.xcom_push", "task_instance.xcom_push", "os.path.exists", "os.mkdir", "shutil.rmtree", "print", "os.path.join", "os.mkdir", "os.mkdir", "execution[].values", "execution[].values", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "download_thread_dev.download_file", "download_thread_dev.download_file", "os.path.getsize", "os.path.join", "os.path.join"], "store_vars_calls": {"executions": "task_instance.xcom_pull", "source_s3": "S3Hook", "execution_directory": "os.path.join"}}}, "is_test": false}