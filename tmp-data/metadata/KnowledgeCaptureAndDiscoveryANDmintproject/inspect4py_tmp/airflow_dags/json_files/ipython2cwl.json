{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/airflow_dags/ipython2cwl.py", "fileNameBase": "ipython2cwl", "extension": "py"}, "dependencies": [{"from_module": "datetime", "import": "datetime", "type": "external"}, {"from_module": "datetime", "import": "timedelta", "type": "external"}, {"from_module": "textwrap", "import": "dedent", "type": "external"}, {"from_module": "airflow.models", "import": "Param", "type": "external"}, {"from_module": "airflow.models", "import": "Variable", "type": "external"}, {"from_module": "airflow", "import": "DAG", "type": "external"}, {"from_module": "airflow.operators.python_operator", "import": "PythonOperator", "type": "external"}, {"from_module": "airflow.operators.python_operator", "import": "PythonVirtualenvOperator", "type": "external"}, {"from_module": "airflow.providers.amazon.aws.hooks.s3", "import": "S3Hook", "type": "external"}], "functions": {"parse_yaml_file": {"doc": {"short_description": "Parse a yaml file", "args": {"file_path": {"description": "Path to the file", "type_name": "str", "is_optional": false}}, "returns": {"description": "Parsed yaml", "type_name": "dict", "is_generator": false}}, "args": ["file_path"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 27}, "calls": ["open", "yaml.load"]}, "repo2cwl_function": {"doc": {"short_description": "Convert a repository to a CWL workflow", "returns": {"description": "_description_", "type_name": "_type_", "is_generator": false}}, "min_max_lineno": {"min_lineno": 28, "max_lineno": 67}, "calls": ["pendulum.now", "airflow.providers.amazon.aws.hooks.s3.S3Hook", "os.path.abspath", "os.path.join", "repo2cwl", "os.listdir", "os.path.dirname", "os.path.exists", "os.mkdir", "ipython2cwl.parse_yaml_file", "specs_s3.append", "airflow.providers.amazon.aws.hooks.s3.S3Hook.load_file", "os.path.join"], "store_vars_calls": {"now": "pendulum.now", "source_s3": "S3Hook", "directory": "os.path.abspath", "cwl_dir": "os.path.join", "specs": "os.listdir", "parsed": "parse_yaml_file"}}, "login_push_function": {"args": ["task_instance"], "min_max_lineno": {"min_lineno": 69, "max_lineno": 81}, "calls": ["docker.from_env", "airflow.models.Variable.get", "airflow.models.Variable.get", "docker.from_env.login", "docker.from_env.api.push"], "store_vars_calls": {"client": "docker.from_env", "USERNAME": "Variable.get", "PASSWORD": "Variable.get"}}}, "is_test": false}