{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/byod-cleaning-api/kbclean/detection/features/statistics.py", "fileNameBase": "statistics", "extension": "py"}, "dependencies": [{"from_module": "typing", "import": "List", "type": "external"}, {"from_module": "kbclean.utils.data.readers", "import": "RowBasedValue", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "torch", "type": "external"}, {"from_module": "kbclean.detection.features.base", "import": "BaseExtractor", "type": "external"}, {"from_module": "kbclean.utils.data.helpers", "import": "str2regex", "type": "external"}, {"from_module": "sklearn.feature_extraction.text", "import": "CountVectorizer", "type": "external"}], "classes": {"StatsExtractor": {"extend": ["BaseExtractor"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 70}, "methods": {"__init__": {"args": ["self"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 18}, "calls": ["sklearn.feature_extraction.text.CountVectorizer", "sklearn.feature_extraction.text.CountVectorizer", "sklearn.feature_extraction.text.CountVectorizer"], "store_vars_calls": {"self.char_counter": "CountVectorizer", "self.word_counter": "CountVectorizer", "self.regex_counter": "CountVectorizer"}}, "fit": {"args": ["self", "values"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 35}, "calls": ["statistics.StatsExtractor.char_counter.fit", "statistics.StatsExtractor.word_counter.fit", "statistics.StatsExtractor.regex_counter.fit", "values[].row_dict.keys", "sklearn.feature_extraction.text.CountVectorizer().fit", "kbclean.utils.data.helpers.str2regex", "covalue_list.append", "sklearn.feature_extraction.text.CountVectorizer"]}, "transform": {"args": ["self", "values"], "min_max_lineno": {"min_lineno": 36, "max_lineno": 62}, "calls": ["statistics.StatsExtractor.char_counter.transform().todense", "statistics.StatsExtractor.word_counter.transform().todense", "statistics.StatsExtractor.regex_counter.transform().todense", "values[].row_dict.keys", "co_feature_lists.append", "torch.tensor", "statistics.StatsExtractor.char_counter.transform", "statistics.StatsExtractor.word_counter.transform", "statistics.StatsExtractor.regex_counter.transform", "covalue_list.append", "statistics.StatsExtractor.name2covalue_counter[].transform", "numpy.concatenate", "kbclean.utils.data.helpers.str2regex"], "store_vars_calls": {"char_features": "self.char_counter.transform().todense", "word_features": "self.word_counter.transform().todense", "regex_features": "self.regex_counter.transform().todense"}}, "n_features": {"args": ["self"], "min_max_lineno": {"min_lineno": 65, "max_lineno": 70}, "calls": ["sum", "len", "x.get_feature_names"]}}}}, "is_test": false}