{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/infil_green_ampt.py", "fileNameBase": "infil_green_ampt", "extension": "py", "doc": {"long_description": "the well-known Green-Ampt model.\n\nThis class inherits from the infiltration \"base class\" in \"infil_base.py\".\n\nSee: Smith, R.E. (2002) Infiltration Theory for Hydrologic Applications,\nWater Resources Monograph 15, AGU.", "short_description": "# This class defines a hydrologic infiltration component that implements", "full": "# This class defines a hydrologic infiltration component that implements\nthe well-known Green-Ampt model.\n\nThis class inherits from the infiltration \"base class\" in \"infil_base.py\".\n\nSee: Smith, R.E. (2002) Infiltration Theory for Hydrologic Applications,\nWater Resources Monograph 15, AGU."}}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "topoflow.components", "import": "infil_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "model_input", "type": "external"}, {"from_module": "topoflow.utils.tf_utils", "import": "TF_Print", "type": "external"}, {"from_module": "topoflow.utils.tf_utils", "import": "TF_String", "type": "external"}], "classes": {"infil_component": {"extend": ["infil_base.infil_component"], "min_max_lineno": {"min_lineno": 61, "max_lineno": 488}, "methods": {"get_component_name": {"args": ["self"], "min_max_lineno": {"min_lineno": 167, "max_lineno": 170}}, "get_attribute": {"args": ["self", "att_name"], "min_max_lineno": {"min_lineno": 173, "max_lineno": 182}, "calls": ["att_name.lower", "print", "print", "print", "print"]}, "get_input_var_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 185, "max_lineno": 192}}, "get_output_var_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 195, "max_lineno": 198}}, "get_var_name": {"args": ["self", "long_var_name"], "min_max_lineno": {"min_lineno": 201, "max_lineno": 204}}, "get_var_units": {"args": ["self", "long_var_name"], "min_max_lineno": {"min_lineno": 207, "max_lineno": 210}}, "initialize_layer_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 223, "max_lineno": 271}, "calls": ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "list", "list", "list", "list", "list", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros"], "store_vars_calls": {"self.soil_type": "np.zeros", "self.Ks_type": "np.zeros", "self.Ki_type": "np.zeros", "self.qs_type": "np.zeros", "self.qi_type": "np.zeros", "self.G_type": "np.zeros", "self.Ks_file": "np.zeros", "self.Ki_file": "np.zeros", "self.qs_file": "np.zeros", "self.qi_file": "np.zeros", "self.G_file": "np.zeros", "self.Ks": "list", "self.Ki": "list", "self.qs": "list", "self.qi": "list", "self.G": "list"}}, "set_computed_input_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 280, "max_lineno": 300}, "calls": ["numpy.maximum", "numpy.maximum"], "store_vars_calls": {"self.save_grid_dt": "np.maximum", "self.save_pixels_dt": "np.maximum"}}, "check_input_types": {"args": ["self"], "min_max_lineno": {"min_lineno": 303, "max_lineno": 322}, "calls": ["numpy.array", "numpy.all", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar", "infil_green_ampt.infil_component.is_scalar"], "store_vars_calls": {"are_scalars": "np.array", "self.ALL_SCALARS": "np.all"}}, "initialize_computed_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 325, "max_lineno": 381}, "calls": ["infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.build_layer_z_vector", "infil_green_ampt.infil_component.build_layered_var", "infil_green_ampt.infil_component.build_layered_var", "infil_green_ampt.infil_component.build_layered_var", "infil_green_ampt.infil_component.build_layered_var", "infil_green_ampt.infil_component.build_layered_var", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_scalar", "infil_green_ampt.infil_component.initialize_grid", "infil_green_ampt.infil_component.initialize_grid", "infil_green_ampt.infil_component.initialize_grid", "infil_green_ampt.infil_component.initialize_grid", "infil_green_ampt.infil_component.initialize_grid", "infil_green_ampt.infil_component.initialize_grid"], "store_vars_calls": {"self.vol_IN": "self.initialize_scalar", "self.vol_v0": "self.initialize_scalar", "self.vol_Rg": "self.initialize_scalar", "self.vol_soil": "self.initialize_scalar", "self.Ks": "self.build_layered_var", "self.Ki": "self.build_layered_var", "self.qs": "self.build_layered_var", "self.qi": "self.build_layered_var", "self.G": "self.build_layered_var", "self.IN": "self.initialize_grid", "self.v0": "self.initialize_grid", "self.Rg": "self.initialize_grid", "self.I": "self.initialize_grid", "self.tp": "self.initialize_grid", "self.fp": "self.initialize_grid"}}, "update_infil_rate": {"args": ["self"], "min_max_lineno": {"min_lineno": 384, "max_lineno": 391}, "calls": ["infil_green_ampt.Green_Ampt_Infil_Rate_v1"]}, "open_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 402, "max_lineno": 426}, "calls": ["range", "infil_green_ampt.infil_component.Ks_unit.append", "infil_green_ampt.infil_component.Ki_unit.append", "infil_green_ampt.infil_component.qs_unit.append", "infil_green_ampt.infil_component.qi_unit.append", "infil_green_ampt.infil_component.G_unit.append", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file"]}, "read_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 429, "max_lineno": 454}, "calls": ["range", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next"], "store_vars_calls": {"Ks": "model_input.read_next", "Ki": "model_input.read_next", "qs": "model_input.read_next", "qi": "model_input.read_next", "G": "model_input.read_next"}}, "close_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 457, "max_lineno": 469}, "calls": ["range", "infil_green_ampt.infil_component.Ks_unit[].close", "infil_green_ampt.infil_component.Ki_unit[].close", "infil_green_ampt.infil_component.qs_unit[].close", "infil_green_ampt.infil_component.qi_unit[].close", "infil_green_ampt.infil_component.G_unit[].close"]}, "update_outfile_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 478, "max_lineno": 488}}}}}, "functions": {"Green_Ampt_Infil_Rate_v1": {"args": ["self"], "min_max_lineno": {"min_lineno": 503, "max_lineno": 561}, "calls": ["numpy.minimum", "numpy.minimum"], "store_vars_calls": {"self.IN": "np.minimum", "self.v0": "np.minimum"}}, "Green_Ampt_Infil_Rate_1D": {"args": ["self", "r", "r_last", "n"], "returns": [["r"], ["r"]], "min_max_lineno": {"min_lineno": 572, "max_lineno": 764}, "calls": ["numpy.float64", "numpy.int16", "numpy.int16", "numpy.minimum", "numpy.minimum", "numpy.float64", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "numpy.float64", "numpy.float64", "numpy.float64", "print", "print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "numpy.float64", "fnp.loat64", "numpy.float64", "numpy.log", "numpy.absolute", "str", "numpy.float64"], "store_vars_calls": {"tol": "np.float64", "n_tries": "np.int16", "n_max": "np.int16", "self.IN": "np.minimum", "self.v0": "np.minimum", "Ip1": "np.float64"}}, "Green_Ampt_Infil_Rate_3D": {"args": ["self", "r", "r_last", "n"], "returns": [["f"]], "min_max_lineno": {"min_lineno": 767, "max_lineno": 924}, "calls": ["numpy.where", "numpy.size", "idl_func.size", "zeros", "numpy.where", "numpy.size", "numpy.where", "numpy.size", "numpy.float64", "numpy.int16", "numpy.int16", "numpy.minimum", "numpy.minimum", "numpy.logical_and", "numpy.where", "numpy.size", "numpy.where", "size", "numpy.float64", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "topoflow.utils.tf_utils.TF_Print", "numpy.float64", "numpy.logical_and", "logical_and", "numpy.float64", "numpy.float64", "numpy.log", "absolute", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64"], "store_vars_calls": {"wf": "np.where", "n_flux": "np.size", "ss": "idl_func.size", "f": "zeros", "wp": "np.where", "n_ponded": "np.size", "tol": "np.float64", "n_tries": "np.int16", "n_max": "np.int16", "self.IN": "np.minimum", "self.v0": "np.minimum", "wm": "np.where", "n_mid": "np.size", "we": "np.where", "n_end": "size"}}, "Green_Ampt_Infil_Rate_v2": {"args": ["self", "r", "r_last", "n"], "min_max_lineno": {"min_lineno": 927, "max_lineno": 961}, "calls": ["infil_green_ampt.Green_Ampt_Infil_Rate_1D", "infil_green_ampt.Green_Ampt_Infil_Rate_3D"]}}, "is_test": false}