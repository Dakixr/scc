{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/diversions_fraction_method_LAST.py", "fileNameBase": "diversions_fraction_method_LAST", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "glob", "type": "external"}, {"import": "os", "type": "external"}, {"from_module": "topoflow.components", "import": "diversions_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "cfg_files", "alias": "cfg", "type": "external"}, {"from_module": "topoflow.utils", "import": "tf_utils", "type": "external"}], "classes": {"diversions_component": {"extend": ["diversions_base.diversions_component"], "min_max_lineno": {"min_lineno": 85, "max_lineno": 644}, "methods": {"get_attribute": {"args": ["self", "att_name"], "min_max_lineno": {"min_lineno": 130, "max_lineno": 139}, "calls": ["att_name.lower", "print", "print", "print", "print"]}, "get_input_var_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 142, "max_lineno": 150}}, "get_output_var_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 153, "max_lineno": 156}}, "get_var_name": {"args": ["self", "long_var_name"], "min_max_lineno": {"min_lineno": 159, "max_lineno": 162}}, "get_var_units": {"args": ["self", "long_var_name"], "min_max_lineno": {"min_lineno": 165, "max_lineno": 168}}, "update": {"args": ["self", "time_seconds"], "min_max_lineno": {"min_lineno": 171, "max_lineno": 194}, "calls": ["diversions_fraction_method_LAST.diversions_component.update_sources", "diversions_fraction_method_LAST.diversions_component.update_sinks", "diversions_fraction_method_LAST.diversions_component.update_canals", "diversions_fraction_method_LAST.diversions_component.update_time"]}, "read_source_data": {"args": ["self"], "min_max_lineno": {"min_lineno": 197, "max_lineno": 266}, "calls": ["topoflow.utils.tf_utils.file_exists", "open", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "open.close", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_list_after_key", "numpy.size", "print"], "store_vars_calls": {"FOUND": "tf_utils.file_exists", "file_unit": "open", "n_sources": "cfg.read_value", "nt_max": "cfg.read_value", "dt": "cfg.read_value", "self.source_IDs": "np.zeros", "self.nt_sources": "np.zeros", "self.Q_sources_all": "np.zeros", "source_ID": "cfg.read_value", "nt": "cfg.read_value", "Q_values": "cfg.read_list_after_key", "nQ": "np.size"}}, "read_sink_data": {"args": ["self"], "min_max_lineno": {"min_lineno": 269, "max_lineno": 338}, "calls": ["topoflow.utils.tf_utils.file_exists", "open", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "open.close", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_list_after_key", "size", "print"], "store_vars_calls": {"FOUND": "tf_utils.file_exists", "file_unit": "open", "n_sinks": "cfg.read_value", "nt_max": "cfg.read_value", "dt": "cfg.read_value", "self.sink_IDs": "np.zeros", "self.nt_sinks": "np.zeros", "self.Q_sinks_all": "np.zeros", "sink_ID": "cfg.read_value", "nt": "cfg.read_value", "Q_values": "cfg.read_list_after_key", "nQ": "size"}}, "read_canal_data": {"args": ["self"], "min_max_lineno": {"min_lineno": 341, "max_lineno": 437}, "calls": ["topoflow.utils.tf_utils.file_exists", "open", "topoflow.utils.cfg_files.read_value", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.ceil", "open.close", "numpy.int", "numpy.int", "numpy.zeros", "print", "print", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "diversions_fraction_method_LAST.diversions_component.nt_canals.max", "diversions_fraction_method_LAST.diversions_component.nt_canals.min"], "store_vars_calls": {"FOUND": "tf_utils.file_exists", "file_unit": "open", "n_canals": "cfg.read_value", "self.canal_in_IDs": "np.zeros", "self.canal_out_IDs": "np.zeros", "self.canal_Q_fractions": "np.zeros", "self.canal_times": "np.zeros", "self.nt_canals": "np.ceil", "nt_max": "np.int", "nt_min": "np.int", "self.canal_Q": "np.zeros", "canal_in_ID": "cfg.read_value", "canal_out_ID": "cfg.read_value", "Q_fraction": "cfg.read_value", "travel_time": "cfg.read_value"}}, "update_sources": {"args": ["self"], "min_max_lineno": {"min_lineno": 440, "max_lineno": 471}, "calls": ["diversions_fraction_method_LAST.diversions_component.cp.get_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.set_values_in_grid_double", "numpy.zeros"], "store_vars_calls": {"vols": "self.cp.get_values_in_grid_double", "dvol": "np.zeros"}}, "update_sinks": {"args": ["self"], "min_max_lineno": {"min_lineno": 481, "max_lineno": 528}, "calls": ["diversions_fraction_method_LAST.diversions_component.cp.get_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.set_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.get_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.set_values_in_grid_double", "numpy.zeros"], "store_vars_calls": {"Q_vals": "self.cp.get_values_in_grid_double", "vols": "self.cp.get_values_in_grid_double", "Q_sinks": "np.zeros"}}, "update_canals": {"args": ["self"], "min_max_lineno": {"min_lineno": 531, "max_lineno": 644}, "calls": ["diversions_fraction_method_LAST.diversions_component.cp.get_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.set_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.get_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.set_values_in_grid_double", "numpy.empty", "range", "diversions_fraction_method_LAST.diversions_component.cp.get_values_in_grid_double", "diversions_fraction_method_LAST.diversions_component.cp.set_values_in_grid_double", "numpy.roll"], "store_vars_calls": {"Q_vals": "self.cp.get_values_in_grid_double", "vols": "self.cp.get_values_in_grid_double", "Q_canals_out": "np.empty", "self.canal_Q": "np.roll"}}}}}, "is_test": false}