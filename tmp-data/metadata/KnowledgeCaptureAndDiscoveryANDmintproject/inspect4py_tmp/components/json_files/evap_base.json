{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/evap_base.py", "fileNameBase": "evap_base", "extension": "py", "doc": {"long_description": "as functions used by most or all evaporation methods.  That is, all\nevaporation components inherit methods from this class.  The methods\nof this class should be over-ridden as necessary (especially the\nupdate_ET_rate() method) for different methods of modeling evaporation.\nThis class, in turn, inherits from the \"BMI base class\" in BMI_base.py.\n\nSee evap_priestley_taylor.py, evap_energy_balance.py, evap_read_file.py", "short_description": "This file defines a \"base class\" for evaporation components as well", "full": "This file defines a \"base class\" for evaporation components as well\nas functions used by most or all evaporation methods.  That is, all\nevaporation components inherit methods from this class.  The methods\nof this class should be over-ridden as necessary (especially the\nupdate_ET_rate() method) for different methods of modeling evaporation.\nThis class, in turn, inherits from the \"BMI base class\" in BMI_base.py.\n\nSee evap_priestley_taylor.py, evap_energy_balance.py, evap_read_file.py"}}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "os", "type": "external"}, {"from_module": "topoflow.utils", "import": "BMI_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "model_input", "type": "external"}, {"from_module": "topoflow.utils", "import": "model_output", "type": "external"}], "classes": {"evap_component": {"extend": ["BMI_base.BMI_component"], "min_max_lineno": {"min_lineno": 76, "max_lineno": 689}, "methods": {"set_constants": {"args": ["self"], "min_max_lineno": {"min_lineno": 79, "max_lineno": 95}, "calls": ["numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64"], "store_vars_calls": {"self.mps_to_mmph": "np.float64", "self.forever": "np.float64", "self.Lv": "np.float64"}}, "latent_heat_of_evaporation": {"args": ["self"], "min_max_lineno": {"min_lineno": 99, "max_lineno": 116}, "calls": ["numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64"], "store_vars_calls": {"a": "np.float64", "b": "np.float64", "c": "np.float64", "d": "np.float64"}}, "initialize": {"args": ["self", "cfg_file", "mode", "SILENT"], "min_max_lineno": {"min_lineno": 119, "max_lineno": 176}, "calls": ["evap_base.evap_component.set_constants", "evap_base.evap_component.initialize_config_vars", "evap_base.evap_component.initialize_basin_vars", "evap_base.evap_component.initialize_time_vars", "evap_base.evap_component.initialize_input_file_vars", "evap_base.evap_component.open_input_files", "evap_base.evap_component.read_input_files", "evap_base.evap_component.initialize_computed_vars", "evap_base.evap_component.check_input_types", "evap_base.evap_component.open_output_files", "print", "print", "evap_base.evap_component.disable_all_output", "evap_base.evap_component.initialize_scalar", "evap_base.evap_component.initialize_scalar", "print"], "store_vars_calls": {"self.ET": "self.initialize_scalar", "self.vol_ET": "self.initialize_scalar"}}, "update": {"args": ["self", "dt"], "min_max_lineno": {"min_lineno": 179, "max_lineno": 226}, "calls": ["evap_base.evap_component.update_Qc", "evap_base.evap_component.update_ET_rate", "evap_base.evap_component.update_ET_integral", "evap_base.evap_component.write_output_files", "evap_base.evap_component.update_time", "evap_base.evap_component.read_input_files"]}, "finalize": {"args": ["self"], "min_max_lineno": {"min_lineno": 229, "max_lineno": 239}, "calls": ["evap_base.evap_component.close_input_files", "evap_base.evap_component.close_output_files", "evap_base.evap_component.print_final_report"]}, "set_computed_input_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 242, "max_lineno": 252}, "calls": ["numpy.maximum", "numpy.maximum"], "store_vars_calls": {"self.save_grid_dt": "np.maximum", "self.save_pixels_dt": "np.maximum"}}, "check_input_types": {"args": ["self"], "min_max_lineno": {"min_lineno": 255, "max_lineno": 270}, "calls": ["numpy.array", "numpy.all", "evap_base.evap_component.is_scalar", "evap_base.evap_component.is_scalar"], "store_vars_calls": {"are_scalars": "np.array", "self.ALL_SCALARS": "np.all"}}, "initialize_input_file_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 273, "max_lineno": 292}, "calls": ["evap_base.evap_component.alpha_type.lower", "evap_base.evap_component.initialize_var", "evap_base.evap_component.K_soil_type.lower", "evap_base.evap_component.initialize_var", "evap_base.evap_component.soil_x_type.lower", "evap_base.evap_component.initialize_var", "evap_base.evap_component.T_soil_x_type.lower", "evap_base.evap_component.initialize_var"], "store_vars_calls": {"self.alpha": "self.initialize_var", "self.K_soil": "self.initialize_var", "self.soil_x": "self.initialize_var", "self.T_soil_x": "self.initialize_var"}}, "initialize_computed_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 295, "max_lineno": 302}, "calls": ["evap_base.evap_component.initialize_grid", "evap_base.evap_component.initialize_grid", "evap_base.evap_component.initialize_scalar"], "store_vars_calls": {"self.ET": "self.initialize_grid", "self.Qc": "self.initialize_grid", "self.vol_ET": "self.initialize_scalar"}}, "update_Qc": {"args": ["self"], "min_max_lineno": {"min_lineno": 318, "max_lineno": 335}}, "update_ET_rate": {"args": ["self"], "min_max_lineno": {"min_lineno": 347, "max_lineno": 355}, "calls": ["print", "print"]}, "update_ET_integral": {"args": ["self"], "min_max_lineno": {"min_lineno": 358, "max_lineno": 368}, "calls": ["numpy.double", "numpy.size", "numpy.sum"], "store_vars_calls": {"volume": "np.double"}}, "open_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 545, "max_lineno": 553}, "calls": ["print", "print"]}, "read_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 556, "max_lineno": 560}, "calls": ["print", "print"]}, "close_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 563, "max_lineno": 567}, "calls": ["print", "print"]}, "update_outfile_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 570, "max_lineno": 578}}, "disable_all_output": {"args": ["self"], "min_max_lineno": {"min_lineno": 581, "max_lineno": 585}}, "open_output_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 588, "max_lineno": 616}, "calls": ["topoflow.utils.model_output.check_netcdf", "evap_base.evap_component.update_outfile_names", "topoflow.utils.model_output.open_new_gs_file", "topoflow.utils.model_output.open_new_ts_file"]}, "write_output_files": {"args": ["self", "time_seconds"], "min_max_lineno": {"min_lineno": 619, "max_lineno": 648}, "calls": ["int", "evap_base.evap_component.save_grids", "evap_base.evap_component.save_pixel_values", "int", "int"], "store_vars_calls": {"model_time": "int"}}, "close_output_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 659, "max_lineno": 664}, "calls": ["topoflow.utils.model_output.close_gs_file", "topoflow.utils.model_output.close_gs_file"]}, "save_grids": {"args": ["self"], "min_max_lineno": {"min_lineno": 667, "max_lineno": 678}, "calls": ["topoflow.utils.model_output.add_grid"]}, "save_pixel_values": {"args": ["self"], "min_max_lineno": {"min_lineno": 681, "max_lineno": 689}, "calls": ["topoflow.utils.model_output.add_values_at_IDs"]}}}}, "is_test": false}