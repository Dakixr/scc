{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/d8_local.py", "fileNameBase": "d8_local", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "os", "type": "external"}, {"import": "os", "type": "external"}, {"import": "platform", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "time", "type": "external"}, {"from_module": "topoflow.components", "import": "d8_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "fill_pits", "type": "external"}, {"from_module": "topoflow.utils", "import": "rtg_files", "type": "external"}], "classes": {"d8_component": {"extend": ["d8_base.d8_component"], "min_max_lineno": {"min_lineno": 102, "max_lineno": 2472}, "methods": {"get_component_name": {"args": ["self"], "min_max_lineno": {"min_lineno": 105, "max_lineno": 108}}, "get_attribute": {"args": ["self", "att_name"], "min_max_lineno": {"min_lineno": 114, "max_lineno": 137}, "calls": ["att_name.lower", "print", "print", "print", "print"]}, "initialize_computed_vars": {"args": ["self", "DOUBLE", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 140, "max_lineno": 227}, "calls": ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "topoflow.utils.rtg_files.read_grid", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "print", "print", "print", "print", "print", "topoflow.utils.fill_pits.fill_pits", "topoflow.utils.rtg_files.write_grid", "topoflow.utils.rtg_files.read_grid.min", "topoflow.utils.rtg_files.read_grid.max"], "store_vars_calls": {"self.d8_grid": "np.zeros", "self.parent_ID_grid": "np.zeros", "self.dw": "np.zeros", "self.ds": "np.zeros", "self.A": "np.zeros", "self.row_incs": "np.array", "self.col_incs": "np.array", "self.row_incs_CW": "np.array", "self.col_incs_CW": "np.array", "DEM": "rtg_files.read_grid"}}, "get_neighbors": {"args": ["self", "IDs", "INCLUDE_IDS", "SILENT", "REPORT"], "returns": [["nbr_IDs"]], "min_max_lineno": {"min_lineno": 234, "max_lineno": 370}, "calls": ["divmod", "numpy.where", "numpy.where", "numpy.concatenate", "numpy.concatenate", "numpy.logical_and", "numpy.logical_and", "numpy.unique", "numpy.ndim", "numpy.setdiff1d", "numpy.setdiff1d", "numpy.array"], "store_vars_calls": {"w1": "np.where", "w2": "np.where", "rows2": "np.concatenate", "cols2": "np.concatenate", "nbr_IDs": "np.setdiff1d"}}, "is_a_pit": {"args": ["self", "ID", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 373, "max_lineno": 381}, "calls": ["d8_local.d8_component.get_neighbors", "numpy.where"], "store_vars_calls": {"nbr_IDs": "self.get_neighbors", "w": "np.where"}}, "is_an_interior_pit": {"args": ["self", "ID", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 384, "max_lineno": 398}, "calls": ["divmod", "d8_local.d8_component.get_neighbors", "numpy.where"], "store_vars_calls": {"nbr_IDs": "self.get_neighbors", "w": "np.where"}}, "update_neighborhood_IDs": {"args": ["self", "ID"], "min_max_lineno": {"min_lineno": 402, "max_lineno": 442}, "calls": ["divmod", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "store_vars_calls": {"w": "np.where"}}, "update_kid_IDs_BAD": {"args": ["self", "ID"], "min_max_lineno": {"min_lineno": 445, "max_lineno": 498}, "calls": ["divmod", "numpy.ravel", "print", "print", "print", "numpy.where", "numpy.int32", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "store_vars_calls": {"h_vals": "np.ravel", "w": "np.where", "IDs": "np.int32"}}, "update_kid_IDs": {"args": ["self", "ID"], "min_max_lineno": {"min_lineno": 501, "max_lineno": 545}, "calls": ["divmod", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_and", "numpy.logical_and", "numpy.int32"], "store_vars_calls": {"w1": "np.where", "w2": "np.where", "w": "np.where", "self.kid_IDs": "np.int32"}}, "get_kid_IDs": {"args": ["self", "ID"], "returns": [["kid_IDs"]], "min_max_lineno": {"min_lineno": 548, "max_lineno": 600}, "calls": ["divmod", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_and", "numpy.logical_and", "numpy.int32"], "store_vars_calls": {"w1": "np.where", "w2": "np.where", "w": "np.where", "kid_IDs": "np.int32"}}, "add_neighbors_to_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 603, "max_lineno": 628}, "calls": ["divmod", "numpy.concatenate", "numpy.unique"], "store_vars_calls": {"IDs": "np.unique"}}, "update_flow_grid": {"args": ["self", "DEM", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 631, "max_lineno": 767}, "calls": ["d8_local.d8_component.start_new_d8_codes", "numpy.where", "print", "numpy.ravel", "d8_local.d8_component.get_neighbors", "d8_local.d8_component.break_flow_grid_ties", "d8_local.d8_component.link_flats", "numpy.unique", "print", "topoflow.utils.rtg_files.read_grid", "numpy.where", "print", "print", "print", "print", "print", "print", "numpy.uint8"], "store_vars_calls": {"w": "np.where", "self.IDs": "np.ravel", "nbr_hood_IDs": "self.get_neighbors", "uniq_codes": "np.unique", "saved_flow_grid": "rtg_files.read_grid"}}, "start_new_d8_codes": {"args": ["self", "DEM", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 770, "max_lineno": 1090}, "calls": ["divmod", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.where", "print", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_or", "numpy.where", "numpy.where", "d8_codes.min", "d8_codes.max", "print", "print", "print", "print", "print", "print", "print", "numpy.array", "numpy.array", "numpy.logical_or", "numpy.logical_or", "numpy.isfinite"], "store_vars_calls": {"rc_tuple": "divmod", "max_slope": "np.maximum", "w": "np.where", "pits": "np.where", "flats": "np.where", "w0": "np.where", "dmin": "d8_codes.min", "dmax": "d8_codes.max", "self.pit_IDs": "np.array", "self.flat_IDs": "np.array"}}, "break_flow_grid_ties": {"args": ["self", "SILENT"], "min_max_lineno": {"min_lineno": 1093, "max_lineno": 1116}, "calls": ["numpy.where", "print"], "store_vars_calls": {"w": "np.where"}}, "link_flats": {"args": ["self", "SILENT"], "min_max_lineno": {"min_lineno": 1119, "max_lineno": 1482}, "calls": ["numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.int64", "numpy.int64", "print", "numpy.where", "divmod", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.where", "numpy.where", "print", "numpy.logical_and", "print", "print", "print", "print", "print", "print", "print", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and"], "store_vars_calls": {"NOT_EDGE": "np.logical_and", "total_flats": "np.int64", "n_reps": "np.int64", "flats": "np.where", "VALID0": "np.logical_and", "VALID1": "np.logical_and", "VALID2": "np.logical_and", "VALID3": "np.logical_and", "VALID4": "np.logical_and", "VALID5": "np.logical_and", "VALID6": "np.logical_and", "VALID7": "np.logical_and", "FIXABLE": "np.where", "bad": "np.where"}}, "update_parent_ID_grid": {"args": ["self", "SILENT"], "min_max_lineno": {"min_lineno": 1485, "max_lineno": 1577}, "calls": ["numpy.where", "divmod", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "print", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or"], "store_vars_calls": {"wbad": "np.where", "T": "np.where", "B": "np.where", "L": "np.where", "R": "np.where", "w": "np.where"}}, "update_parent_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 1580, "max_lineno": 1594}, "calls": ["divmod"], "store_vars_calls": {"self.parent_IDs": "divmod"}}, "update_flow_from_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 1603, "max_lineno": 1660}, "calls": ["numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod"], "store_vars_calls": {"w1": "np.where", "w2": "np.where", "w3": "np.where", "w4": "np.where", "w5": "np.where", "w6": "np.where", "w7": "np.where", "w8": "np.where", "self.w1": "divmod", "self.w2": "divmod", "self.w3": "divmod", "self.w4": "divmod", "self.w5": "divmod", "self.w6": "divmod", "self.w7": "divmod", "self.w8": "divmod"}}, "update_flow_to_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 1663, "max_lineno": 1740}, "calls": ["divmod", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod"], "store_vars_calls": {"self.p1": "divmod", "self.p2": "divmod", "self.p3": "divmod", "self.p4": "divmod", "self.p5": "divmod", "self.p6": "divmod", "self.p7": "divmod", "self.p8": "divmod"}}, "update_noflow_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 1743, "max_lineno": 1760}, "calls": ["numpy.where", "numpy.concatenate", "numpy.unique"], "store_vars_calls": {"w0": "np.where", "nf_IDs": "np.concatenate", "self.noflow_IDs": "np.unique"}}, "update_flow_width_grid": {"args": ["self", "DOUBLE", "METHOD2", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 1763, "max_lineno": 1855}, "calls": ["numpy.where", "numpy.where", "numpy.where", "numpy.where", "print", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "print", "numpy.logical_or", "str", "numpy.logical_or", "str", "dw_vec.max", "dw_vec.min"], "store_vars_calls": {"wd": "np.where", "wh": "np.where", "wv": "np.where", "wb": "np.where"}}, "update_flow_length_grid": {"args": ["self", "DOUBLE", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 1858, "max_lineno": 1934}, "calls": ["numpy.where", "numpy.where", "numpy.where", "numpy.where", "print", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "print", "numpy.logical_or", "str", "numpy.logical_or", "str", "ds_vec.max", "ds_vec.min"], "store_vars_calls": {"wd": "np.where", "wh": "np.where", "wv": "np.where", "wb": "np.where"}}, "update_area_grid": {"args": ["self", "SILENT", "REPORT"], "min_max_lineno": {"min_lineno": 1937, "max_lineno": 2472}, "calls": ["d8_local.d8_component.IDs.copy", "numpy.int32", "divmod", "print", "max", "d8_local.d8_component.A.copy", "topoflow.utils.rtg_files.write_grid", "numpy.unique.copy", "numpy.int32", "d8_local.d8_component.A.copy", "topoflow.utils.rtg_files.write_grid", "d8_local.d8_component.A_units.lower", "numpy.where", "divmod", "numpy.ones", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "d8_local.d8_component.A.copy", "topoflow.utils.rtg_files.write_grid", "print", "print", "topoflow.utils.rtg_files.read_grid", "numpy.where", "numpy.unique", "numpy.concatenate", "numpy.unique", "numpy.unique.copy", "str", "print", "print", "print", "print", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_or", "d8_local.d8_component.A_units.lower", "str", "print", "numpy.absolute", "print", "print", "print", "print", "print", "print", "print", "str", "d8_local.d8_component.A.max", "str", "float32", "numpy.absolute.max", "print", "print", "print", "print", "print", "print", "print", "d8_local.d8_component.A.min"], "store_vars_calls": {"IDs": "np.unique", "n_reps": "np.int32", "Ap": "self.A.copy", "kIDs": "pIDs.copy", "A0": "self.A.copy", "w": "np.where", "READY": "np.ones", "w0": "np.where", "w1": "np.where", "w2": "np.where", "w3": "np.where", "w4": "np.where", "w5": "np.where", "w6": "np.where", "w7": "np.where", "WR": "np.where", "Af": "self.A.copy", "saved_area_grid": "rtg_files.read_grid", "pIDs": "np.unique", "mr_str": "str", "diff": "np.absolute"}}}}}, "is_test": false}