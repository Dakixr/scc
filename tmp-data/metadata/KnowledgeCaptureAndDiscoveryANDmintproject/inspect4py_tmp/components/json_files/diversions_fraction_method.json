{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/diversions_fraction_method.py", "fileNameBase": "diversions_fraction_method", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "glob", "type": "external"}, {"import": "os", "type": "external"}, {"from_module": "topoflow.components", "import": "diversions_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "cfg_files", "alias": "cfg", "type": "external"}, {"from_module": "topoflow.utils", "import": "tf_utils", "type": "external"}], "classes": {"diversions_component": {"extend": ["diversions_base.diversions_component"], "min_max_lineno": {"min_lineno": 89, "max_lineno": 722}, "methods": {"get_component_name": {"args": ["self"], "min_max_lineno": {"min_lineno": 178, "max_lineno": 181}}, "get_attribute": {"args": ["self", "att_name"], "min_max_lineno": {"min_lineno": 184, "max_lineno": 193}, "calls": ["att_name.lower", "print", "print", "print", "print"]}, "get_input_var_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 196, "max_lineno": 204}}, "get_output_var_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 207, "max_lineno": 210}}, "get_var_name": {"args": ["self", "long_var_name"], "min_max_lineno": {"min_lineno": 213, "max_lineno": 216}}, "get_var_units": {"args": ["self", "long_var_name"], "min_max_lineno": {"min_lineno": 219, "max_lineno": 222}}, "update": {"args": ["self", "time_seconds"], "min_max_lineno": {"min_lineno": 225, "max_lineno": 248}, "calls": ["diversions_fraction_method.diversions_component.update_sources", "diversions_fraction_method.diversions_component.update_sinks", "diversions_fraction_method.diversions_component.update_canals", "diversions_fraction_method.diversions_component.update_time"]}, "read_source_data": {"args": ["self"], "min_max_lineno": {"min_lineno": 251, "max_lineno": 323}, "calls": ["topoflow.utils.tf_utils.file_exists", "open", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "open.close", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_list_after_key", "numpy.size", "print"], "store_vars_calls": {"FOUND": "tf_utils.file_exists", "file_unit": "open", "n_sources": "cfg.read_value", "nt_max": "cfg.read_value", "source_dt": "cfg.read_value", "self.source_IDs": "np.zeros", "self.nt_sources": "np.zeros", "self.Q_sources_all": "np.zeros", "source_ID": "cfg.read_value", "nt": "cfg.read_value", "Q_values": "cfg.read_list_after_key", "nQ": "np.size"}}, "read_sink_data": {"args": ["self"], "min_max_lineno": {"min_lineno": 326, "max_lineno": 398}, "calls": ["topoflow.utils.tf_utils.file_exists", "open", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "open.close", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_list_after_key", "size", "print"], "store_vars_calls": {"FOUND": "tf_utils.file_exists", "file_unit": "open", "n_sinks": "cfg.read_value", "nt_max": "cfg.read_value", "sink_dt": "cfg.read_value", "self.sink_IDs": "np.zeros", "self.nt_sinks": "np.zeros", "self.Q_sinks_all": "np.zeros", "sink_ID": "cfg.read_value", "nt": "cfg.read_value", "Q_values": "cfg.read_list_after_key", "nQ": "size"}}, "read_canal_data": {"args": ["self"], "min_max_lineno": {"min_lineno": 401, "max_lineno": 510}, "calls": ["topoflow.utils.tf_utils.file_exists", "open", "topoflow.utils.cfg_files.read_value", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.ceil", "open.close", "numpy.int", "numpy.int", "numpy.zeros", "print", "print", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "topoflow.utils.cfg_files.read_value", "diversions_fraction_method.diversions_component.nt_canals.max", "diversions_fraction_method.diversions_component.nt_canals.min"], "store_vars_calls": {"FOUND": "tf_utils.file_exists", "file_unit": "open", "n_canals": "cfg.read_value", "self.canal_in_IDs": "np.zeros", "self.canal_out_IDs": "np.zeros", "self.canal_Q_fractions": "np.zeros", "self.canal_times": "np.zeros", "self.nt_canals": "np.ceil", "nt_max": "np.int", "nt_min": "np.int", "self.canal_Q": "np.zeros", "canal_in_ID": "cfg.read_value", "canal_out_ID": "cfg.read_value", "Q_fraction": "cfg.read_value", "travel_time": "cfg.read_value"}}, "update_sources": {"args": ["self"], "min_max_lineno": {"min_lineno": 513, "max_lineno": 533}, "calls": ["numpy.zeros"]}, "update_sinks": {"args": ["self"], "min_max_lineno": {"min_lineno": 553, "max_lineno": 579}, "calls": ["numpy.zeros"]}, "update_canals": {"args": ["self"], "min_max_lineno": {"min_lineno": 603, "max_lineno": 722}, "calls": ["numpy.empty", "range", "numpy.roll"], "store_vars_calls": {"self.canal_Q": "np.roll"}}}}}, "is_test": false}