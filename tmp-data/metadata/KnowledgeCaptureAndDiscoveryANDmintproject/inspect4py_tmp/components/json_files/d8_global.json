{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/d8_global.py", "fileNameBase": "d8_global", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "os", "type": "external"}, {"import": "os", "type": "external"}, {"import": "time", "type": "external"}, {"from_module": "topoflow.components", "import": "d8_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "rtg_files", "type": "external"}], "classes": {"d8_component": {"extend": ["d8_base.d8_component"], "min_max_lineno": {"min_lineno": 57, "max_lineno": 1375}, "methods": {"get_component_name": {"args": ["self"], "min_max_lineno": {"min_lineno": 81, "max_lineno": 84}}, "get_attribute": {"args": ["self", "att_name"], "min_max_lineno": {"min_lineno": 87, "max_lineno": 96}, "calls": ["att_name.lower", "print", "print", "print", "print"]}, "update_flow_grid": {"args": ["self", "DEM", "REPORT"], "min_max_lineno": {"min_lineno": 99, "max_lineno": 178}, "calls": ["d8_global.d8_component.start_new_d8_codes", "numpy.where", "print", "d8_global.d8_component.break_flow_grid_ties", "d8_global.d8_component.link_flats", "numpy.logical_or", "print", "print", "print", "topoflow.utils.rtg_files.read_grid", "numpy.where", "d8_global.d8_component.d8_grid.min", "d8_global.d8_component.d8_grid.max", "print", "print", "print", "print", "print", "print", "uint8"], "store_vars_calls": {"w": "np.where", "saved_d8_grid": "rtg_files.read_grid"}}, "start_new_d8_codes": {"args": ["self", "DEM", "REPORT"], "min_max_lineno": {"min_lineno": 181, "max_lineno": 352}, "calls": ["numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.where", "print", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_or", "d8_grid.min", "d8_grid.max", "print", "print", "print", "print", "print", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll", "print", "print", "print", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.roll", "numpy.isfinite", "str", "str", "str", "str", "str", "str", "str"], "store_vars_calls": {"max_slope": "np.maximum", "w": "np.where", "flats_and_pits": "np.where", "flats": "np.where", "pits": "np.where", "dmin": "d8_grid.min", "dmax": "d8_grid.max"}}, "break_flow_grid_ties": {"args": ["self"], "min_max_lineno": {"min_lineno": 355, "max_lineno": 371}, "calls": ["numpy.where", "print"], "store_vars_calls": {"w": "np.where"}}, "link_flats": {"args": ["self"], "min_max_lineno": {"min_lineno": 374, "max_lineno": 575}, "calls": ["numpy.int64", "numpy.int64", "print", "numpy.where", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.where", "str", "print", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and"], "store_vars_calls": {"total_flats": "np.int64", "n_reps": "np.int64", "flats": "np.where", "VALID0": "np.logical_and", "VALID1": "np.logical_and", "VALID2": "np.logical_and", "VALID3": "np.logical_and", "VALID4": "np.logical_and", "VALID5": "np.logical_and", "VALID6": "np.logical_and", "VALID7": "np.logical_and", "FIXABLE": "np.where", "n_rep_str": "str"}}, "update_parent_ID_grid": {"args": ["self"], "min_max_lineno": {"min_lineno": 578, "max_lineno": 649}, "calls": ["numpy.arange", "numpy.where", "print", "numpy.arange", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or"], "store_vars_calls": {"T": "np.arange", "wbad": "np.where", "w": "np.where"}}, "update_parent_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 652, "max_lineno": 680}, "calls": ["divmod"], "store_vars_calls": {"self.parent_IDs": "divmod"}}, "update_flow_from_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 723, "max_lineno": 759}, "calls": ["numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "store_vars_calls": {"self.w1": "np.where", "self.w2": "np.where", "self.w3": "np.where", "self.w4": "np.where", "self.w5": "np.where", "self.w6": "np.where", "self.w7": "np.where", "self.w8": "np.where"}}, "update_flow_to_IDs": {"args": ["self"], "min_max_lineno": {"min_lineno": 766, "max_lineno": 840}, "calls": ["divmod", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod", "divmod"], "store_vars_calls": {"self.p1": "divmod", "self.p2": "divmod", "self.p3": "divmod", "self.p4": "divmod", "self.p5": "divmod", "self.p6": "divmod", "self.p7": "divmod", "self.p8": "divmod"}}, "update_noflow_IDs": {"args": ["self", "REPORT"], "min_max_lineno": {"min_lineno": 843, "max_lineno": 870}, "calls": ["numpy.where", "d8_global.d8_component.edge_IDs", "print", "print", "print"], "store_vars_calls": {"noflow_IDs": "np.where", "self.noflow_IDs": "self.edge_IDs"}}, "update_flow_width_grid": {"args": ["self", "DOUBLE", "METHOD2", "REPORT"], "min_max_lineno": {"min_lineno": 873, "max_lineno": 954}, "calls": ["numpy.where", "numpy.where", "numpy.where", "numpy.where", "print", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "print", "numpy.logical_or", "str", "numpy.logical_or", "str", "d8_global.d8_component.dw.max", "d8_global.d8_component.dw.min"], "store_vars_calls": {"wd": "np.where", "wh": "np.where", "wv": "np.where", "wb": "np.where"}}, "update_flow_length_grid": {"args": ["self", "DOUBLE", "REPORT"], "min_max_lineno": {"min_lineno": 960, "max_lineno": 1023}, "calls": ["numpy.where", "numpy.where", "numpy.where", "numpy.where", "print", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "print", "numpy.logical_or", "str", "numpy.logical_or", "str", "d8_global.d8_component.ds.max", "d8_global.d8_component.ds.min"], "store_vars_calls": {"wd": "np.where", "wh": "np.where", "wv": "np.where", "wb": "np.where"}}, "update_area_grid": {"args": ["self", "REPORT"], "min_max_lineno": {"min_lineno": 1029, "max_lineno": 1331}, "calls": ["numpy.minimum", "numpy.int32", "print", "d8_global.d8_component.A_units.lower", "numpy.where", "open", "open.close", "topoflow.utils.rtg_files.read_grid", "numpy.where", "numpy.logical_and", "numpy.ones", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "print", "d8_global.d8_component.A.copy", "d8_global.d8_component.byteswap", "d8_global.d8_component.tofile", "d8_global.d8_component.A.tofile", "d8_global.d8_component.A_units.lower", "str", "print", "print", "print", "numpy.absolute", "print", "print", "print", "print", "print", "print", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "str", "d8_global.d8_component.A.max", "numpy.float32", "numpy.absolute.max", "d8_global.d8_component.A.min", "str"], "store_vars_calls": {"n_reps": "np.int32", "unknown": "np.where", "file_unit": "open", "saved_area_grid": "rtg_files.read_grid", "w": "np.where", "READY": "np.ones", "w0": "np.where", "w1": "np.where", "w2": "np.where", "w3": "np.where", "w4": "np.where", "w5": "np.where", "w6": "np.where", "w7": "np.where", "WR": "np.where", "grid": "self.A.copy", "diff": "np.absolute"}}, "update_slope_grid": {"args": ["self", "REPORT"], "min_max_lineno": {"min_lineno": 1334, "max_lineno": 1346}, "calls": ["d8_global.d8_component.update_noflow_IDs"]}, "update_aspect_grid": {"args": ["self", "REPORT"], "min_max_lineno": {"min_lineno": 1350, "max_lineno": 1375}, "calls": ["numpy.linspace", "numpy.zeros"], "store_vars_calls": {"a": "np.linspace", "aspect": "np.zeros"}}}}}, "is_test": false}