{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/components/infil_base.py", "fileNameBase": "infil_base", "extension": "py", "doc": {"long_description": "as functions used by most or all infiltration methods.  That is, all\ninfiltration components inherit methods from this class.  The methods\nof this class should be over-ridden as necessary (especially the\n\"update_infil_rate() method) for different methods of modeling\ninfiltration.  This class, in turn, inherits from the \"BMI base class\"\nin BMI_base.py.\n\nSee infil_beven.py, infil_green_ampt.py, infil_smith_parlange.py and\ninfil_richards_1D.py.", "short_description": "This file defines a \"base class\" for infiltration components as well", "full": "This file defines a \"base class\" for infiltration components as well\nas functions used by most or all infiltration methods.  That is, all\ninfiltration components inherit methods from this class.  The methods\nof this class should be over-ridden as necessary (especially the\n\"update_infil_rate() method) for different methods of modeling\ninfiltration.  This class, in turn, inherits from the \"BMI base class\"\nin BMI_base.py.\n\nSee infil_beven.py, infil_green_ampt.py, infil_smith_parlange.py and\ninfil_richards_1D.py."}}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "os", "type": "external"}, {"import": "sys", "type": "external"}, {"from_module": "topoflow.utils", "import": "BMI_base", "type": "external"}, {"from_module": "topoflow.utils", "import": "model_input", "type": "external"}, {"from_module": "topoflow.utils", "import": "model_output", "type": "external"}], "classes": {"infil_component": {"extend": ["BMI_base.BMI_component"], "min_max_lineno": {"min_lineno": 88, "max_lineno": 1524}, "methods": {"set_constants": {"args": ["self"], "min_max_lineno": {"min_lineno": 115, "max_lineno": 143}, "calls": ["numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64", "numpy.float64"], "store_vars_calls": {"self.psi_oven_dry": "np.float64", "self.psi_air_dry": "np.float64", "self.psi_min": "np.float64", "self.psi_hygro": "np.float64", "self.psi_wilt": "np.float64", "self.psi_field": "np.float64", "self.psi_oven_dry_cm": "np.float64", "self.psi_air_dry_cm": "np.float64", "self.psi_min_cm": "np.float64", "self.psi_hygro_cm": "np.float64", "self.psi_wilt_cm": "np.float64", "self.psi_field_cm": "np.float64", "self.g": "np.float64"}}, "set_new_defaults": {"args": ["self"], "min_max_lineno": {"min_lineno": 146, "max_lineno": 181}, "calls": ["numpy.float64"], "store_vars_calls": {"self.save_cube_dt": "np.float64"}}, "initialize": {"args": ["self", "cfg_file", "mode", "SILENT"], "min_max_lineno": {"min_lineno": 184, "max_lineno": 294}, "calls": ["infil_base.infil_component.get_attribute", "infil_base.infil_component.set_constants", "infil_base.infil_component.set_new_defaults", "infil_base.infil_component.initialize_config_vars", "infil_base.infil_component.initialize_basin_vars", "infil_base.infil_component.initialize_time_vars", "infil_base.infil_component.open_input_files", "infil_base.infil_component.read_input_files", "infil_base.infil_component.check_input_types", "infil_base.infil_component.set_computed_input_vars", "infil_base.infil_component.initialize_computed_vars", "infil_base.infil_component.update_total_storage", "infil_base.infil_component.storage.copy", "infil_base.infil_component.open_output_files", "print", "print", "infil_base.infil_component.lower", "infil_base.infil_component.disable_all_output", "infil_base.infil_component.initialize_scalar", "infil_base.infil_component.initialize_scalar", "infil_base.infil_component.initialize_scalar", "infil_base.infil_component.initialize_scalar", "infil_base.infil_component.initialize_scalar", "infil_base.infil_component.initialize_scalar", "infil_base.infil_component.initialize_scalar", "print", "print", "print", "print"], "store_vars_calls": {"cfg_extension": "self.get_attribute", "self.storage_init": "self.storage.copy", "self.IN": "self.initialize_scalar", "self.v0": "self.initialize_scalar", "self.Rg": "self.initialize_scalar", "self.vol_IN": "self.initialize_scalar", "self.vol_v0": "self.initialize_scalar", "self.vol_Rg": "self.initialize_scalar", "self.vol_soil": "self.initialize_scalar"}}, "update": {"args": ["self", "dt"], "min_max_lineno": {"min_lineno": 297, "max_lineno": 346}, "calls": ["infil_base.infil_component.update_surface_influx", "infil_base.infil_component.update_infil_rate", "infil_base.infil_component.adjust_infil_rate", "infil_base.infil_component.update_v0_integral", "infil_base.infil_component.update_Rg", "infil_base.infil_component.update_Rg_integral", "infil_base.infil_component.update_I", "infil_base.infil_component.update_q0", "infil_base.infil_component.check_infiltration", "infil_base.infil_component.write_output_files", "infil_base.infil_component.update_time", "infil_base.infil_component.read_input_files"]}, "finalize": {"args": ["self"], "min_max_lineno": {"min_lineno": 349, "max_lineno": 361}, "calls": ["infil_base.infil_component.close_input_files", "infil_base.infil_component.close_output_files", "infil_base.infil_component.comp_status.lower", "infil_base.infil_component.update_total_storage", "infil_base.infil_component.print_final_report"]}, "build_layer_z_vector": {"args": ["self"], "min_max_lineno": {"min_lineno": 370, "max_lineno": 417}, "calls": ["numpy.sum", "numpy.repeat", "range", "infil_base.infil_component.dz_val.min", "infil_base.infil_component.dz_val.max", "numpy.cumsum", "numpy.sum", "numpy.repeat", "numpy.concatenate", "numpy.zeros"], "store_vars_calls": {"self.nz": "np.sum", "dz": "np.concatenate", "dz_min": "self.dz_val.min", "dz_max": "self.dz_val.max", "self.z": "np.cumsum", "dz_j": "np.repeat"}}, "build_layered_var": {"args": ["self", "var_list_for_layers"], "returns": [["var"]], "min_max_lineno": {"min_lineno": 420, "max_lineno": 485}, "calls": ["numpy.concatenate", "numpy.int16", "range", "numpy.maximum", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.int32", "range", "numpy.int32", "numpy.cumsum"], "store_vars_calls": {"i": "np.concatenate", "nmax": "np.maximum", "var": "np.zeros"}}, "set_computed_input_vars": {"args": ["self"], "min_max_lineno": {"min_lineno": 488, "max_lineno": 507}, "calls": ["numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum"], "store_vars_calls": {"self.save_grid_dt": "np.maximum", "self.save_pixels_dt": "np.maximum", "self.save_profile_dt": "np.maximum", "self.save_cube_dt": "np.maximum"}}, "check_input_types": {"args": ["self"], "min_max_lineno": {"min_lineno": 510, "max_lineno": 534}, "calls": ["numpy.array", "numpy.all", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar", "infil_base.infil_component.is_scalar"], "store_vars_calls": {"are_scalars": "np.array", "self.ALL_SCALARS": "np.all"}}, "update_surface_influx": {"args": ["self"], "min_max_lineno": {"min_lineno": 547, "max_lineno": 557}, "calls": ["print"]}, "update_infil_rate": {"args": ["self"], "min_max_lineno": {"min_lineno": 561, "max_lineno": 571}, "calls": ["print", "print"]}, "adjust_infil_rate": {"args": ["self"], "min_max_lineno": {"min_lineno": 639, "max_lineno": 687}, "calls": ["numpy.where", "numpy.size", "print", "infil_base.infil_component.check_low_rainrate", "numpy.float64"], "store_vars_calls": {"w": "np.where", "nw": "np.size"}}, "update_v0_integral": {"args": ["self"], "min_max_lineno": {"min_lineno": 696, "max_lineno": 722}, "calls": ["numpy.double", "numpy.double", "print", "numpy.size", "numpy.sum", "numpy.size", "numpy.sum"], "store_vars_calls": {"volume": "np.double", "vol2": "np.double"}}, "update_Rg": {"args": ["self"], "min_max_lineno": {"min_lineno": 731, "max_lineno": 748}, "calls": ["infil_base.infil_component.IN.copy", "print"], "store_vars_calls": {"self.Rg": "self.IN.copy"}}, "update_Rg_integral": {"args": ["self"], "min_max_lineno": {"min_lineno": 751, "max_lineno": 764}, "calls": ["numpy.double", "print", "numpy.size", "numpy.sum"], "store_vars_calls": {"volume": "np.double"}}, "update_I": {"args": ["self"], "min_max_lineno": {"min_lineno": 767, "max_lineno": 783}, "calls": ["print"]}, "update_q0": {"args": ["self"], "min_max_lineno": {"min_lineno": 798, "max_lineno": 809}, "calls": ["print"]}, "update_total_storage": {"args": ["self", "REPORT"], "min_max_lineno": {"min_lineno": 812, "max_lineno": 888}, "calls": ["infil_base.infil_component.vol_soil.fill", "print", "Vw.sum", "Vw.sum", "hasattr", "numpy.float64", "print", "print", "print", "print", "print", "print", "print", "print", "numpy.ones"], "store_vars_calls": {"Vw_profile": "Vw.sum", "self.storage": "Vw.sum", "self.storage_init": "np.float64"}}, "check_infiltration": {"args": ["self"], "min_max_lineno": {"min_lineno": 891, "max_lineno": 936}, "calls": ["numpy.array", "print", "print", "print", "sys.exit", "print", "numpy.size", "numpy.isfinite", "numpy.logical_not", "numpy.logical_not.sum", "print", "numpy.isfinite", "str"], "store_vars_calls": {"msg": "np.array", "OK": "np.isfinite", "wbad": "np.logical_not", "nbad": "wbad.sum"}}, "check_low_rainrate": {"args": ["self"], "min_max_lineno": {"min_lineno": 939, "max_lineno": 978}, "calls": ["numpy.size", "numpy.size", "numpy.where", "numpy.size"], "store_vars_calls": {"nPt": "np.size", "nK": "np.size", "w": "np.where", "nw": "np.size"}}, "open_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 982, "max_lineno": 1012}, "calls": ["range", "infil_base.infil_component.Ks_unit.append", "infil_base.infil_component.Ki_unit.append", "infil_base.infil_component.qs_unit.append", "infil_base.infil_component.qi_unit.append", "infil_base.infil_component.G_unit.append", "infil_base.infil_component.gam_unit.append", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file", "topoflow.utils.model_input.open_file"]}, "read_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 1015, "max_lineno": 1049}, "calls": ["range", "print", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next", "topoflow.utils.model_input.read_next"], "store_vars_calls": {"Ks": "model_input.read_next", "Ki": "model_input.read_next", "qs": "model_input.read_next", "qi": "model_input.read_next", "G": "model_input.read_next", "gam": "model_input.read_next"}}, "close_input_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 1052, "max_lineno": 1071}, "calls": ["range", "infil_base.infil_component.comp_status.lower", "infil_base.infil_component.Ks_type[].lower", "infil_base.infil_component.Ks_unit[].close", "infil_base.infil_component.Ki_type[].lower", "infil_base.infil_component.Ki_unit[].close", "infil_base.infil_component.qs_type[].lower", "infil_base.infil_component.qs_unit[].close", "infil_base.infil_component.qi_type[].lower", "infil_base.infil_component.qi_unit[].close", "infil_base.infil_component.G_type[].lower", "infil_base.infil_component.G_unit[].close", "infil_base.infil_component.gam_type[].lower", "infil_base.infil_component.gam_unit[].close"]}, "update_outfile_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 1074, "max_lineno": 1100}}, "disable_all_output": {"args": ["self"], "min_max_lineno": {"min_lineno": 1103, "max_lineno": 1126}}, "open_output_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 1129, "max_lineno": 1282}, "calls": ["topoflow.utils.model_output.check_netcdf", "infil_base.infil_component.update_outfile_names", "topoflow.utils.model_output.open_new_gs_file", "topoflow.utils.model_output.open_new_gs_file", "topoflow.utils.model_output.open_new_gs_file", "topoflow.utils.model_output.open_new_gs_file", "topoflow.utils.model_output.open_new_ts_file", "topoflow.utils.model_output.open_new_ts_file", "topoflow.utils.model_output.open_new_ts_file", "topoflow.utils.model_output.open_new_ts_file", "topoflow.utils.model_output.open_new_ps_file", "topoflow.utils.model_output.open_new_ps_file", "topoflow.utils.model_output.open_new_ps_file", "topoflow.utils.model_output.open_new_ps_file", "topoflow.utils.model_output.open_new_cs_file", "topoflow.utils.model_output.open_new_cs_file", "topoflow.utils.model_output.open_new_cs_file", "topoflow.utils.model_output.open_new_cs_file"]}, "write_output_files": {"args": ["self", "time_seconds"], "min_max_lineno": {"min_lineno": 1317, "max_lineno": 1364}, "calls": ["int", "print", "infil_base.infil_component.save_grids", "infil_base.infil_component.save_pixel_values", "infil_base.infil_component.save_profiles", "infil_base.infil_component.save_cubes", "int", "int", "int", "int"], "store_vars_calls": {"model_time": "int"}}, "close_output_files": {"args": ["self"], "min_max_lineno": {"min_lineno": 1367, "max_lineno": 1391}, "calls": ["topoflow.utils.model_output.close_gs_file", "topoflow.utils.model_output.close_gs_file", "topoflow.utils.model_output.close_gs_file", "topoflow.utils.model_output.close_gs_file", "topoflow.utils.model_output.close_ts_file", "topoflow.utils.model_output.close_ts_file", "topoflow.utils.model_output.close_ts_file", "topoflow.utils.model_output.close_ts_file", "topoflow.utils.model_output.close_ps_file", "topoflow.utils.model_output.close_ps_file", "topoflow.utils.model_output.close_ps_file", "topoflow.utils.model_output.close_ps_file", "topoflow.utils.model_output.close_cs_file", "topoflow.utils.model_output.close_cs_file", "topoflow.utils.model_output.close_cs_file", "topoflow.utils.model_output.close_cs_file"]}, "save_grids": {"args": ["self"], "min_max_lineno": {"min_lineno": 1394, "max_lineno": 1417}, "calls": ["print", "topoflow.utils.model_output.add_grid", "topoflow.utils.model_output.add_grid", "topoflow.utils.model_output.add_grid", "topoflow.utils.model_output.add_grid"]}, "save_pixel_values": {"args": ["self"], "min_max_lineno": {"min_lineno": 1420, "max_lineno": 1447}, "calls": ["print", "topoflow.utils.model_output.add_values_at_IDs", "topoflow.utils.model_output.add_values_at_IDs", "topoflow.utils.model_output.add_values_at_IDs", "topoflow.utils.model_output.add_values_at_IDs"]}, "save_profiles": {"args": ["self"], "min_max_lineno": {"min_lineno": 1464, "max_lineno": 1493}, "calls": ["print", "topoflow.utils.model_output.add_profiles_at_IDs", "topoflow.utils.model_output.add_profiles_at_IDs", "topoflow.utils.model_output.add_profiles_at_IDs", "topoflow.utils.model_output.add_profiles_at_IDs"]}, "save_cubes": {"args": ["self"], "min_max_lineno": {"min_lineno": 1496, "max_lineno": 1524}, "calls": ["print", "topoflow.utils.model_output.add_cube", "topoflow.utils.model_output.add_cube", "topoflow.utils.model_output.add_cube", "topoflow.utils.model_output.add_cube"]}}}}, "is_test": false}