{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/mic/src/mic/commands_notebook.py", "fileNameBase": "commands_notebook", "extension": "py", "doc": {"short_description": "Implementation for the notebook commands.", "full": "Implementation for the notebook commands."}}, "dependencies": [{"import": "os", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"import": "click", "type": "external"}, {"import": "semver", "type": "external"}, {"from_module": "datetime", "import": "datetime", "type": "external"}, {"from_module": "ipython2cwl.repo2cwl", "import": "repo2cwl", "type": "external"}, {"import": "mic", "type": "external"}, {"from_module": "mic", "import": "_utils", "type": "external"}, {"from_module": "mic._utils", "import": "get_mic_logger", "type": "external"}, {"from_module": "mic._utils", "import": "obtain_id", "type": "external"}, {"from_module": "mic.cli_docs", "import": "info_start_publish", "type": "external"}, {"from_module": "mic.cli_docs", "import": "info_end_publish", "type": "external"}, {"from_module": "mic.config_yaml", "import": "get_spec", "type": "external"}, {"from_module": "mic.config_yaml", "import": "write_spec", "type": "external"}, {"from_module": "mic.config_yaml", "import": "create_config_file_yaml", "type": "external"}, {"from_module": "mic.constants", "import": "DOCKER_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "NAME_KEY", "type": "external"}, {"from_module": "mic.constants", "import": "CWL_KEY", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "add_parameters", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "add_outputs", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "get_docker_image", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "add_inputs", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "update_docker_image", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "get_inputs", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "get_parameters", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "get_outputs", "type": "external"}, {"from_module": "mic.cwl.cwl", "import": "get_base_command", "type": "external"}, {"from_module": "mic.publisher.docker", "import": "get_docker_username", "type": "external"}, {"from_module": "mic.publisher.docker", "import": "image_exists", "type": "external"}, {"from_module": "mic.publisher.docker", "import": "parse_docker_name", "type": "external"}, {"from_module": "mic.publisher.model_catalog", "import": "publish_model_configuration", "type": "external"}, {"from_module": "mic.publisher.model_catalog", "import": "create_model_catalog_resource_cwl", "type": "external"}], "functions": {"cli": {"doc": {"short_description": "Check if the user is using the latest version", "args": {"verbose": {"description": "Log level", "type_name": "int", "is_optional": false}}}, "args": ["verbose"], "min_max_lineno": {"min_lineno": 30, "max_lineno": 59}, "calls": ["click.group", "click.option", "mic._utils.init_logger", "semver.compare", "click.secho", "click.secho", "logging.debug", "mic.__version__.split", "mic._utils.get_latest_version().split", "mic._utils.get_latest_version"]}, "read": {"doc": {"short_description": "Use repo2cwl to clone the repository and build it", "args": {"url": {"description": "[description]", "type_name": "[type]", "is_optional": false}}}, "args": ["url"], "min_max_lineno": {"min_lineno": 62, "max_lineno": 77}, "calls": ["cli.command", "click.argument", "ipython2cwl.repo2cwl.repo2cwl", "click.secho", "click.secho", "click.Path"]}, "upload_image": {"args": ["cwl_document", "profile"], "min_max_lineno": {"min_lineno": 78, "max_lineno": 122}, "calls": ["cli.command", "click.argument", "click.option", "pathlib.Path", "mic.config_yaml.get_spec", "mic.publisher.docker.image_exists", "click.echo", "mic.publisher.docker.get_docker_username", "datetime.datetime.now().strftime", "click.echo", "mic.cwl.cwl.update_docker_image", "pathlib.Path.exists", "exit", "mic.cwl.cwl.get_docker_image", "mic.publisher.docker.parse_docker_name", "os.system", "click.Path", "click.secho", "exit", "datetime.datetime.now", "click.echo", "exit"], "store_vars_calls": {"cwl_path": "Path", "cwl_spec": "get_spec", "docker_username": "get_docker_username", "version": "datetime.now().strftime", "docker_image": "get_docker_image", "docker_image_parsed": "parse_docker_name"}}, "upload_component": {"args": ["cwl_document", "cwl_values", "profile"], "min_max_lineno": {"min_lineno": 123, "max_lineno": 184}, "calls": ["cli.command", "click.argument", "click.argument", "click.option", "pathlib.Path", "mic.config_yaml.create_config_file_yaml", "mic.config_yaml.get_spec", "mic.config_yaml.write_spec", "mic.config_yaml.get_spec", "mic.cwl.cwl.get_inputs", "mic.cwl.cwl.get_outputs", "mic.cwl.cwl.get_parameters", "mic.cwl.cwl.add_inputs", "mic.cwl.cwl.add_outputs", "mic.cwl.cwl.add_parameters", "mic.cwl.cwl.get_docker_image", "mic.config_yaml.write_spec", "mic.config_yaml.write_spec", "mic.publisher.model_catalog.create_model_catalog_resource_cwl", "mic.publisher.model_catalog.publish_model_configuration", "mic.cli_docs.info_end_publish", "pathlib.Path", "pathlib.Path", "mic._utils.obtain_id", "mic._utils.obtain_id", "mic._utils.obtain_id", "click.Path", "click.Path"], "store_vars_calls": {"cwl_document_path": "Path", "mic_config_path": "create_config_file_yaml", "cwl_values_dict": "get_spec", "cwl_document_dict": "get_spec", "inputs": "get_inputs", "outputs": "get_outputs", "parameters": "get_parameters", "docker_image": "get_docker_image", "model_configuration": "create_model_catalog_resource_cwl"}}}, "body": {"calls": ["mic._utils.get_mic_logger"], "store_vars_calls": {"logging": "get_mic_logger"}}, "is_test": false}