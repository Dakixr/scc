{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/wings-importer/importer/database.py", "fileNameBase": "database", "extension": "py", "doc": {"short_description": "Database module, including the SQLAlchemy database object and DB-related utilities.", "full": "Database module, including the SQLAlchemy database object and DB-related utilities."}}, "dependencies": [{"from_module": "compat", "import": "basestring", "type": "external"}, {"from_module": "extensions", "import": "db", "type": "external"}], "classes": {"CRUDMixin": {"doc": {"short_description": "Mixin that adds convenience methods for CRUD (create, read, update, delete) operations.", "full": "Mixin that adds convenience methods for CRUD (create, read, update, delete) operations."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 37}, "methods": {"create": {"doc": {"short_description": "Create a new record and save it the database."}, "args": ["cls"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 19}, "calls": ["cls", "cls.save"], "store_vars_calls": {"instance": "cls"}}, "update": {"doc": {"short_description": "Update specific fields of a record."}, "args": ["self", "commit"], "min_max_lineno": {"min_lineno": 20, "max_lineno": 25}, "calls": ["kwargs.items", "setattr", "database.CRUDMixin.save"]}, "save": {"doc": {"short_description": "Save the record."}, "args": ["self", "commit"], "returns": [["self"]], "min_max_lineno": {"min_lineno": 26, "max_lineno": 32}, "calls": ["extensions.db.session.add", "extensions.db.session.commit"]}, "delete": {"doc": {"short_description": "Remove the record from the database."}, "args": ["self", "commit"], "min_max_lineno": {"min_lineno": 33, "max_lineno": 37}, "calls": ["extensions.db.session.delete", "extensions.db.session.commit"]}}}, "Model": {"doc": {"short_description": "Base model class that includes CRUD convenience methods.", "full": "Base model class that includes CRUD convenience methods."}, "min_max_lineno": {"min_lineno": 39, "max_lineno": 43}}, "SurrogatePK": {"doc": {"short_description": "A mixin that adds a surrogate integer 'primary key' column named ``id`` to any declarative-mapped class.", "full": "A mixin that adds a surrogate integer 'primary key' column named ``id`` to any declarative-mapped class."}, "extend": ["object"], "min_max_lineno": {"min_lineno": 47, "max_lineno": 63}, "methods": {"get_by_id": {"doc": {"short_description": "Get record by ID."}, "args": ["cls", "record_id"], "min_max_lineno": {"min_lineno": 54, "max_lineno": 63}, "calls": ["any", "cls.query.get", "isinstance", "int", "isinstance", "record_id.isdigit"]}}}}, "functions": {"reference_col": {"doc": {"long_description": "Usage: ::\n\n    category_id = reference_col('category')\n    category = relationship('Category', backref='categories')", "short_description": "Column that adds primary key foreign key reference."}, "args": ["tablename", "nullable", "pk_name"], "min_max_lineno": {"min_lineno": 65, "max_lineno": 76}, "calls": ["Column", "extensions.db.ForeignKey"]}}, "is_test": false}