{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/primitive-interfaces/primitive_interfaces/distance.py", "fileNameBase": "distance", "extension": "py"}, "dependencies": [{"import": "abc", "type": "external"}, {"import": "typing", "type": "external"}, {"from_module": "d3m_metadata", "import": "types", "type": "external"}, {"from_module": "base", "import": "CallResult", "type": "internal"}, {"from_module": "base", "import": "PrimitiveBaseMeta", "type": "internal"}, {"from_module": "base", "import": "PrimitiveBase", "type": "internal"}, {"from_module": "base", "import": "ContinueFitMixin", "type": "internal"}, {"from_module": "base", "import": "SamplingCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "ProbabilisticCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "Scores", "type": "internal"}, {"from_module": "base", "import": "Gradients", "type": "internal"}, {"from_module": "base", "import": "GradientCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "LossFunctionMixin", "type": "internal"}, {"from_module": "base", "import": "SingletonOutputMixin", "type": "internal"}, {"from_module": "transformer", "import": "TransformerPrimitiveBase", "type": "external"}], "classes": {"PairwiseDistanceLearnerPrimitiveBase": {"doc": {"long_description": "different sets of instances.\n\nClass is parametrized using five type variables, ``Inputs``, ``InputLabels``, ``Outputs``, ``Params``, and ``Hyperparams``.", "short_description": "A base class for primitives which learn distances (however defined) between two", "full": "A base class for primitives which learn distances (however defined) between two\ndifferent sets of instances.\n\nClass is parametrized using five type variables, ``Inputs``, ``InputLabels``, ``Outputs``, ``Params``, and ``Hyperparams``."}, "min_max_lineno": {"min_lineno": 15, "max_lineno": 50}, "methods": {"produce": {"doc": {"short_description": "Computes distance matrix between two sets of data.", "args": {"inputs": {"description": "The first set of collections of instances.", "type_name": "Inputs", "is_optional": false}, "second_inputs": {"description": "The second set of collections of instances.", "type_name": "Inputs", "is_optional": false}, "timeout": {"description": "A maximum time this primitive should take to produce outputs during this method call, in seconds.", "type_name": "float", "is_optional": false}, "iterations": {"description": "How many of internal iterations should the primitive do.", "type_name": "int", "is_optional": false}, "CallResult[Outputs]": {"description": "A n by m distance matrix describing the relationship between each instance in inputs[0] and each instance\nin inputs[1] (n and m are the number of instances in inputs[0] and inputs[1], respectively),\nwrapped inside ``CallResult``."}}}, "args": ["self"], "min_max_lineno": {"min_lineno": 23, "max_lineno": 26}}, "set_training_data": {"doc": {"short_description": "Sets training data of this primitive.", "args": {"inputs": {"description": "The inputs.", "type_name": "Inputs", "is_optional": false}, "input_labels": {"description": "A set of class labels for the inputs.", "type_name": "InputLabels", "is_optional": false}}}, "args": ["self"], "min_max_lineno": {"min_lineno": 47, "max_lineno": 50}}}}, "PairwiseDistanceTransformerPrimitiveBase": {"doc": {"long_description": "different sets of instances without learning any sort of model.", "short_description": "A base class for primitives which compute distances (however defined) between two", "full": "A base class for primitives which compute distances (however defined) between two\ndifferent sets of instances without learning any sort of model."}, "min_max_lineno": {"min_lineno": 61, "max_lineno": 70}, "methods": {"produce": {"doc": {"short_description": "Computes distance matrix between two sets of data.", "args": {"inputs": {"description": "The first set of collections of instances.", "type_name": "Inputs", "is_optional": false}, "second_inputs": {"description": "The second set of collections of instances.", "type_name": "Inputs", "is_optional": false}, "timeout": {"description": "A maximum time this primitive should take to produce outputs during this method call, in seconds.", "type_name": "float", "is_optional": false}, "iterations": {"description": "How many of internal iterations should the primitive do.", "type_name": "int", "is_optional": false}, "Outputs": {"description": "A n by m distance matrix describing the relationship between each instance in inputs[0] and each instance\nin inputs[1] (n and m are the number of instances in inputs[0] and inputs[1], respectively),\nwrapped inside ``CallResult``."}}}, "args": ["self"], "min_max_lineno": {"min_lineno": 67, "max_lineno": 70}}}}}, "body": {"calls": ["typing.TypeVar"], "store_vars_calls": {"InputLabels": "typing.TypeVar"}}, "is_test": false}