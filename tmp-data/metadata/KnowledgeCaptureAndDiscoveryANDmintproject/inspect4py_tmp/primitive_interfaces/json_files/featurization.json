{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/primitive-interfaces/primitive_interfaces/featurization.py", "fileNameBase": "featurization", "extension": "py"}, "dependencies": [{"from_module": "base", "import": "CallResult", "type": "internal"}, {"from_module": "base", "import": "PrimitiveBaseMeta", "type": "internal"}, {"from_module": "base", "import": "PrimitiveBase", "type": "internal"}, {"from_module": "base", "import": "ContinueFitMixin", "type": "internal"}, {"from_module": "base", "import": "SamplingCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "ProbabilisticCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "Scores", "type": "internal"}, {"from_module": "base", "import": "Gradients", "type": "internal"}, {"from_module": "base", "import": "GradientCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "LossFunctionMixin", "type": "internal"}, {"from_module": "base", "import": "SingletonOutputMixin", "type": "internal"}, {"from_module": "transformer", "import": "TransformerPrimitiveBase", "type": "external"}], "classes": {"FeaturizationPrimitiveBase": {"doc": {"long_description": "Use this version for featurizers that allow for fitting (for domain-adaptation, data-specific deep\nlearning, etc.).  Otherwise use `FeaturizationTransformerPrimitiveBase`.", "short_description": "A base class for primitives which transform raw data into a more usable form.", "full": "A base class for primitives which transform raw data into a more usable form.\n\nUse this version for featurizers that allow for fitting (for domain-adaptation, data-specific deep\nlearning, etc.).  Otherwise use `FeaturizationTransformerPrimitiveBase`."}, "min_max_lineno": {"min_lineno": 7, "max_lineno": 9}}, "FeaturizationTransformerPrimitiveBase": {"doc": {"long_description": "Use this version for featurizers that do not require or allow any fitting, and simply\ntransform data on demand.  Otherwise use `FeaturizationPrimitiveBase`.", "short_description": "A base class for primitives which transform raw data into a more usable form.", "full": "A base class for primitives which transform raw data into a more usable form.\n\nUse this version for featurizers that do not require or allow any fitting, and simply\ntransform data on demand.  Otherwise use `FeaturizationPrimitiveBase`."}, "min_max_lineno": {"min_lineno": 16, "max_lineno": 18}}}, "is_test": false}