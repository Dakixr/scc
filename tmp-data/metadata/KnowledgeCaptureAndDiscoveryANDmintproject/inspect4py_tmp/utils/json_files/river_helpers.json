{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/MINT-GeoViz/examples/utils/river_helpers.py", "fileNameBase": "river_helpers", "extension": "py"}, "dependencies": [{"import": "os", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "re", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "pdb", "type": "external"}, {"from_module": "inspect", "import": "getmro", "type": "external"}, {"from_module": "typing", "import": "Union", "type": "external"}, {"from_module": "typing", "import": "Iterable", "type": "external"}, {"from_module": "typing", "import": "Collection", "type": "external"}, {"from_module": "shapely.geometry", "import": "Polygon", "type": "external"}, {"from_module": "shapely.geometry", "import": "Point", "type": "external"}, {"from_module": "utils", "import": "nprint", "type": "external"}, {"from_module": "geo_helpers", "import": "bounds2poly", "type": "external"}, {"from_module": "geo_helpers", "import": "crop_gdf_to_bounds", "type": "external"}, {"from_module": "geo_helpers", "import": "get_polys_at_lonlat", "type": "external"}], "functions": {"load_river_csvs": {"doc": {"long_description": "returns a pd.DataFrame of concatenated csvs with a single header", "short_description": "Given a directory containing csv files with the same header,"}, "args": ["csv_dir"], "returns": [["data"]], "min_max_lineno": {"min_lineno": 40, "max_lineno": 56}, "calls": ["isinstance", "pandas.concat", "pd.concat.reset_index", "pd.concat.drop", "pd.concat.Time.astype", "pathlib.Path().absolute", "dfs.append", "Path().absolute.iterdir", "pandas.read_csv", "pathlib.Path"], "store_vars_calls": {"data": "pd.concat", "csv_dir": "Path().absolute"}}, "select_gdf_at_lonlat": {"doc": {"short_description": "Returns a new GeoDataFrame that intersects with the point at lon, lat"}, "args": ["gdf", "lon", "lat"], "returns": [["gdf_selected"]], "min_max_lineno": {"min_lineno": 58, "max_lineno": 65}, "calls": ["shapely.geometry.Point", "gdf.intersects"], "store_vars_calls": {"p": "Point"}}, "get_basin_id": {"args": ["basin_data", "lon", "lat"], "min_max_lineno": {"min_lineno": 68, "max_lineno": 77}, "calls": ["river_helpers.select_gdf_at_lonlat", "len", "gdf_selected[].item"], "store_vars_calls": {"gdf_selected": "select_gdf_at_lonlat"}}, "select_gdf_in_basin": {"args": ["gdf", "basin_data", "basin_id", "basin_id_col", "verbose"], "returns": [["gdf_selected"]], "min_max_lineno": {"min_lineno": 78, "max_lineno": 92}, "calls": ["geo_helpers.crop_gdf_to_bounds", "print", "len", "len", "geo_helpers.crop_gdf_to_bounds.groupby"], "store_vars_calls": {"gdf_selected": "crop_gdf_to_bounds"}}}, "body": {"calls": ["os.path.dirname", "os.path.realpath", "print"], "store_vars_calls": {"file_dir": "os.path.dirname"}}, "is_test": false}