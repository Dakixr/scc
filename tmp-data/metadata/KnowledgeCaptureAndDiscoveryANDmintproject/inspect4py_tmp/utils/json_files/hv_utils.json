{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/MINT-GeoViz/examples/utils/hv_utils.py", "fileNameBase": "hv_utils", "extension": "py"}, "dependencies": [{"import": "os", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "time", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "scipy", "alias": "sp", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "geopandas", "alias": "gpd", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"from_module": "pprint", "import": "pprint", "type": "external"}, {"import": "holoviews", "alias": "hv", "type": "external"}, {"import": "xarray", "alias": "xr", "type": "external"}, {"from_module": "holoviews", "import": "opts", "type": "external"}, {"from_module": "holoviews.operation.datashader", "import": "datashade", "type": "external"}, {"from_module": "holoviews.operation.datashader", "import": "shade", "type": "external"}, {"from_module": "holoviews.operation.datashader", "import": "dynspread", "type": "external"}, {"from_module": "holoviews.operation.datashader", "import": "rasterize", "type": "external"}, {"from_module": "holoviews.streams", "import": "Stream", "type": "external"}, {"from_module": "holoviews.streams", "import": "param", "type": "external"}, {"from_module": "holoviews", "import": "streams", "type": "external"}, {"import": "geoviews", "alias": "gv", "type": "external"}, {"import": "geoviews", "alias": "gf", "type": "external"}, {"from_module": "geoviews", "import": "tile_sources", "alias": "gvts", "type": "external"}, {"import": "cartopy", "alias": "ccrs", "type": "external"}, {"import": "cartopy", "alias": "cf", "type": "external"}, {"import": "pdb", "type": "external"}], "functions": {"get_element_plot_mapping": {"doc": {"long_description": "for the backend\n- backend (str): eg: 'bokeh','matplotlib'", "short_description": "shows the mapping of holoviews element and plot "}, "args": ["backend"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 39}, "calls": ["pandas.set_option", "pandas.DataFrame", "holoviews.Table().opts", "list", "list", "holoviews.Table", "map", "map", "regi.keys", "regi.values"], "store_vars_calls": {"df": "pd.DataFrame"}}, "relabel_elements": {"doc": {"long_description": "labels (str or iterable of strs)\nlength of hv elements in the overlay must equal to the length of labels", "short_description": "ndOverlay is indexed by integer"}, "args": ["ndoverlay", "labels"], "returns": [["relabeled"]], "min_max_lineno": {"min_lineno": 40, "max_lineno": 57}, "calls": ["isinstance", "cycle", "holoviews.NdOverlay", "isinstance", "ValueError", "len", "len", "ndoverlay[].relabel", "next", "range", "len"], "store_vars_calls": {"it": "cycle", "relabeled": "hv.NdOverlay"}}, "ranges2lbrt": {"doc": {"long_description": "l,b,r,t \nArgs:\n- x_range, y_range (tuple)\nReturns\n- lbrt (tuple of 4 floats)", "short_description": "Convert x_range and y_range to a tuple of 4 floats indicating"}, "args": ["x_range", "y_range"], "returns": [["minx", "miny", "maxx", "maxy"]], "min_max_lineno": {"min_lineno": 62, "max_lineno": 74}}, "lbrt2ranges": {"doc": {"long_description": "to x_range and y_range", "short_description": "Converts a tuple of 4 floats indicating l,b,r,t coordinate"}, "args": ["lbrt"], "min_max_lineno": {"min_lineno": 75, "max_lineno": 82}}, "extract_item": {"doc": {"short_description": "Extract item from a zero-dimensional xarray"}, "args": ["xarr"], "min_max_lineno": {"min_lineno": 87, "max_lineno": 92}, "calls": ["xarr.values.item", "ValueError"]}, "get_stats": {"doc": {"long_description": "Args:\n- arr (np.array or xarray.DataArray in dask)\n- show_as_timestamp (bool): \n    If True, return the argmin and argmax as datetime64 \n    If False, return as index to arr's coordinate\n- decimals (int): number of decimal places to round to\n\nReturns:\n- stats: a dictionary with the following keys:\n    - mean, std, min, argmin, max, argmax,", "short_description": "Computes statistics of a 1Dim xr.array type data"}, "args": ["arr", "show_as_timestamp", "decimals"], "returns": [["df"]], "min_max_lineno": {"min_lineno": 94, "max_lineno": 148}, "calls": ["isinstance", "enumerate", "list", "OrderedDict", "pandas.DataFrame.from_records", "arr.load", "ValueError", "numpy.isnan", "numpy.around", "map", "OrderedDict.update", "hv_utils.extract_item", "OrderedDict.keys", "arr.mean", "arr.std", "arr.min", "arr.argmin", "arr.max", "arr.argmax", "arr.get_index", "arr.get_index"], "store_vars_calls": {"vals": "list", "stats": "OrderedDict", "df": "pd.DataFrame.from_records"}, "functions": {"to_float": {"args": ["x"], "min_max_lineno": {"min_lineno": 120, "max_lineno": 122}, "calls": ["numpy.around", "hv_utils.extract_item"]}}}, "get_img": {"doc": {"long_description": "Args:\n- xrd (xarray dataset)\n- varname (str)\n- t (int or dt.datetime64)\nReturns:\n- img (hv.Image)", "short_description": "Returns a hv.Image of xarray dataset's variable named `varname` at `tidx`th time"}, "args": ["xrd", "varname", "t", "crs"], "min_max_lineno": {"min_lineno": 149, "max_lineno": 163}, "calls": ["cartopy.PlateCarree", "isinstance", "geoviews.Image", "geoviews.Image", "xrd[].isel", "xrd[].sel"]}, "append_to_div": {"doc": {"long_description": "by adding a new paragraph that contains the input `new_str`\nArgs:\n- hvDiv (hv.Div)\n- new_str (str)\n\nModifies the hvDiv inplace, returns None", "short_description": "Modifies the hvDiv element inplace"}, "args": ["hvDiv", "new_str"], "min_max_lineno": {"min_lineno": 164, "max_lineno": 175}}, "get_debug_div": {"min_max_lineno": {"min_lineno": 179, "max_lineno": 192}, "calls": ["print", "kwargs.items", "holoviews.Div", "str"]}, "test_ranges2lbrt": {"min_max_lineno": {"min_lineno": 197, "max_lineno": 201}, "calls": ["hv_utils.ranges2lbrt"], "store_vars_calls": {"lbtc": "ranges2lbrt"}}, "test_lbrt2ranges": {"min_max_lineno": {"min_lineno": 201, "max_lineno": 204}, "calls": ["hv_utils.lbrt2ranges"]}, "test_get_img": {"min_max_lineno": {"min_lineno": 204, "max_lineno": 206}}, "test_append_to_div": {"min_max_lineno": {"min_lineno": 207, "max_lineno": 217}, "calls": ["holoviews.Div", "print", "display", "hv_utils.append_to_div", "print", "display"], "store_vars_calls": {"div": "hv.Div"}}}, "is_test": true}