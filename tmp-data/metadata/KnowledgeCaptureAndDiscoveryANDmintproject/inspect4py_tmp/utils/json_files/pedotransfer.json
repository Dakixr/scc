{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/utils/pedotransfer.py", "fileNameBase": "pedotransfer", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "scipy.special", "import": "gamma", "type": "external"}, {"import": "regrid", "alias": "rg", "type": "internal"}, {"import": "import_grid", "alias": "ig", "type": "internal"}, {"import": "rti_files", "type": "internal"}, {"import": "rtg_files", "type": "internal"}, {"import": "glob", "type": "external"}, {"import": "os", "type": "external"}, {"import": "os", "type": "external"}], "functions": {"test1": {"min_max_lineno": {"min_lineno": 52, "max_lineno": 57}, "calls": ["pedotransfer.transform_isric_soil_grid_files"]}, "test2": {"args": ["BARO_1MIN", "LOL_1MIN"], "min_max_lineno": {"min_lineno": 60, "max_lineno": 89}, "calls": ["pedotransfer.save_soil_hydraulic_vars"]}, "test3": {"min_max_lineno": {"min_lineno": 92, "max_lineno": 107}, "calls": ["print", "pedotransfer.wosten_alpha", "print", "print", "print", "pedotransfer.wosten_alpha", "print", "print", "str", "str"], "store_vars_calls": {"alpha": "wosten_alpha"}}, "get_nodata_values": {"returns": [["nd_values"]], "min_max_lineno": {"min_lineno": 111, "max_lineno": 158}}, "read_soil_grid_files": {"args": ["site_prefix", "directory", "res_str", "layer", "REPORT"], "returns": [["C", "S", "OM", "D"]], "min_max_lineno": {"min_lineno": 161, "max_lineno": 253}, "calls": ["os.chdir", "os.chdir", "rti_files.read_info", "rtg_files.read_grid", "rtg_files.read_grid", "rtg_files.read_grid", "rtg_files.read_grid", "pedotransfer.check_soil_grid_values", "pedotransfer.convert_soil_grid_values", "str"], "store_vars_calls": {"grid_info": "rti_files.read_info", "C": "rtg_files.read_grid", "S": "rtg_files.read_grid", "OC": "rtg_files.read_grid", "D": "rtg_files.read_grid"}}, "check_soil_grid_values": {"args": ["C", "S", "OC", "D", "REPORT"], "min_max_lineno": {"min_lineno": 256, "max_lineno": 369}, "calls": ["C.min", "C.max", "S.min", "S.max", "OC.min", "OC.max", "D.min", "D.max", "C[].min", "S[].min", "OC[].min", "D[].min", "C[].max", "S[].max", "OC[].max", "D[].max", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "store_vars_calls": {"Cmin": "C.min", "Cmax": "C.max", "Smin": "S.min", "Smax": "S.max", "OCmin": "OC.min", "OCmax": "OC.max", "Dmin": "D.min", "Dmax": "D.max", "Cmin2": "C[].min", "Smin2": "S[].min", "OCmin2": "OC[].min", "Dmin2": "D[].min", "Cmax2": "C[].max", "Smax2": "S[].max", "OCmax2": "OC[].max", "Dmax2": "D[].max"}}, "convert_soil_grid_values": {"args": ["C", "S", "OC", "D", "VERBOSE"], "returns": [["C", "S", "OM", "D"]], "min_max_lineno": {"min_lineno": 372, "max_lineno": 426}}, "read_isric_soil_grid_files": {"args": ["layer", "region_str", "res_str"], "returns": [["C", "S", "OM", "D"]], "min_max_lineno": {"min_lineno": 429, "max_lineno": 531}, "calls": ["gdal.Open", "gdal.Open.ReadAsArray", "gdal.Open", "gdal.Open.ReadAsArray", "gdal.Open", "gdal.Open.ReadAsArray", "gdal.Open", "gdal.Open.ReadAsArray", "str"], "store_vars_calls": {"f1": "gdal.Open", "C": "f1.ReadAsArray", "f2": "gdal.Open", "S": "f2.ReadAsArray", "f3": "gdal.Open", "OM": "f3.ReadAsArray", "f4": "gdal.Open", "D": "f4.ReadAsArray"}}, "get_rtg_file_prefix": {"args": ["tiff_file", "site_prefix"], "returns": [["rtg_prefix"]], "min_max_lineno": {"min_lineno": 534, "max_lineno": 551}, "calls": ["tiff_file.split", "len"], "store_vars_calls": {"p": "tiff_file.split", "n": "len"}}, "regrid_isric_soil_grid_files": {"args": ["site_prefix", "in_dir", "out_dir", "out_bounds", "out_xres_sec", "out_yres_sec", "RESAMPLE_ALGO", "REPORT"], "min_max_lineno": {"min_lineno": 554, "max_lineno": 619}, "calls": ["os.chdir", "os.chdir", "glob.glob", "sorted", "print", "print", "print", "print", "print", "len", "glob.glob", "len", "print", "print", "pedotransfer.get_rtg_file_prefix", "regrid.regrid_geotiff", "import_grid.save_geotiff_as_rtg", "str"], "store_vars_calls": {"tif_file_list": "glob.glob", "rtg_prefix": "get_rtg_file_prefix"}}, "transform_isric_soil_grid_files": {"args": ["site_prefix", "in_dir", "out_dir", "out_bounds", "out_xres_sec", "out_yres_sec", "RESAMPLE_ALGO", "IN_MEMORY", "REPORT"], "min_max_lineno": {"min_lineno": 622, "max_lineno": 774}, "calls": ["os.chdir", "os.chdir", "glob.glob", "sorted", "os.path.exists", "os.path.exists", "print", "print", "print", "print", "print", "len", "glob.glob", "len", "print", "print", "gdal.Open", "gdal.Open.ReadAsArray", "gdal.Open.GetRasterBand", "ds_in.GetRasterBand.GetNoDataValue", "regrid.get_raster_bounds", "regrid.bounds_disjoint", "os.remove", "os.remove", "print", "print", "print", "print", "print", "print", "print", "print", "numpy.where", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "regrid.gdal_regrid_to_dem_grid", "pedotransfer.get_rtg_file_prefix", "open", "numpy.float32", "np.float32.tofile", "open.close", "str", "str", "ds_in.ReadAsArray.min", "ds_in.ReadAsArray.max", "print", "print", "print", "print", "print", "numpy.where", "print", "print", "gdal.Unlink", "np.float32.min", "np.float32.max"], "store_vars_calls": {"tiff_file_list": "glob.glob", "ds_in": "gdal.Open", "grid1": "ds_in.ReadAsArray", "band": "ds_in.GetRasterBand", "tiff_nodata": "band.GetNoDataValue", "in_bounds": "rg.get_raster_bounds", "w": "np.where", "grid2": "np.float32", "rtg_prefix": "get_rtg_file_prefix", "rtg_unit": "open"}}, "wosten_theta_s": {"args": ["C", "S", "OM", "D", "topsoil", "FORCE_RANGE"], "returns": [["theta_s"]], "min_max_lineno": {"min_lineno": 777, "max_lineno": 842}, "calls": ["pedotransfer.get_nodata_values", "numpy.logical_or", "numpy.logical_or", "numpy.logical_or", "np.logical_or.sum", "theta_s.min", "theta_s.max", "print", "print", "print", "print", "print", "numpy.log", "print", "theta_s[].min", "theta_s[].max", "str", "str"], "store_vars_calls": {"nd_values": "get_nodata_values", "w1": "np.logical_or", "w2": "np.logical_or", "n1": "w1.sum", "qmin": "theta_s.min", "qmax": "theta_s.max"}}, "wosten_K_s": {"args": ["C", "S", "OM", "D", "topsoil"], "returns": [["Ks"]], "min_max_lineno": {"min_lineno": 845, "max_lineno": 908}, "calls": ["numpy.exp", "numpy.logical_or", "np.logical_or.sum", "np.exp.min", "np.exp.max", "print", "print", "print", "print", "print", "numpy.log", "str", "str"], "store_vars_calls": {"Ks": "np.exp", "w1": "np.logical_or", "n1": "w1.sum", "Ksmin": "Ks.min", "Ksmax": "Ks.max"}}, "wosten_alpha": {"args": ["C", "S", "OM", "D", "topsoil", "FORCE_RANGE"], "returns": [["alpha"]], "min_max_lineno": {"min_lineno": 911, "max_lineno": 1031}, "calls": ["numpy.logical_or", "np.logical_or.sum", "numpy.exp", "alpha.min", "alpha.max", "alpha[].max", "print", "print", "print", "print", "print", "print", "print", "numpy.log", "print", "numpy.log", "str", "str", "str"], "store_vars_calls": {"w1": "np.logical_or", "n1": "w1.sum", "amin": "alpha.min", "amax1": "alpha.max", "amax2": "alpha[].max"}}, "wosten_n": {"args": ["C", "S", "OM", "D", "topsoil", "FORCE_RANGE"], "returns": [["n"]], "min_max_lineno": {"min_lineno": 1034, "max_lineno": 1093}, "calls": ["numpy.logical_or", "np.logical_or.sum", "numpy.exp", "n.min", "n.max", "print", "print", "print", "print", "print", "print", "numpy.log", "numpy.log", "numpy.log", "print", "str", "str"], "store_vars_calls": {"w1": "np.logical_or", "n1": "w1.sum", "nmin": "n.min", "nmax": "n.max"}}, "wosten_L": {"args": ["C", "S", "OM", "D", "topsoil", "FORCE_RANGE"], "returns": [["L"]], "min_max_lineno": {"min_lineno": 1096, "max_lineno": 1147}, "calls": ["numpy.logical_or", "np.logical_or.sum", "L.min", "L.max", "print", "print", "print", "print", "print", "print", "print", "numpy.log", "numpy.exp", "print", "numpy.exp", "str", "str"], "store_vars_calls": {"w1": "np.logical_or", "n1": "w1.sum", "Lmin": "L.min", "Lmax": "L.max"}}, "get_wosten_vars": {"args": ["C", "S", "OM", "D", "topsoil"], "returns": [["theta_s", "K_s", "alpha", "n", "L"]], "min_max_lineno": {"min_lineno": 1150, "max_lineno": 1164}, "calls": ["pedotransfer.wosten_theta_s", "pedotransfer.wosten_K_s", "pedotransfer.wosten_alpha", "pedotransfer.wosten_n", "pedotransfer.wosten_L"], "store_vars_calls": {"theta_s": "wosten_theta_s", "K_s": "wosten_K_s", "alpha": "wosten_alpha", "n": "wosten_n", "L": "wosten_L"}}, "capillary_length_G": {"args": ["c", "eta", "n", "inv_alpha", "TBC", "FORCE_RANGE"], "returns": [["G"]], "min_max_lineno": {"min_lineno": 1167, "max_lineno": 1278}, "calls": ["numpy.logical_or", "np.logical_and.sum", "numpy.zeros", "numpy.logical_and", "scipy.special.gamma", "np.zeros.min", "np.zeros.max", "print", "print", "print", "print", "print", "print", "scipy.special.gamma", "print", "scipy.special.gamma", "scipy.special.gamma", "scipy.special.gamma", "scipy.special.gamma", "scipy.special.gamma", "scipy.special.gamma", "str", "str"], "store_vars_calls": {"w1": "np.logical_and", "n1": "w1.sum", "G": "np.zeros", "term3": "gamma", "Gmin": "G.min", "Gmax": "G.max"}}, "get_tBC_from_vG_vars": {"args": ["alpha", "n", "L"], "returns": [["psi_B", "c", "lam", "eta", "G"]], "min_max_lineno": {"min_lineno": 1281, "max_lineno": 1354}, "calls": ["numpy.invert", "numpy.zeros", "pedotransfer.capillary_length_G"], "store_vars_calls": {"w2": "np.invert", "inv_alpha": "np.zeros", "G": "capillary_length_G"}}, "save_soil_hydraulic_vars": {"args": ["site_prefix", "in_dir", "out_dir", "out_bounds", "REPORT", "out_xres_sec", "out_yres_sec", "RESAMPLE_ALGO"], "min_max_lineno": {"min_lineno": 1357, "max_lineno": 1518}, "calls": ["os.chdir", "os.chdir", "pedotransfer.transform_isric_soil_grid_files", "range", "print", "print", "pedotransfer.read_soil_grid_files", "pedotransfer.get_wosten_vars", "pedotransfer.get_tBC_from_vG_vars", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "open", "numpy.float32", "np.float32.tofile", "open.close", "print", "print", "print", "str", "str"], "store_vars_calls": {"Ks_unit": "open", "K_s": "np.float32", "qs_unit": "open", "theta_s": "np.float32", "pB_unit": "open", "psi_B": "np.float32", "c_unit": "open", "c": "np.float32", "lam_unit": "open", "lam": "np.float32", "G_unit": "open", "G": "np.float32", "a_unit": "open", "alpha": "np.float32", "n_unit": "open", "n": "np.float32", "L_unit": "open", "L": "np.float32"}}}, "is_test": false}