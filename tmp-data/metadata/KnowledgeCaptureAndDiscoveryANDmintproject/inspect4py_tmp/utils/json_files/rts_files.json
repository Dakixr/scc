{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/utils/rts_files.py", "fileNameBase": "rts_files", "extension": "py"}, "dependencies": [{"import": "os", "type": "external"}, {"import": "os", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "bov_files", "type": "internal"}, {"import": "file_utils", "type": "internal"}, {"import": "rti_files", "type": "internal"}], "classes": {"rts_file": {"min_max_lineno": {"min_lineno": 136, "max_lineno": 489}, "methods": {"open_file": {"args": ["self", "file_name", "UPDATE"], "min_max_lineno": {"min_lineno": 139, "max_lineno": 192}, "calls": ["rti_files.read_info", "rti_files.get_bpe", "rts_files.rts_file.byte_swap_needed", "open", "open", "print"], "store_vars_calls": {"info": "rti_files.read_info", "BPE": "rti_files.get_bpe", "self.SWAP_ENDIAN": "self.byte_swap_needed", "rts_unit": "open"}}, "get_bounds": {"args": ["self"], "min_max_lineno": {"min_lineno": 195, "max_lineno": 202}, "calls": ["hasattr"]}, "check_and_store_info": {"args": ["self", "file_name", "info", "var_name", "dtype", "MAKE_RTI", "MAKE_BOV"], "min_max_lineno": {"min_lineno": 205, "max_lineno": 307}, "calls": ["rti_files.get_rti_data_type", "rti_files.get_file_prefix", "rti_files.write_info", "bov_files.write_info_as_bov", "rti_files.try_to_find_rti_file", "rti_files.read_info", "print", "print", "print", "print"], "store_vars_calls": {"info.data_type": "rti_files.get_rti_data_type", "prefix": "rti_files.get_file_prefix", "RTI_file": "rti_files.try_to_find_rti_file", "info": "rti_files.read_info"}}, "open_new_file": {"args": ["self", "file_name", "info", "var_name", "dtype", "VERBOSE", "MAKE_RTI", "MAKE_BOV"], "min_max_lineno": {"min_lineno": 311, "max_lineno": 340}, "calls": ["file_utils.check_overwrite", "rts_files.rts_file.check_and_store_info", "open", "print", "print"], "store_vars_calls": {"file_name": "file_utils.check_overwrite", "self.rts_unit": "open"}}, "add_grid": {"args": ["self", "grid", "time_index"], "min_max_lineno": {"min_lineno": 343, "max_lineno": 398}, "calls": ["grid.copy().astype", "grid.copy().astype.tofile", "rts_files.rts_file.rts_unit.seek", "grid.copy().astype.byteswap", "numpy.ndim", "numpy.zeros", "grid.copy"], "store_vars_calls": {"out_grid": "grid.copy().astype"}}, "get_grid": {"args": ["self", "time_index", "dtype"], "returns": [["grid"]], "min_max_lineno": {"min_lineno": 427, "max_lineno": 448}, "calls": ["rts_files.rts_file.rts_unit.seek", "numpy.fromfile", "grid.reshape.reshape.reshape", "grid.reshape.reshape.byteswap"], "store_vars_calls": {"grid": "grid.reshape"}}, "read_grid": {"args": ["self", "time_index", "dtype"], "returns": [["grid"]], "min_max_lineno": {"min_lineno": 451, "max_lineno": 456}, "calls": ["rts_files.rts_file.get_grid"], "store_vars_calls": {"grid": "self.get_grid"}}, "close_file": {"args": ["self"], "min_max_lineno": {"min_lineno": 459, "max_lineno": 462}, "calls": ["rts_files.rts_file.rts_unit.close"]}, "close": {"args": ["self"], "min_max_lineno": {"min_lineno": 465, "max_lineno": 468}, "calls": ["rts_files.rts_file.rts_unit.close"]}, "byte_swap_needed": {"args": ["self"], "returns": [["SWAP"]], "min_max_lineno": {"min_lineno": 471, "max_lineno": 477}, "calls": ["rti_files.get_rti_byte_order"], "store_vars_calls": {"machine_byte_order": "rti_files.get_rti_byte_order"}}, "number_of_grids": {"args": ["self"], "returns": [["n_grids"]], "min_max_lineno": {"min_lineno": 480, "max_lineno": 489}, "calls": ["os.path.getsize", "os.path.getsize", "os.path.getsize", "os.path.getsize"], "store_vars_calls": {"file_size": "os.path.getsize"}}}}}, "functions": {"unit_test": {"args": ["nx", "ny", "n_grids", "VERBOSE", "file_name"], "min_max_lineno": {"min_lineno": 34, "max_lineno": 133}, "calls": ["print", "rts_files.rts_file", "rti_files.make_info", "rts_files.rts_file.open_new_file", "numpy.arange", "rts.get_grid.reshape", "range", "rts_files.rts_file.close_file", "print", "print", "rts_files.rts_file.open_file", "rts_files.rts_file.number_of_grids", "print", "print", "print", "print", "range", "rts_files.rts_file.get_grid", "print", "print", "print", "print", "print", "rts_files.rts_file.close_file", "print", "print", "print", "numpy.ones", "rts_files.rts_file.open_file", "rts_files.rts_file.add_grid", "rts_files.rts_file.close_file", "print", "print", "rts_files.rts_file.open_file", "rts_files.rts_file.number_of_grids", "print", "print", "print", "print", "range", "rts_files.rts_file.close_file", "print", "print", "print", "rts_files.rts_file.add_grid", "rts_files.rts_file.byte_swap_needed", "rts_files.rts_file.get_grid", "print", "print", "print", "rts_files.rts_file.byte_swap_needed", "rts_files.rts_file.get_grid", "print", "print", "print", "str", "str"], "store_vars_calls": {"rts": "rts_file", "info": "rti_files.make_info", "OK": "rts.open_file", "grid": "rts.get_grid", "n_grids": "rts.number_of_grids"}}}, "is_test": false}