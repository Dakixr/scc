{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/utils/conflict.py", "fileNameBase": "conflict", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "numpy", "alias": "rn", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "time", "type": "external"}, {"import": "glob", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "os", "type": "external"}, {"import": "os", "type": "external"}, {"import": "rti_files", "type": "internal"}, {"import": "rtg_files", "type": "internal"}], "classes": {"conflict": {"min_max_lineno": {"min_lineno": 130, "max_lineno": 986}, "methods": {"initialize": {"args": ["self", "cfg_file"], "min_max_lineno": {"min_lineno": 132, "max_lineno": 246}, "calls": ["os.chdir", "os.chdir", "os.chdir", "os.chdir", "open", "open", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.meshgrid", "numpy.meshgrid", "conflict.conflict.initialize_U", "conflict.conflict.initialize_C1", "conflict.conflict.initialize_C2", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.choice", "numpy.choice", "time.time", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser"], "store_vars_calls": {"self.out_unit": "open", "self.IDs_unit": "open", "cols": "np.arange", "rows": "np.arange", "self.S": "np.zeros", "self.durs": "np.zeros", "self.IDs": "np.zeros", "self.ran_IDs": "rn.choice", "self.start_time": "time.time"}}, "initialize_U": {"args": ["self"], "min_max_lineno": {"min_lineno": 249, "max_lineno": 272}, "calls": ["conflict.read_geotiff", "numpy.maximum", "numpy.maximum", "numpy.ones", "numpy.ones"], "store_vars_calls": {"self.U": "np.ones"}}, "initialize_C1": {"args": ["self"], "min_max_lineno": {"min_lineno": 275, "max_lineno": 285}, "calls": ["conflict.read_geotiff", "numpy.ones", "numpy.ones"], "store_vars_calls": {"self.C1": "np.ones"}}, "initialize_C2": {"args": ["self"], "min_max_lineno": {"min_lineno": 288, "max_lineno": 298}, "calls": ["conflict.read_geotiff", "numpy.ones", "numpy.ones"], "store_vars_calls": {"self.C2": "np.ones"}}, "update": {"args": ["self"], "min_max_lineno": {"min_lineno": 301, "max_lineno": 312}, "calls": ["conflict.conflict.update_U", "conflict.conflict.update_C1", "conflict.conflict.update_C2", "conflict.conflict.update_p", "conflict.conflict.update_S", "conflict.conflict.update_time"]}, "update_U": {"args": ["self"], "min_max_lineno": {"min_lineno": 315, "max_lineno": 318}}, "update_C1": {"args": ["self"], "min_max_lineno": {"min_lineno": 321, "max_lineno": 324}}, "update_C2": {"args": ["self"], "min_max_lineno": {"min_lineno": 327, "max_lineno": 330}}, "update_p": {"args": ["self"], "min_max_lineno": {"min_lineno": 333, "max_lineno": 342}, "calls": ["conflict.conflict.U.max"]}, "update_S": {"args": ["self"], "min_max_lineno": {"min_lineno": 345, "max_lineno": 435}, "calls": ["numpy.random.binomial", "numpy.random.binomial", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "numpy.random.binomial", "numpy.random.binomial", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "print", "print", "print", "conflict.conflict.spread_conflicts1", "numpy.float32", "numpy.float32", "numpy.float32.tofile", "conflict.conflict.IDs.tofile", "print"], "store_vars_calls": {"B1": "np.random.binomial", "w2": "np.logical_and", "n2": "w2.sum", "B2": "np.random.binomial", "w3": "np.logical_and", "n3": "w3.sum", "S2": "np.float32"}}, "update_S1": {"args": ["self"], "min_max_lineno": {"min_lineno": 438, "max_lineno": 531}, "calls": ["conflict.conflict.S.copy", "numpy.random.binomial", "numpy.random.binomial", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "numpy.random.binomial", "numpy.random.binomial", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "print", "print", "print", "print", "conflict.conflict.spread_conflicts1", "numpy.float32", "numpy.float32", "numpy.float32.tofile", "conflict.conflict.IDs.tofile"], "store_vars_calls": {"S": "self.S.copy", "B1": "np.random.binomial", "w2": "np.logical_and", "n2": "w2.sum", "B2": "np.random.binomial", "w3": "np.logical_and", "n3": "w3.sum", "S2": "np.float32"}}, "update_S2": {"args": ["self"], "min_max_lineno": {"min_lineno": 534, "max_lineno": 642}, "calls": ["numpy.invert", "numpy.invert", "w1.sum", "numpy.invert.sum", "numpy.random.binomial", "numpy.random.binomial", "w2.sum", "numpy.random.binomial", "numpy.random.binomial", "w3.sum", "print", "print", "print", "conflict.conflict.spread_conflicts1", "numpy.float32", "numpy.float32", "numpy.float32.tofile", "conflict.conflict.IDs.tofile"], "store_vars_calls": {"w0": "np.invert", "n1": "w1.sum", "n0": "w0.sum", "B1": "np.random.binomial", "n2": "w2.sum", "B2": "np.random.binomial", "n3": "w3.sum", "S2": "np.float32"}}, "update_S_old": {"args": ["self"], "min_max_lineno": {"min_lineno": 645, "max_lineno": 755}, "calls": ["numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "numpy.random.binomial", "numpy.random.binomial", "dS.astype.astype.astype", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "print", "print", "print", "numpy.random.geometric", "numpy.random.geometric", "conflict.conflict.spread_conflicts1", "numpy.float32", "numpy.float32", "numpy.float32.tofile", "conflict.conflict.IDs.tofile"], "store_vars_calls": {"w2": "np.logical_and", "n2": "w2.sum", "dS": "dS.astype", "w3": "np.logical_and", "n3": "w3.sum", "g": "np.random.geometric", "S2": "np.float32"}}, "update_time": {"args": ["self"], "min_max_lineno": {"min_lineno": 758, "max_lineno": 761}}, "get_neighbor_cols_and_rows": {"args": ["self", "w1", "n1"], "min_max_lineno": {"min_lineno": 764, "max_lineno": 794}, "calls": ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros"], "store_vars_calls": {"cn": "np.zeros", "rn": "np.zeros"}}, "get_neighbor_values": {"args": ["self", "var", "n1"], "returns": [["vals"]], "min_max_lineno": {"min_lineno": 797, "max_lineno": 818}, "calls": ["numpy.zeros", "numpy.zeros"], "store_vars_calls": {"vals": "np.zeros"}}, "spread_conflicts1": {"args": ["self", "USE_LOOP"], "min_max_lineno": {"min_lineno": 821, "max_lineno": 941}, "calls": ["w1.sum", "conflict.conflict.get_neighbor_cols_and_rows", "conflict.conflict.get_neighbor_values", "numpy.amax", "numpy.amax", "numpy.zeros", "numpy.zeros", "print", "numpy.tile", "numpy.tile", "range", "numpy.random.binomial", "numpy.random.binomial", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "print", "print", "numpy.array().transpose", "numpy.array().transpose", "numpy.random.binomial", "numpy.random.binomial", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and.sum", "w_new.sum", "numpy.array", "numpy.array"], "store_vars_calls": {"n1": "w1.sum", "Un": "self.get_neighbor_values", "Un_max": "np.amax", "pn": "np.zeros", "ID_vals": "np.tile", "B": "np.random.binomial", "w2": "np.logical_and", "n2": "w2.sum"}}, "finalize": {"args": ["self"], "min_max_lineno": {"min_lineno": 944, "max_lineno": 977}, "calls": ["conflict.conflict.out_unit.close", "conflict.conflict.IDs_unit.close", "print", "print", "print", "print", "print", "print", "print", "w.sum", "print", "print", "print", "print", "print", "time.time"], "store_vars_calls": {"n_conflict_cells": "w.sum"}}, "run_model": {"args": ["self", "cfg_file"], "min_max_lineno": {"min_lineno": 980, "max_lineno": 986}, "calls": ["conflict.conflict.initialize", "range", "conflict.conflict.finalize", "conflict.conflict.update"]}}}}, "functions": {"test1": {"min_max_lineno": {"min_lineno": 69, "max_lineno": 74}, "calls": ["conflict.conflict", "conflict.run_model"], "store_vars_calls": {"c": "conflict"}}, "test2": {"min_max_lineno": {"min_lineno": 77, "max_lineno": 80}, "calls": ["conflict.read_geotiff"], "store_vars_calls": {"pop_grid": "read_geotiff"}}, "test3": {"args": ["SUBSAMPLE"], "min_max_lineno": {"min_lineno": 83, "max_lineno": 127}, "calls": ["conflict.regrid_geotiff", "print", "print"]}, "get_raster_cellsize": {"args": ["gdal_unit"], "returns": [["xres"]], "min_max_lineno": {"min_lineno": 990, "max_lineno": 1002}, "calls": ["gdal_unit.GetGeoTransform", "abs"], "store_vars_calls": {"geotransform": "gdal_unit.GetGeoTransform"}}, "get_raster_bounds": {"args": ["ds", "VERBOSE"], "returns": [["ulx", "lry", "lrx", "uly"]], "min_max_lineno": {"min_lineno": 1005, "max_lineno": 1046}, "calls": ["ds.GetGeoTransform", "print", "print", "print", "print", "print"]}, "bounds_disjoint": {"args": ["bounds1", "bounds2", "VERBOSE"], "returns": [["disjoint"]], "min_max_lineno": {"min_lineno": 1056, "max_lineno": 1086}}, "read_geotiff": {"args": ["in_file", "REPORT", "MAKE_RTG", "rtg_file"], "returns": [["in_grid"]], "min_max_lineno": {"min_lineno": 1089, "max_lineno": 1181}, "calls": ["print", "gdal.Open", "conflict.get_raster_cellsize", "conflict.get_raster_bounds", "gdal.Open.ReadAsArray", "in_unit.ReadAsArray.min", "in_unit.ReadAsArray.max", "rti_files.make_info", "rti_files.write_info", "rtg_files.rtg_file", "rtg_files.rtg_file.open_new_file", "rtg_files.rtg_file.write_grid", "rtg_files.rtg_file.close_file", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "rti_files.get_rti_byte_order"], "store_vars_calls": {"in_unit": "gdal.Open", "in_bounds": "get_raster_bounds", "in_grid": "in_unit.ReadAsArray", "in_gmin": "in_grid.min", "in_gmax": "in_grid.max", "rti": "rti_files.make_info", "rtg": "rtg_files.rtg_file", "OK": "rtg.open_new_file"}}, "regrid_geotiff": {"args": ["in_file", "out_file", "out_bounds", "out_xres_sec", "out_yres_sec", "RESAMPLE_ALGO", "REPORT"], "min_max_lineno": {"min_lineno": 1184, "max_lineno": 1342}, "calls": ["gdal.Open", "conflict.get_raster_cellsize", "conflict.get_raster_bounds", "gdal.Open.ReadAsArray", "in_unit.ReadAsArray.min", "in_unit.ReadAsArray.max", "gdal.Warp", "conflict.get_raster_bounds", "gdal.Warp.ReadAsArray", "out_unit.ReadAsArray.min", "out_unit.ReadAsArray.max", "conflict.bounds_disjoint", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print"], "store_vars_calls": {"in_unit": "gdal.Open", "in_bounds": "get_raster_bounds", "in_grid": "in_unit.ReadAsArray", "in_gmin": "in_grid.min", "in_gmax": "in_grid.max", "out_unit": "gdal.Warp", "out_bounds": "get_raster_bounds", "out_grid": "out_unit.ReadAsArray", "out_gmin": "out_grid.min", "out_gmax": "out_grid.max", "DISJOINT": "bounds_disjoint"}}, "read_acled_data": {"args": ["excel_file", "data_dir", "bounds", "year_range", "dlat", "dlon", "rts_file", "rtg_file"], "returns": [["death_grid"]], "min_max_lineno": {"min_lineno": 1365, "max_lineno": 1502}, "calls": ["pandas.read_excel", "df[].to_numpy", "df[].to_numpy", "df[].to_numpy", "df[].to_numpy", "numpy.int32", "numpy.int32", "numpy.linspace", "numpy.linspace", "open", "open", "open.close", "print", "print", "numpy.searchsorted", "numpy.searchsorted", "range", "numpy.floor", "numpy.ceil", "numpy.floor", "numpy.ceil", "numpy.ones", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.arange", "print", "numpy.logical_and", "numpy.searchsorted", "numpy.searchsorted", "numpy.zeros", "range", "np.zeros.tofile", "os.path.expanduser", "os.path.expanduser", "df[].to_numpy.min", "df[].to_numpy.max", "df[].to_numpy.min", "df[].to_numpy.max", "np.zeros.tofile", "open.close"], "store_vars_calls": {"df": "pd.read_excel", "lats": "df[].to_numpy", "lons": "df[].to_numpy", "deaths": "df[].to_numpy", "years": "df[].to_numpy", "nlons": "np.int32", "nlats": "np.int32", "cols": "np.linspace", "rows": "np.linspace", "rts_unit": "open", "rtg_unit": "open", "cell_cols": "np.searchsorted", "cell_rows": "np.searchsorted", "minlon": "np.floor", "maxlon": "np.ceil", "minlat": "np.floor", "maxlat": "np.ceil", "IN_BOX": "np.logical_and", "w1": "np.logical_and", "w2": "np.logical_and", "w3": "np.logical_and", "death_grid": "np.zeros"}}}, "is_test": false}