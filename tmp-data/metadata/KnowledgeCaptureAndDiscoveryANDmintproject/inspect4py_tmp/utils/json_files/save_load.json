{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/utils/save_load.py", "fileNameBase": "save_load", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "tf_utils", "import": "TF_Use_CCA", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Set_Test_Info", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Test_Directory", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Test_Site_Prefix", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Test_Case_Prefix", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Build_Date", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Version_Number", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Version", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Print", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_String", "type": "internal"}, {"from_module": "tf_utils", "import": "file_exists", "type": "internal"}, {"from_module": "tf_utils", "import": "Count_Lines", "type": "internal"}, {"from_module": "tf_utils", "import": "Current_Directory", "type": "internal"}, {"from_module": "tf_utils", "import": "Resize", "type": "internal"}, {"from_module": "tf_utils", "import": "Make_Savefile", "type": "internal"}, {"from_module": "tf_utils", "import": "Get_Site_Prefix", "type": "internal"}, {"from_module": "tf_utils", "import": "Get_Case_Prefix", "type": "internal"}, {"from_module": "tf_utils", "import": "Not_Same_Byte_Order", "type": "internal"}, {"from_module": "tf_utils", "import": "Courant_Condition_OK", "type": "internal"}, {"from_module": "tf_utils", "import": "Stable_Timestep", "type": "internal"}, {"from_module": "tf_utils", "import": "TF_Tan", "type": "internal"}, {"from_module": "tf_utils", "import": "Convert_Flow_Grid", "type": "internal"}, {"import": "idl_func", "type": "internal"}, {"import": "sys", "type": "external"}, {"import": "os", "type": "external"}, {"import": "time", "type": "external"}, {"import": "glob", "type": "external"}, {"import": "platform", "type": "external"}], "functions": {"Save_Var": {"args": ["LUN", "name", "var", "_TYPE", "units"], "min_max_lineno": {"min_lineno": 32, "max_lineno": 77}, "calls": ["_TYPE.upper", "numpy.int16", "len", "numpy.maximum", "file_LUN.write", "idl_func.n_elements", "tf_utils.TF_String", "str", "idl_func.n_elements", "numpy.int16", "tf_utils.TF_String", "numpy.repeat", "tf_utils.TF_String", "numpy.np.uint8", "tf_utils.TF_String"], "store_vars_calls": {"I2PY_expr": "_TYPE.upper", "n": "np.int16", "_len": "len", "m": "np.maximum", "str2": "TF_String"}}, "Save_Var2": {"args": ["LUN", "name", "_TYPE", "code", "ptr", "file", "units", "NOT_PTR", "FACTOR"], "min_max_lineno": {"min_lineno": 80, "max_lineno": 181}, "calls": ["logical_not", "array", "numpy.int16", "len", "numpy.maximum", "numpy.int16", "len", "numpy.maximum", "file_LUN.write", "numpy.float64", "str", "numpy.uint8", "_TYPE.upper", "str", "numpy.repeat", "numpy.float64", "tf_utils.TF_String", "numpy.repeat", "numpy.np.uint8", "numpy.int16", "tf_utils.TF_String", "numpy.np.uint8", "tf_utils.TF_String", "tf_utils.TF_String"], "store_vars_calls": {"types": "array", "n": "np.int16", "_len": "len", "m": "np.maximum", "n3": "np.int16", "len3": "len", "m3": "np.maximum", "FACTOR": "np.float64", "I2PY_expr": "_TYPE.upper", "str3": "TF_String"}}, "Save_Var3": {"args": ["LUN", "name", "flag", "file", "units"], "min_max_lineno": {"min_lineno": 184, "max_lineno": 223}, "calls": ["numpy.int16", "len", "numpy.int16", "len", "numpy.maximum", "file_LUN.write", "str", "tf_utils.TF_String", "str", "str", "numpy.repeat", "numpy.int16", "numpy.repeat", "numpy.repeat", "numpy.np.uint8", "numpy.np.uint8", "numpy.np.uint8"], "store_vars_calls": {"n": "np.int16", "_len": "len", "n3": "np.int16", "len3": "len", "m3": "np.maximum"}}, "Read_Vars": {"args": ["file_unit", "var2", "var3", "var4", "data_type", "name"], "min_max_lineno": {"min_lineno": 704, "max_lineno": 799}, "calls": ["idl_func.readf", "idl_func.readf.find", "idl_func.readf.split", "len", "save_load.Read_Vars._ret"], "store_vars_calls": {"line": "idl_func.readf", "p": "line.find", "words": "line.split", "count": "len", "_opt_rv": "list", "value": "eval", "dtype": "data_type.upper", "var1": "line.strip"}, "functions": {"_ret": {"min_max_lineno": {"min_lineno": 720, "max_lineno": 728}, "calls": ["list", "zip", "len", "tuple"], "store_vars_calls": {"_opt_rv": "list"}}}}, "Load_Var": {"args": ["value_str", "var_type", "factor"], "returns": [["var", "filename"]], "min_max_lineno": {"min_lineno": 802, "max_lineno": 817}, "calls": ["numpy.float64", "var_type.upper", "numpy.float64", "numpy.float64"], "store_vars_calls": {"var": "np.float64"}}, "Type_Code": {"args": ["var_type"], "min_max_lineno": {"min_lineno": 820, "max_lineno": 832}, "calls": ["var_type.upper"]}}, "is_test": false}