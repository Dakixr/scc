{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/topoflow36/topoflow/utils/new_slopes.py", "fileNameBase": "new_slopes", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "copy", "type": "external"}, {"import": "rtg_files", "type": "internal"}, {"import": "rti_files", "type": "internal"}, {"from_module": "topoflow.components", "import": "d8_global", "type": "external"}], "functions": {"test1": {"min_max_lineno": {"min_lineno": 31, "max_lineno": 52}, "calls": ["new_slopes.get_d8_slope_grid", "new_slopes.get_new_slope_grid"]}, "test2": {"min_max_lineno": {"min_lineno": 55, "max_lineno": 66}, "calls": ["new_slopes.smooth_dem"]}, "get_d8_object": {"args": ["site_prefix", "case_prefix", "cfg_dir", "SILENT", "REPORT"], "returns": [["d8"]], "min_max_lineno": {"min_lineno": 69, "max_lineno": 112}, "calls": ["topoflow.components.d8_global.d8_component", "d8_global.d8_component.initialize", "d8_global.d8_component.update", "d8_global.d8_component.update_noflow_IDs"], "store_vars_calls": {"d8": "d8_global.d8_component"}}, "get_d8_slope_grid": {"args": ["site_prefix", "case_prefix", "cfg_dir", "slope_file"], "returns": [["slope"]], "min_max_lineno": {"min_lineno": 115, "max_lineno": 168}, "calls": ["new_slopes.get_d8_object", "numpy.zeros", "wg.sum", "numpy.invert", "np.invert.sum", "get_d8_object.ds.copy", "print", "slope[].min", "print", "print", "print", "rti_files.read_info", "rtg_files.write_grid", "print", "print", "print", "str", "str", "str", "np.zeros.min", "np.zeros.max"], "store_vars_calls": {"d8": "get_d8_object", "slope": "np.zeros", "ng": "wg.sum", "wb": "np.invert", "nb": "wb.sum", "L": "d8.ds.copy", "Spmin": "slope[].min", "grid_info": "rti_files.read_info"}}, "get_new_slope_grid": {"args": ["site_prefix", "case_prefix", "cfg_dir", "slope_file"], "min_max_lineno": {"min_lineno": 171, "max_lineno": 284}, "calls": ["new_slopes.get_d8_object", "print", "print", "numpy.float64", "numpy.zeros", "slope[].min", "print", "print", "print", "rti_files.read_info", "rtg_files.write_grid", "print", "print", "print", "slope[].min", "print", "print", "print", "print", "print", "numpy.logical_and", "np.logical_and.sum", "numpy.invert", "np.invert.sum", "divmod", "pID_vals.max", "slope[].min", "print", "print", "print", "print", "str", "str", "str", "str", "str", "str", "str", "np.zeros.min", "np.zeros.max", "numpy.nanmin", "numpy.nanmax", "str", "str", "str", "np.zeros.min", "np.zeros.max"], "store_vars_calls": {"d8": "get_d8_object", "distance": "np.float64", "slope": "np.zeros", "Sp_min": "slope[].min", "grid_info": "rti_files.read_info", "Spmin": "slope[].min", "wg": "np.logical_and", "ng": "wg.sum", "wb": "np.invert", "nb": "wb.sum", "pIDs": "divmod", "pv_max": "pID_vals.max"}}, "smooth_dem": {"args": ["site_prefix", "case_prefix", "cfg_dir", "dem_file", "nsteps", "ncells"], "min_max_lineno": {"min_lineno": 470, "max_lineno": 584}, "calls": ["new_slopes.get_d8_object", "get_d8_object.DEM.copy", "divmod", "range", "rti_files.read_info", "rtg_files.write_grid", "print", "print", "print", "z[].min", "print", "print", "print", "print", "print", "print", "numpy.where", "numpy.logical_or", "str", "str", "str", "str", "str", "numpy.nanmin", "numpy.nanmax"], "store_vars_calls": {"d8": "get_d8_object", "z": "d8.DEM.copy", "gpIDs": "divmod", "grid_info": "rti_files.read_info", "zpmin": "z[].min", "w": "np.where"}}, "remove_bad_slopes": {"args": ["slope", "FLOAT"], "returns": [["slope"]], "min_max_lineno": {"min_lineno": 587, "max_lineno": 654}, "calls": ["numpy.where", "numpy.size", "print", "print", "numpy.where", "numpy.size", "print", "print", "print", "print", "slope[].min", "slope[].max", "print", "print", "print", "print", "numpy.logical_or", "numpy.invert", "numpy.float32", "numpy.float64", "numpy.logical_not", "str", "str", "numpy.logical_or", "str", "str", "numpy.isfinite", "numpy.size", "numpy.logical_not", "numpy.isfinite"], "store_vars_calls": {"wb": "np.where", "nbad": "np.size", "wg": "np.where", "ngood": "np.size", "S_min": "slope[].min", "S_max": "slope[].max", "slope": "np.float64"}}}, "is_test": false}