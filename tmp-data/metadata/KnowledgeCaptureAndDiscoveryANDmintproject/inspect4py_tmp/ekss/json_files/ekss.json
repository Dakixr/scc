{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/spider/spider/cluster/ekss/ekss.py", "fileNameBase": "ekss", "extension": "py"}, "dependencies": [{"from_module": "__future__", "import": "print_function", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "scipy.linalg", "import": "orth", "type": "external"}, {"from_module": "sklearn.cluster", "import": "SpectralClustering", "type": "external"}, {"import": "stopit", "type": "external"}, {"from_module": "spider.clustering", "import": "ClusteringPrimitiveBase", "type": "external"}, {"from_module": "spider.clustering", "import": "TimeoutError", "type": "external"}, {"from_module": "kss", "import": "KSS", "type": "external"}], "classes": {"EKSS": {"doc": {"short_description": "Ensemble K-Subspaces algorithm for subspace clustering", "full": "Ensemble K-Subspaces algorithm for subspace clustering\n\n    "}, "min_max_lineno": {"min_lineno": 17, "max_lineno": 118}, "methods": {"__init__": {"args": ["self", "n_clusters", "dim_subspaces", "n_base", "thresh"], "min_max_lineno": {"min_lineno": 22, "max_lineno": 48}}, "produce": {"doc": {"short_description": "Apply Ensemble K-Subspaces algorithm on D", "args": {"inputs": {"description": "array-like matrix, shape (n_samples, n_features) where\nn_samples is number of data points and\nn_features is ambient dimension"}, "timeout": {"description": "This parameter serves as a way for caller to guide the length of the process"}, "iterations": {"description": "This parameter serves as a way for caller to guide the length of the process"}}, "returns": {"description": "array of estimated labels, shape (n_samples)", "type_name": "estimated_labels", "is_generator": false}, "raises": {"0": {"description": "If time taken for fitting the EKSS model exceeds the timeout variable", "type_name": "TimeoutError"}}}, "args": ["self", "inputs", "timeout", "iterations"], "returns": [["estimated_labels"]], "min_max_lineno": {"min_lineno": 49, "max_lineno": 118}, "calls": ["isinstance", "isinstance", "isinstance", "numpy.zeros", "stopit.ThreadingTimeout", "range", "sklearn.cluster.SpectralClustering", "sklearn.cluster.SpectralClustering.fit_predict", "numpy.zeros", "spider.clustering.TimeoutError", "kss.KSS.KSS", "kss.KSS.KSS.produce", "range", "numpy.copy", "numpy.copy", "range", "range", "numpy.argsort", "range", "numpy.argsort", "range"], "store_vars_calls": {"self.affinity_matrix": "np.zeros", "sc": "SpectralClustering", "estimated_labels": "sc.fit_predict", "kss": "KSS", "est_labels": "kss.produce", "A_row": "np.copy", "A_col": "np.copy"}}}}}, "body": {"calls": ["NamedTuple"], "store_vars_calls": {"Params": "NamedTuple"}}, "is_test": false}