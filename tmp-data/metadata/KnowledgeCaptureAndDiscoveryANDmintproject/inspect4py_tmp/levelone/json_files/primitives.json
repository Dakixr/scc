{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/dsbox-ta2/python/dsbox/planner/levelone/primitives.py", "fileNameBase": "primitives", "extension": "py", "doc": {"short_description": "Module for defining primitives and primitve categories", "full": "Module for defining primitives and primitve categories"}}, "dependencies": [{"from_module": "collections", "import": "defaultdict", "type": "external"}, {"from_module": "enum", "import": "Enum", "type": "external"}, {"import": "json", "type": "external"}, {"import": "pprint", "type": "external"}, {"import": "pkgutil", "type": "external"}], "classes": {"Primitive": {"doc": {"short_description": "A primitive", "full": "A primitive"}, "extend": ["object"], "min_max_lineno": {"min_lineno": 10, "max_lineno": 40}, "methods": {"__init__": {"args": ["self"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 19}}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 20, "max_lineno": 22}}, "__repr__": {"args": ["self"], "min_max_lineno": {"min_lineno": 22, "max_lineno": 24}}, "__eq__": {"doc": {"short_description": "Define equals based on name"}, "args": ["self", "other"], "returns": [["NotImplemented"]], "min_max_lineno": {"min_lineno": 25, "max_lineno": 30}, "calls": ["isinstance"]}, "__ne__": {"doc": {"short_description": "Overide non-equality test"}, "args": ["self", "other"], "returns": [["NotImplemented"]], "min_max_lineno": {"min_lineno": 31, "max_lineno": 36}, "calls": ["isinstance", "primitives.Primitive.__eq__"]}, "__hash__": {"doc": {"short_description": "Overide hash by using name attribute"}, "args": ["self"], "min_max_lineno": {"min_lineno": 37, "max_lineno": 40}, "calls": ["hash"]}}}, "DSBoxPrimitive": {"doc": {"short_description": "A primitive", "full": "A primitive"}, "extend": ["Primitive"], "min_max_lineno": {"min_lineno": 41, "max_lineno": 55}, "methods": {"__init__": {"args": ["self", "definition"], "min_max_lineno": {"min_lineno": 43, "max_lineno": 51}, "calls": ["primitives.Primitive.__init__"]}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 51, "max_lineno": 53}}, "__repr__": {"args": ["self"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 55}}}}, "D3mPrimitive": {"doc": {"short_description": "Primitive defined using D3M metadata", "full": "Primitive defined using D3M metadata"}, "extend": ["Primitive"], "min_max_lineno": {"min_lineno": 56, "max_lineno": 106}, "methods": {"__init__": {"args": ["self", "definition"], "min_max_lineno": {"min_lineno": 58, "max_lineno": 101}, "calls": ["primitives.Primitive.__init__", "definition[].split", "len", "len"]}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 102, "max_lineno": 104}}, "__repr__": {"args": ["self"], "min_max_lineno": {"min_lineno": 104, "max_lineno": 106}}}}, "HierarchyNode": {"doc": {"short_description": "Node in the Hierarchy", "full": "Node in the Hierarchy"}, "extend": ["object"], "min_max_lineno": {"min_lineno": 107, "max_lineno": 149}, "methods": {"__init__": {"args": ["self", "hierarchy", "name", "parent", "content"], "min_max_lineno": {"min_lineno": 109, "max_lineno": 115}}, "get_content": {"args": ["self"], "min_max_lineno": {"min_lineno": 115, "max_lineno": 117}}, "add_child": {"doc": {"short_description": "Add a child to the hierarchy"}, "args": ["self", "name", "content"], "returns": [["child"]], "min_max_lineno": {"min_lineno": 117, "max_lineno": 122}, "calls": ["primitives.HierarchyNode", "primitives.HierarchyNode.children.append"], "store_vars_calls": {"child": "HierarchyNode"}}, "has_child": {"doc": {"short_description": "Return true if node has child with given name"}, "args": ["self", "name"], "min_max_lineno": {"min_lineno": 122, "max_lineno": 128}}, "get_child": {"doc": {"short_description": "Return child by name"}, "args": ["self", "name"], "returns": [["node"]], "min_max_lineno": {"min_lineno": 128, "max_lineno": 134}, "calls": ["Exception"]}, "get_siblings": {"args": ["self"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 134, "max_lineno": 140}}, "add_primitive": {"args": ["self", "primitive"], "min_max_lineno": {"min_lineno": 140, "max_lineno": 142}, "calls": ["primitives.HierarchyNode.hierarchy.add_primitive"]}, "_add_primitive": {"args": ["self", "primitive"], "min_max_lineno": {"min_lineno": 142, "max_lineno": 147}, "calls": ["primitives.HierarchyNode._content.append"]}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 147, "max_lineno": 149}, "calls": ["len"]}}}, "Hierarchy": {"doc": {"short_description": "Generic tree of nodes", "full": "Generic tree of nodes"}, "extend": ["object"], "min_max_lineno": {"min_lineno": 150, "max_lineno": 267}, "methods": {"__init__": {"args": ["self", "name"], "min_max_lineno": {"min_lineno": 152, "max_lineno": 159}, "calls": ["primitives.HierarchyNode", "dict"], "store_vars_calls": {"self.root": "HierarchyNode", "self.node_by_primitive": "dict"}}, "add_child": {"doc": {"short_description": "Create and add child node"}, "args": ["self", "node", "name", "content"], "min_max_lineno": {"min_lineno": 160, "max_lineno": 168}, "calls": ["node.add_child"]}, "add_path": {"doc": {"short_description": "Create and add all nodes in path"}, "args": ["self", "names"], "returns": [["curr_node"]], "min_max_lineno": {"min_lineno": 169, "max_lineno": 179}, "calls": ["curr_node.add_child.add_child.has_child", "curr_node.add_child.add_child.get_child", "curr_node.add_child.add_child.add_child"], "store_vars_calls": {"curr_node": "curr_node.add_child"}}, "add_primitive": {"args": ["self", "node", "primitive"], "min_max_lineno": {"min_lineno": 180, "max_lineno": 183}, "calls": ["node._add_primitive"]}, "get_level_counts": {"doc": {"short_description": "Computes the number of nodes at each level"}, "args": ["self"], "min_max_lineno": {"min_lineno": 184, "max_lineno": 191}, "calls": ["primitives.Hierarchy._compute_level_counts", "list"], "store_vars_calls": {"self._level_count": "self._compute_level_counts"}}, "_compute_level_counts": {"doc": {"short_description": "Computes the number of nodes at each level"}, "args": ["self", "node", "level", "counts"], "returns": [["counts"]], "min_max_lineno": {"min_lineno": 192, "max_lineno": 200}, "calls": ["len", "primitives.Hierarchy._compute_level_counts"], "store_vars_calls": {"counts": "self._compute_level_counts"}}, "get_primitive_count": {"doc": {"short_description": "Returns the number of primitives"}, "args": ["self"], "min_max_lineno": {"min_lineno": 201, "max_lineno": 204}, "calls": ["primitives.Hierarchy._get_primitive_count"]}, "_get_primitive_count": {"doc": {"short_description": "Returns the number of primitives"}, "args": ["self", "curr_node"], "returns": [["count"]], "min_max_lineno": {"min_lineno": 205, "max_lineno": 213}, "calls": ["len", "primitives.Hierarchy._get_primitive_count"]}, "get_primitives": {"args": ["self", "curr_node"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 214, "max_lineno": 223}, "calls": ["result.append", "primitives.Hierarchy.get_primitives"]}, "get_primitives_as_list": {"args": ["self", "curr_node"], "min_max_lineno": {"min_lineno": 224, "max_lineno": 226}, "calls": ["primitives.Hierarchy.get_primitives"]}, "get_nodes_by_level": {"doc": {"short_description": "Returns node at a specified level of the tree"}, "args": ["self", "level"], "min_max_lineno": {"min_lineno": 227, "max_lineno": 230}, "calls": ["primitives.Hierarchy._get_nodes_by_level"]}, "_get_nodes_by_level": {"doc": {"short_description": "Returns node at a specified level of the tree"}, "args": ["self", "curr_node", "curr_level", "target_level"], "returns": [["curr_node"], ["result"]], "min_max_lineno": {"min_lineno": 231, "max_lineno": 245}, "calls": ["primitives.Hierarchy._get_nodes_by_level"]}, "get_node_by_primitive": {"args": ["self", "primitive"], "min_max_lineno": {"min_lineno": 246, "max_lineno": 248}}, "pprint": {"doc": {"short_description": "Print hierarchy"}, "args": ["self"], "min_max_lineno": {"min_lineno": 249, "max_lineno": 253}, "calls": ["print", "primitives.Hierarchy._print", "primitives.Hierarchy.get_level_counts"]}, "_print": {"args": ["self", "curr_node", "path", "max_depth"], "min_max_lineno": {"min_lineno": 254, "max_lineno": 263}, "calls": ["len", "print", "pprint.pformat().splitlines", "print", "primitives.Hierarchy._print", "pprint.pformat"]}, "__str__": {"args": ["self"], "min_max_lineno": {"min_lineno": 264, "max_lineno": 267}, "calls": ["primitives.Hierarchy.get_primitive_count", "primitives.Hierarchy.get_level_counts"]}}}, "Category": {"extend": ["Enum"], "min_max_lineno": {"min_lineno": 268, "max_lineno": 278}}, "Primitives": {"doc": {"short_description": "Base Primitives class", "full": "Base Primitives class"}, "extend": ["object"], "min_max_lineno": {"min_lineno": 279, "max_lineno": 434}, "methods": {"__init__": {"args": ["self"], "min_max_lineno": {"min_lineno": 281, "max_lineno": 292}, "calls": ["dict", "dict", "primitives.Hierarchy"], "store_vars_calls": {"self._index": "dict", "self.hierarchies": "dict"}}, "filter_equality": {"doc": {"short_description": "Find primitive by aspect and name value"}, "args": ["self", "aspect", "name"], "returns": [["result"]], "min_max_lineno": {"min_lineno": 293, "max_lineno": 297}, "calls": ["getattr"]}, "filter_by_task": {"doc": {"short_description": "Find primitive by task aspect and name value"}, "args": ["self", "name"], "min_max_lineno": {"min_lineno": 298, "max_lineno": 301}, "calls": ["primitives.Primitives.filter_equality"]}, "filter_by_learning_type": {"doc": {"short_description": "Find primitive by learning-type aspect and name value"}, "args": ["self", "name"], "min_max_lineno": {"min_lineno": 302, "max_lineno": 305}, "calls": ["primitives.Primitives.filter_equality"]}, "filter_by_algo": {"doc": {"short_description": "Find primitive by algorithm aspect and name value"}, "args": ["self", "name"], "min_max_lineno": {"min_lineno": 306, "max_lineno": 309}, "calls": ["primitives.Primitives.filter_equality"]}, "get_by_name": {"doc": {"short_description": "Get primitve by unique name"}, "args": ["self", "name"], "returns": [["primitive"]], "min_max_lineno": {"min_lineno": 310, "max_lineno": 316}}, "get_index": {"doc": {"short_description": "Returns the index of the primitive given its name"}, "args": ["self", "name"], "min_max_lineno": {"min_lineno": 317, "max_lineno": 320}}, "get_hierarchies": {"doc": {"short_description": "Returns all primitive hierarchies as dict"}, "args": ["self"], "min_max_lineno": {"min_lineno": 321, "max_lineno": 324}}, "print_statistics_old": {"doc": {"short_description": "Print statistics of the primitives"}, "args": ["self"], "min_max_lineno": {"min_lineno": 325, "max_lineno": 353}, "calls": ["collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "print", "pprint.pprint", "print", "print", "pprint.pprint", "print", "pprint.pprint", "len", "tag_primitive[].append", "tag_primitive[].append", "tag_primitive[].append"], "store_vars_calls": {"classification_algo": "defaultdict", "regression_algo": "defaultdict", "tag_primitive": "defaultdict"}}, "print_statistics": {"doc": {"short_description": "Print statistics of the primitives"}, "args": ["self"], "min_max_lineno": {"min_lineno": 354, "max_lineno": 361}, "calls": ["print", "print", "primitives.Primitives.get_hierarchies", "print", "str"], "store_vars_calls": {"hierarchies": "self.get_hierarchies"}}, "_compute_tag_hierarchy": {"doc": {"short_description": "Compute hierarchy based on sklearn tags"}, "args": ["self"], "min_max_lineno": {"min_lineno": 362, "max_lineno": 434}, "calls": ["primitives.Primitives.add_primitive", "primitives.Primitives.hierarchies[].add_path", "primitive.name[].islower", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path", "primitives.Primitives.hierarchies[].add_path"], "store_vars_calls": {"node": "self.hierarchies[].add_path"}}}}, "DSBoxPrimitives": {"doc": {"short_description": "Maintain available primitives", "full": "Maintain available primitives"}, "extend": ["Primitives"], "min_max_lineno": {"min_lineno": 435, "max_lineno": 491}, "methods": {"__init__": {"args": ["self"], "min_max_lineno": {"min_lineno": 439, "max_lineno": 446}, "calls": ["primitives.Primitives.__init__", "primitives.DSBoxPrimitives._load", "enumerate", "len", "primitives.DSBoxPrimitives._compute_tag_hierarchy"], "store_vars_calls": {"self.size": "len"}}, "_load": {"doc": {"short_description": "Load primitive definition from JSON file"}, "args": ["self"], "min_max_lineno": {"min_lineno": 447, "max_lineno": 453}, "calls": ["pkgutil.get_data", "json.loads", "pkgutil.get_data.decode", "primitives.DSBoxPrimitive"], "store_vars_calls": {"text": "pkgutil.get_data", "content": "json.loads"}}, "_compute_tag_hierarchy": {"doc": {"short_description": "Compute hierarchy based on sklearn tags"}, "args": ["self"], "min_max_lineno": {"min_lineno": 454, "max_lineno": 491}, "calls": ["primitives.DSBoxPrimitives.add_primitive", "primitives.DSBoxPrimitives.hierarchies[].add_path", "primitives.DSBoxPrimitives.hierarchies[].add_path", "primitives.DSBoxPrimitives.hierarchies[].add_path", "primitives.DSBoxPrimitives.hierarchies[].add_path", "primitives.DSBoxPrimitives.hierarchies[].add_path", "primitives.DSBoxPrimitives.hierarchies[].add_path", "primitives.DSBoxPrimitives.hierarchies[].add_path"], "store_vars_calls": {"node": "self.hierarchies[].add_path"}}}}, "D3mPrimitives": {"doc": {"short_description": "Primitives from D3M metadata", "full": "Primitives from D3M metadata"}, "extend": ["Primitives"], "min_max_lineno": {"min_lineno": 493, "max_lineno": 514}, "methods": {"__init__": {"args": ["self", "additional_primitives"], "min_max_lineno": {"min_lineno": 497, "max_lineno": 507}, "calls": ["primitives.Primitives.__init__", "primitives.D3mPrimitives._load", "enumerate", "len", "primitives.D3mPrimitives._compute_tag_hierarchy"], "store_vars_calls": {"self.size": "len"}}, "_load": {"doc": {"short_description": "Load primitve from json"}, "args": ["self"], "min_max_lineno": {"min_lineno": 508, "max_lineno": 514}, "calls": ["pkgutil.get_data", "json.loads", "pkgutil.get_data.decode", "primitives.D3mPrimitive"], "store_vars_calls": {"text": "pkgutil.get_data", "content": "json.loads"}}}}}, "is_test": false}