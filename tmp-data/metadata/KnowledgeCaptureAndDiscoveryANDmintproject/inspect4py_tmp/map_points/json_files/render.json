{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/Dash/viz/models/map_points/render.py", "fileNameBase": "render", "extension": "py"}, "functions": {"generate_layout": {"args": ["thread_id"], "returns": [["dlayout"]], "min_max_lineno": {"min_lineno": 9, "max_lineno": 191}, "calls": ["html.Div", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "dcc.Store", "html.Div", "html.Div", "html.H3", "html.Div", "html.Div", "html.Div", "html.Img", "html.A", "html.Button", "html.Button", "html.Div", "html.Div", "app.get_asset_url", "html.P", "html.P", "html.Div", "dcc.Tabs", "dcc.Graph", "dcc.Tab", "dcc.Tab", "dcc.Tab", "dcc.Tab", "dcc.Tab", "html.Div", "html.P", "html.Div", "html.Div", "html.P", "html.Div", "html.Div", "html.P", "html.Div", "html.Div", "html.Div", "html.Div", "html.H5", "html.Div", "html.H5", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.H6", "html.P", "dcc.Dropdown", "html.Button", "html.P", "dcc.Checklist", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.Button", "html.H6", "html.P", "html.P", "html.Div", "html.Div", "dcc.Upload", "html.Div", "html.Div", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "html.P", "html.P", "html.P", "dcc.RadioItems", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "html.P", "html.Div", "dcc.Dropdown", "dcc.Dropdown", "html.P", "html.A", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown", "dcc.Dropdown"], "store_vars_calls": {"dlayout": "html.Div"}}, "parse_contents": {"args": ["contents", "filename"], "returns": [["df"]], "min_max_lineno": {"min_lineno": 193, "max_lineno": 211}, "calls": ["contents.split", "base64.b64decode", "pd.read_csv", "print", "html.Div", "io.StringIO", "pd.read_excel", "base64.b64decode.decode", "io.BytesIO"], "store_vars_calls": {"decoded": "base64.b64decode", "df": "pd.read_excel"}}, "show_hide_map": {"args": ["showclicks", "hideclicks"], "returns": [["hidestyle", "showstyle", "showstyle"], ["showstyle", "hidestyle", "hidestyle"]], "min_max_lineno": {"min_lineno": 214, "max_lineno": 228}, "calls": ["app.callback", "int", "int", "int", "int", "Output", "Output", "Output", "Output", "Output", "Input", "Input"]}, "update_output": {"args": ["contents", "names", "filetype"], "returns": [["names", "names", "cols", "storedata"]], "min_max_lineno": {"min_lineno": 250, "max_lineno": 265}, "calls": ["app.callback", "render.parse_contents", "parse_contents.columns.values.tolist", "parse_contents.to_json", "Output", "Output", "Output", "Output", "Input", "State", "State"], "store_vars_calls": {"df": "parse_contents", "cols": "df.columns.values.tolist", "storedata": "df.to_json"}}, "build_spatial_datatable": {"args": ["spatialdata"], "returns": [["dtable"]], "min_max_lineno": {"min_lineno": 267, "max_lineno": 294}, "calls": ["app.callback", "pd.read_json", "dt.DataTable", "Output", "Input", "pd.read_json.to_dict"], "store_vars_calls": {"df": "pd.read_json", "dtable": "dt.DataTable"}}, "build_graphing_datatable": {"args": ["graphingdata"], "returns": [["dtable"]], "min_max_lineno": {"min_lineno": 295, "max_lineno": 323}, "calls": ["app.callback", "pd.read_json", "dt.DataTable", "Output", "Input", "pd.read_json.to_dict"], "store_vars_calls": {"df": "pd.read_json", "dtable": "dt.DataTable"}}, "update_latloncols": {"args": ["graphcols", "spatialcols"], "returns": [["latlons", "latlons", "latlonfile", "latlons", "latlons", "latlons"]], "min_max_lineno": {"min_lineno": 325, "max_lineno": 340}, "calls": ["app.callback", "Output", "Output", "Output", "Output", "Output", "Output", "Input", "Input", "dict", "dict"]}, "update_mergecols": {"args": ["graphcols", "spatialcols"], "returns": [["graph_options", "spatial_options"]], "min_max_lineno": {"min_lineno": 343, "max_lineno": 355}, "calls": ["app.callback", "Output", "Output", "Input", "Input", "dict", "dict"]}, "show_map": {"args": ["lat", "lon", "color", "size", "latlontype", "spatialdata", "graphdata"], "returns": [["headerdisplay", "mapdisplay", "mapfig"]], "min_max_lineno": {"min_lineno": 357, "max_lineno": 374}, "calls": ["app.callback", "render.generate_map", "pd.read_json", "Output", "Output", "Output", "Input", "Input", "Input", "Input", "State", "State", "State", "pd.read_json"], "store_vars_calls": {"mapfig": "generate_map", "spatialdf": "pd.read_json"}}, "generate_map": {"args": ["spatial_data", "lat", "lon", "color", "size", "hover"], "returns": [["fig"]], "min_max_lineno": {"min_lineno": 376, "max_lineno": 381}, "calls": ["px.scatter_mapbox", "px.scatter_mapbox.update_layout", "px.scatter_mapbox.update_layout"], "store_vars_calls": {"fig": "px.scatter_mapbox"}}, "merge_data": {"args": ["selectedpoints", "graphdata", "spatialdata", "latlontype", "latcol", "loncol", "graphmerge", "spatialmerge"], "min_max_lineno": {"min_lineno": 383, "max_lineno": 406}, "calls": ["app.callback", "pd.merge.to_json", "Output", "pd.read_json", "pd.DataFrame", "Input", "State", "State", "State", "State", "State", "State", "State", "pd.read_json", "pd.merge", "pd.merge", "pd.read_json", "pd.merge"], "store_vars_calls": {"data_graph": "pd.merge", "dfPoints": "pd.DataFrame", "spatialdf": "pd.read_json", "selecteddf": "pd.merge", "graphdf": "pd.read_json"}}, "make_scatter": {"args": ["n_clicks", "x", "y", "color", "colorcat", "facet_col", "facet_row", "hover_info", "selectedpoints", "graphdata", "selecteddata"], "returns": [["graphs"]], "min_max_lineno": {"min_lineno": 420, "max_lineno": 450}, "calls": ["app.callback", "px.scatter", "px.scatter.update_traces", "dcc.Graph", "Output", "pd.read_json", "pd.read_json", "data_graph[].astype", "Input", "Input", "Input", "Input", "Input", "Input", "Input", "Input", "Input", "State", "State", "dict"], "store_vars_calls": {"fig": "px.scatter", "graphs": "dcc.Graph", "data_graph": "pd.read_json"}}, "parallel_coordinates_options": {"args": ["cols", "ncols"], "returns": [["col_options", "col_options"]], "min_max_lineno": {"min_lineno": 453, "max_lineno": 462}, "calls": ["app.callback", "dict", "Output", "Output", "Input", "Input", "sorted"]}, "make_parallel": {"args": ["n_clicks", "scale", "cols", "graphdata", "selecteddata"], "returns": [["children", "msg"], ["children", "msg"]], "min_max_lineno": {"min_lineno": 465, "max_lineno": 492}, "calls": ["app.callback", "cols.append", "set", "list", "px.parallel_coordinates", "pd.read_json", "pd.read_json", "dcc.Graph", "Output", "Output", "Input", "State", "State", "State", "State", "figdata.loc[].median"], "store_vars_calls": {"colset": "set", "collist": "list", "fig": "px.parallel_coordinates", "data_graph": "pd.read_json"}}}, "is_test": false}