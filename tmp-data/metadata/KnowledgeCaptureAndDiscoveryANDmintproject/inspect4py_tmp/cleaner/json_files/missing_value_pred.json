{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/dsbox-cleaning/dsbox/datapreprocessing/cleaner/missing_value_pred.py", "fileNameBase": "missing_value_pred", "extension": "py"}, "dependencies": [{"import": "pandas", "alias": "pd", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}], "functions": {"popular_value": {"doc": {"short_description": "array: 1D array"}, "args": ["array"], "returns": [["popular"]], "min_max_lineno": {"min_lineno": 4, "max_lineno": 22}, "calls": ["dict", "dict.keys"], "store_vars_calls": {"cate": "dict"}}, "myImputer": {"doc": {"long_description": "data: numpy array, matrix\nvalue:    string: \"mean\", \"min\", \"max\", \"zero\", \"gaussian\"", "short_description": "INPUT:"}, "args": ["data", "value", "verbose"], "returns": [["data_imputed"], ["data_clean"]], "min_max_lineno": {"min_lineno": 23, "max_lineno": 58}, "calls": ["pandas.isnull", "numpy.copy", "numpy.logical_not", "print", "numpy.mean", "numpy.max", "numpy.min", "missing_value_pred.popular_value", "KNN().complete", "ValueError", "KNN"], "store_vars_calls": {"index": "pd.isnull", "data_imputed": "np.copy", "inputed_value": "popular_value", "data_clean": "KNN().complete"}}, "imputeData": {"doc": {"long_description": "INPUT:\ndata: numpy array, matrix\nvalue:    string: \"mean\", \"min\", \"max\", \"zero\", \"gaussian\"", "short_description": "impute the data using permutations array."}, "args": ["data", "missing_col_id", "imputation_strategies", "verbose"], "returns": [["data_clean"]], "min_max_lineno": {"min_lineno": 60, "max_lineno": 77}, "calls": ["numpy.copy", "range", "len", "missing_value_pred.myImputer"], "store_vars_calls": {"data_clean": "np.copy"}}, "bayeImpute": {"doc": {"long_description": "return the imputated data, and model coefficient", "short_description": "currently, BayesianRidge."}, "args": ["data", "target_col", "verbose"], "returns": [["original_data", "model"], ["original_data", "model"]], "min_max_lineno": {"min_lineno": 78, "max_lineno": 114}, "calls": ["BayesianRidge", "numpy.copy", "numpy.delete", "pandas.isnull", "BayesianRidge.fit", "BayesianRidge.predict", "print", "len", "sum", "pandas.isnull"], "store_vars_calls": {"model": "BayesianRidge", "original_data": "np.copy", "data": "np.delete", "mv_mask": "pd.isnull", "result": "model.predict"}}, "transform": {"doc": {"long_description": "return the imputated data, and model coefficient", "short_description": "currently, BayesianRidge."}, "args": ["data", "target_col", "model", "verbose"], "returns": [["original_data"]], "min_max_lineno": {"min_lineno": 117, "max_lineno": 139}, "calls": ["numpy.copy", "numpy.delete", "pandas.isnull", "model.predict", "print", "sum", "pandas.isnull"], "store_vars_calls": {"original_data": "np.copy", "data": "np.delete", "mv_mask": "pd.isnull", "result": "model.predict"}}, "df2np": {"doc": {"long_description": "in the meanwhile, provide the id for missing column", "short_description": "helper function: convert dataframe to np array;"}, "args": ["data", "missing_col_id", "verbose"], "returns": [["data"]], "min_max_lineno": {"min_lineno": 140, "max_lineno": 161}, "calls": ["sum", "print", "pandas.isnull", "missing_col_id.append", "missing_col_name.append"], "store_vars_calls": {"num": "sum"}}}, "is_test": false}