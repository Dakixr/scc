{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/MINT-WorkflowDomain/WINGSWorkflowComponents/weather_generator/WGEN_to_FLDAS.py", "fileNameBase": "WGEN_to_FLDAS", "extension": "py", "doc": {"long_description": "@author: deborahkhider\n\nThis routine takes the output of the weather\ngenerator and put it back into FLDAS-like data.", "short_description": "Created on Fri Dec 21 14:16:53 2018", "full": "Created on Fri Dec 21 14:16:53 2018\n\n@author: deborahkhider\n\nThis routine takes the output of the weather\ngenerator and put it back into FLDAS-like data."}}, "dependencies": [{"import": "xarray", "alias": "xr", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "os", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "sys", "type": "external"}], "functions": {"csv_to_FLDAS": {"doc": {"long_description": "This method transforms the output csv file from the weather generator\nWGEN into a netCDF file following FLDAS format. The netCDF files are\noutput to path_out following the same file structure. All subfolders\nare created automatically.", "short_description": "Transform the output WGEN csv file into NetCDF files", "args": {"wgen_out": {"description": "The csv file output from the weather generator"}, "wgen_in": {"description": "The csv file input to the weather generator"}, "path_out": {"description": "an existing directory in which to write out the netCDF files"}, "file_prefix": {"description": "A prefix for the netcdf files"}}}, "args": ["wgen_out", "wgen_in", "path_out", "file_prefix"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 144}, "calls": ["pandas.read_table", "pandas.read_table", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.arange", "numpy.arange", "pd.read_table.iterrows", "pandas.to_datetime", "pd.read_table.iterrows", "pd.to_datetime.unique", "abs", "numpy.append", "abs", "numpy.append", "numpy.mean", "pandas.to_datetime", "numpy.array().reshape", "xarray.DataArray", "xarray.DataArray", "xarray.DataArray", "xarray.Dataset", "xr.Dataset.to_netcdf", "numpy.array().reshape", "str", "os.stat", "len", "str", "os.stat", "len", "str", "numpy.array", "numpy.array().reshape", "os.mkdir", "str", "str", "os.mkdir", "str", "str", "numpy.array", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.array", "str"], "store_vars_calls": {"data_out": "pd.read_table", "data_in": "pd.read_table", "min_lat": "np.min", "max_lat": "np.max", "min_lon": "np.min", "max_lon": "np.max", "lats": "np.append", "lons": "np.append", "timestamp": "pd.to_datetime", "timestamp_unique": "timestamp.unique", "ts": "pd.to_datetime", "W": "np.array().reshape", "temp": "xr.DataArray", "precip": "xr.DataArray", "wind": "xr.DataArray", "nc_fid": "xr.Dataset", "str_month": "str", "str_day": "str"}}}, "body": {"calls": ["WGEN_to_FLDAS.csv_to_FLDAS"]}, "is_test": false}