{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/data-catalog/api/dcat_service/controllers/query_controllers.py", "fileNameBase": "query_controllers", "extension": "py"}, "dependencies": [{"import": "sys", "type": "external"}, {"import": "traceback", "type": "external"}, {"from_module": "datetime", "import": "datetime", "type": "external"}, {"import": "uuid", "type": "external"}, {"import": "ujson", "type": "external"}, {"from_module": "sqlalchemy", "import": "func", "type": "external"}, {"from_module": "sqlalchemy", "import": "and_", "type": "external"}, {"from_module": "sqlalchemy.sql.expression", "import": "case", "type": "external"}, {"from_module": "sqlalchemy.sql.expression", "import": "literal", "type": "external"}, {"from_module": "sqlalchemy", "import": "desc", "type": "external"}, {"from_module": "sqlalchemy", "import": "JSON", "type": "external"}, {"from_module": "sqlalchemy", "import": "TIMESTAMP", "type": "external"}, {"from_module": "sqlalchemy", "import": "DateTime", "type": "external"}, {"from_module": "dcat_service.misc.exception", "import": "BadRequestException", "type": "external"}, {"from_module": "dcat_service.misc.exception", "import": "InternalServerException", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "DatasetDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "StandardVariableDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "TemporalCoverageIndexDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "SpatialCoverageIndexDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "VariableDB", "type": "external"}, {"from_module": "dcat_service.db_models", "import": "ResourceDB", "type": "external"}, {"from_module": "dcat_service.models.dataset", "import": "Dataset", "type": "external"}, {"from_module": "dcat_service.models.resource", "import": "Resource", "type": "external"}, {"from_module": "dcat_service.models.variable", "import": "Variable", "type": "external"}, {"from_module": "dcat_service.models.standard_variable", "import": "StandardVariable", "type": "external"}, {"from_module": "dcat_service", "import": "session_scope", "type": "external"}, {"import": "re", "type": "external"}], "functions": {"_validate_uuid": {"args": ["input_string"], "min_max_lineno": {"min_lineno": 26, "max_lineno": 32}, "calls": ["uuid.UUID", "str"]}, "find_datasets_old": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 34, "max_lineno": 278}, "calls": ["int", "int", "query_definition.items", "len", "dcat_service.misc.exception.BadRequestException", "query_definition.pop", "query_definition.pop", "len", "dcat_service.misc.exception.BadRequestException", "field_w_op.rfind", "field_w_op.split", "all", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "datetime.datetime.strptime", "dcat_service.misc.exception.BadRequestException", "datetime.datetime.strptime", "dcat_service.session_scope", "session.query", "query.filter.filter", "query.filter.order_by", "query.filter.limit().offset", "print", "query.filter.all", "str", "str", "str", "list", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "sqlalchemy.func.ST_AsGeoJSON", "query.filter.filter", "query.filter.filter", "query.filter.join().join", "sqlalchemy.sql.expression.case().desc", "ujson.loads", "datasets_summary.values", "dcat_service.db_models.DatasetDB.id.in_", "query.filter.filter", "query.filter.filter", "isinstance", "query.filter.filter", "query.filter.limit", "list", "dcat_service.db_models.DatasetDB.name.op", "query.filter.join", "dcat_service.db_models.StandardVariableDB.id.in_", "query.filter.filter", "query.filter.filter", "dcat_service.db_models.DatasetDB.spatial_coverage.ST_Within", "isinstance", "query.filter.filter", "sqlalchemy.sql.expression.case", "fields.keys", "re.escape().replace", "dcat_service.db_models.StandardVariableDB.name.op", "query.filter.filter", "query.filter.filter", "sqlalchemy.func.ST_Makeenvelope", "dcat_service.db_models.DatasetDB.spatial_coverage.ST_Within", "isinstance", "query.filter.filter", "re.escape().replace", "query.filter.filter", "query.filter.filter", "sqlalchemy.func.st_setsrid", "dcat_service.db_models.DatasetDB.spatial_coverage.ST_Intersects", "isinstance", "query.filter.filter", "re.escape", "query.filter.filter", "Exception", "query.filter.filter", "Exception", "sqlalchemy.func.ST_geomfromgeojson", "sqlalchemy.func.ST_Makeenvelope", "dcat_service.db_models.DatasetDB.spatial_coverage.ST_Intersects", "dcat_service.db_models.DatasetDB.json_metadata.has_key", "re.escape", "ujson.dumps", "sqlalchemy.func.st_setsrid", "sqlalchemy.func.ST_geomfromgeojson", "ujson.dumps"], "store_vars_calls": {"limit": "int", "offset": "int", "query": "query.filter", "results": "query.all", "dataset_id": "str", "dataset_name": "str", "dataset_description": "str", "dataset_spatial_coverage": "ujson.loads"}}, "find_datasets": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 280, "max_lineno": 397}, "calls": ["int", "int", "query_definition.items", "len", "dcat_service.misc.exception.BadRequestException", "query_definition.pop", "query_definition.pop", "len", "dcat_service.misc.exception.BadRequestException", "field_w_op.rfind", "field_w_op.split", "all", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.query().distinct", "query.filter.order_by", "query.filter.limit().offset", "print", "query.filter.all", "results_json.append", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "query.filter.filter", "query.filter.filter", "query.filter.join().join", "sqlalchemy.sql.expression.case().desc", "str", "str", "str", "session.query", "dcat_service.db_models.DatasetDB.id.in_", "query.filter.filter", "query.filter.filter", "query.filter.limit", "list", "dcat_service.db_models.DatasetDB.name.op", "query.filter.join", "dcat_service.db_models.StandardVariableDB.id.in_", "sqlalchemy.sql.expression.case", "fields.keys", "re.escape().replace", "dcat_service.db_models.StandardVariableDB.name.op", "re.escape().replace", "re.escape", "dcat_service.db_models.DatasetDB.json_metadata.has_key", "re.escape"], "store_vars_calls": {"limit": "int", "offset": "int", "query": "query.filter", "results": "query.all"}}, "find_standard_variables": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 399, "max_lineno": 492}, "calls": ["int", "int", "query_definition.items", "len", "dcat_service.misc.exception.BadRequestException", "query_definition.pop", "query_definition.pop", "len", "dcat_service.misc.exception.BadRequestException", "field_w_op.rfind", "field_w_op.split", "all", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.query().distinct", "query.filter.limit", "print", "query.filter.all", "standard_variable.to_dict", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "list", "query.filter.filter", "query.filter.filter", "query.filter.filter", "fields.keys", "session.query", "dcat_service.db_models.StandardVariableDB.ontology.in_", "dcat_service.db_models.StandardVariableDB.uri.in_", "dcat_service.db_models.StandardVariableDB.name.op", "re.escape().replace", "re.escape"], "store_vars_calls": {"limit": "int", "offset": "int", "query": "query.filter", "results": "query.all"}}, "dataset_standard_variables": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 494, "max_lineno": 542}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.query().distinct().join().join().filter", "print", "session.query().distinct().join().join().filter.all", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "str", "results_json[].append", "session.query().distinct().join().join", "str", "str", "str", "session.query().distinct().join", "session.query().distinct", "session.query"], "store_vars_calls": {"query": "session.query().distinct().join().join().filter", "results": "query.all"}}, "dataset_variables": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 544, "max_lineno": 604}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.query().join().outerjoin().filter", "print", "session.query().join().outerjoin().filter.all", "list", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "variable_ids_results.values", "session.query().join().outerjoin", "record_json[].append", "str", "session.query().join", "str", "str", "str", "str", "str", "session.query"], "store_vars_calls": {"query": "session.query().join().outerjoin().filter", "results": "query.all", "variables": "list", "variable_id": "str"}}, "variables_standard_variables": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 606, "max_lineno": 689}, "calls": ["int", "int", "query_definition.items", "len", "dcat_service.misc.exception.BadRequestException", "query_definition.pop", "query_definition.pop", "len", "dcat_service.misc.exception.BadRequestException", "any", "field_w_op.rfind", "field_w_op.split", "all", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.query().distinct().outerjoin().filter", "print", "session.query().distinct().outerjoin().filter.limit().all", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "dcat_service.db_models.VariableDB.id.in_", "str", "list", "query_controllers._validate_uuid", "session.query().distinct().outerjoin", "session.query().distinct().outerjoin().filter.limit", "record_json[].append", "variable_ids_results.values", "list", "str", "str", "fields.keys", "session.query().distinct", "str", "str", "str", "str", "str", "session.query"], "store_vars_calls": {"limit": "int", "offset": "int", "query": "session.query().distinct().outerjoin().filter", "results": "query.limit().all", "variable_id": "str"}}, "dataset_temporal_coverage": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 691, "max_lineno": 721}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.execute", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "str"], "store_vars_calls": {"results": "session.execute", "min_date": "str", "max_date": "str"}}, "dataset_resources": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 724, "max_lineno": 908}, "calls": ["int", "len", "dcat_service.misc.exception.BadRequestException", "query_definition.pop", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "session.query", "query_definition.get", "query.filter.filter", "query.filter.limit", "print", "query.filter.all", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "query_definition.get.items", "query.filter.order_by", "results_json[].append", "all", "dcat_service.misc.exception.BadRequestException", "query.filter.join", "query.filter.join", "dcat_service.db_models.TemporalCoverageIndexDB.end_time.desc", "field_w_op.rfind", "field_w_op.split", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "datetime.datetime.strptime", "dcat_service.misc.exception.BadRequestException", "datetime.datetime.strptime", "isinstance", "query.filter.filter", "str", "str", "str", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.misc.exception.BadRequestException", "query.filter.filter", "query.filter.filter", "dcat_service.db_models.SpatialCoverageIndexDB.spatial_coverage.ST_Within", "isinstance", "query.filter.filter", "str().split", "list", "query.filter.filter", "query.filter.filter", "sqlalchemy.func.ST_Makeenvelope", "dcat_service.db_models.SpatialCoverageIndexDB.spatial_coverage.ST_Within", "isinstance", "query.filter.filter", "fields.keys", "query.filter.filter", "query.filter.filter", "sqlalchemy.func.st_setsrid", "dcat_service.db_models.SpatialCoverageIndexDB.spatial_coverage.ST_Intersects", "isinstance", "query.filter.filter", "str", "query.filter.filter", "Exception", "query.filter.filter", "Exception", "sqlalchemy.func.ST_geomfromgeojson", "sqlalchemy.func.ST_Makeenvelope", "dcat_service.db_models.SpatialCoverageIndexDB.spatial_coverage.ST_Intersects", "ujson.dumps", "sqlalchemy.func.st_setsrid", "sqlalchemy.func.ST_geomfromgeojson", "ujson.dumps"], "store_vars_calls": {"limit": "int", "query": "query.filter", "filter_definition": "query_definition.get", "results": "query.all"}}, "get_dataset_info": {"args": ["query_definition"], "returns": [["record"]], "min_max_lineno": {"min_lineno": 910, "max_lineno": 945}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "dcat_service.models.dataset.Dataset.find_by_record_id", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "str().split", "ujson.loads", "str"], "store_vars_calls": {"dataset_db_record": "Dataset.find_by_record_id"}}, "get_resource_info": {"args": ["query_definition"], "returns": [["record"]], "min_max_lineno": {"min_lineno": 947, "max_lineno": 981}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "dcat_service.models.resource.Resource.find_by_record_id", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "str", "str().split", "str"], "store_vars_calls": {"resource_db_record": "Resource.find_by_record_id"}}, "get_variable_info": {"args": ["query_definition"], "returns": [["record"]], "min_max_lineno": {"min_lineno": 983, "max_lineno": 1016}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "dcat_service.models.variable.Variable.find_by_record_id", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "str"], "store_vars_calls": {"variable_db_record": "Variable.find_by_record_id"}}, "get_standard_variable_info": {"args": ["query_definition"], "returns": [["record"]], "min_max_lineno": {"min_lineno": 1018, "max_lineno": 1050}, "calls": ["len", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.misc.exception.BadRequestException", "str", "dcat_service.misc.exception.BadRequestException", "dcat_service.session_scope", "dcat_service.models.standard_variable.StandardVariable.find_by_record_id", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str"], "store_vars_calls": {"standard_variable_db_record": "StandardVariable.find_by_record_id"}}, "search_datasets": {"args": ["query_definition"], "min_max_lineno": {"min_lineno": 1052, "max_lineno": 1154}, "calls": ["int", "query_definition.keys", "frozenset", "query_definition.get", "query_definition.get", "len", "dcat_service.misc.exception.BadRequestException", "query_definition.pop", "all", "dcat_service.misc.exception.BadRequestException", "isinstance", "dcat_service.misc.exception.BadRequestException", "uuid.UUID", "dcat_service.session_scope", "query_controllers._generate_select_datasets_query", "print", "session.execute", "list", "datasets_dict.items", "traceback.print_exc", "dcat_service.misc.exception.InternalServerException", "str", "dcat_service.misc.exception.BadRequestException", "str", "datasets_dict.keys", "len", "query_controllers._generate_variable_query", "print", "session.execute", "list", "results_json.append", "list", "str", "str", "str", "str", "[].append", "dataset_record[].values", "query_definition.keys", "str", "str", "str", "str"], "store_vars_calls": {"limit": "int", "field_names": "query_definition.keys", "allowed_query_words": "frozenset", "search_query": "query_definition.get", "provenance_id": "query_definition.get", "datasets_query": "_generate_select_datasets_query", "datasets_results": "session.execute", "dataset_ids": "list", "dataset_id": "str", "variables_query": "_generate_variable_query", "variables_results": "session.execute", "variable_id": "str"}}, "_generate_select_datasets_query": {"args": ["provenance_id", "search_query", "limit"], "returns": [["query"]], "min_max_lineno": {"min_lineno": 1156, "max_lineno": 1191}, "calls": ["where_query_part.append", "where_query_part.append", "order_by_query_part.append", "order_by_query_part.append", "len", "len", "str"]}, "_generate_variable_query": {"args": ["dataset_ids"], "returns": [["query"]], "min_max_lineno": {"min_lineno": 1193, "max_lineno": 1220}}}, "is_test": false}