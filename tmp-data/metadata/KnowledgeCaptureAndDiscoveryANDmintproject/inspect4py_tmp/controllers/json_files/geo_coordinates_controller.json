{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/model-catalog-api/server/openapi_server/controllers/geo_coordinates_controller.py", "fileNameBase": "geo_coordinates_controller", "extension": "py"}, "dependencies": [{"import": "connexion", "type": "external"}, {"import": "six", "type": "external"}, {"from_module": "openapi_server", "import": "query_manager", "type": "external"}, {"from_module": "openapi_server.utils.vars", "import": "GEOCOORDINATES_TYPE_NAME", "type": "external"}, {"from_module": "openapi_server.utils.vars", "import": "GEOCOORDINATES_TYPE_URI", "type": "external"}, {"from_module": "openapi_server.models.geo_coordinates", "import": "GeoCoordinates", "type": "external"}, {"from_module": "openapi_server", "import": "util", "type": "external"}], "functions": {"geocoordinatess_get": {"doc": {"long_description": "Gets a list of all instances of GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates) # noqa: E501", "short_description": "List all instances of GeoCoordinates", "args": {"username": {"description": "Name of the user graph to query"}, "label": {"description": "Filter by label"}, "page": {"description": "Page number"}, "per_page": {"description": "Items per page"}}}, "args": ["username", "label", "page", "per_page"], "min_max_lineno": {"min_lineno": 9, "max_lineno": 35}, "calls": ["openapi_server.query_manager.get_resource"]}, "geocoordinatess_id_delete": {"doc": {"long_description": "Delete an existing GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates) # noqa: E501", "short_description": "Delete an existing GeoCoordinates", "args": {"id": {"description": "The ID of the GeoCoordinates to be retrieved"}, "user": {"description": "Username"}}}, "args": ["id", "user"], "min_max_lineno": {"min_lineno": 36, "max_lineno": 55}, "calls": ["openapi_server.query_manager.delete_resource"]}, "geocoordinatess_id_get": {"doc": {"long_description": "Gets the details of a given GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates) # noqa: E501", "short_description": "Get a single GeoCoordinates by its id", "args": {"id": {"description": "The ID of the GeoCoordinates to be retrieved"}, "username": {"description": "Name of the user graph to query"}}}, "args": ["id", "username"], "min_max_lineno": {"min_lineno": 56, "max_lineno": 75}, "calls": ["openapi_server.query_manager.get_resource"]}, "geocoordinatess_id_put": {"doc": {"long_description": "Updates an existing GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates) # noqa: E501", "short_description": "Update an existing GeoCoordinates", "args": {"id": {"description": "The ID of the GeoCoordinates to be retrieved"}, "user": {"description": "Username"}, "geo_coordinates": {"description": "An old GeoCoordinatesto be updated"}}}, "args": ["id", "user", "geo_coordinates"], "min_max_lineno": {"min_lineno": 76, "max_lineno": 100}, "calls": ["openapi_server.query_manager.put_resource", "openapi_server.models.geo_coordinates.GeoCoordinates.from_dict", "connexion.request.get_json"], "store_vars_calls": {"geo_coordinates": "GeoCoordinates.from_dict"}}, "geocoordinatess_post": {"doc": {"long_description": "Create a new instance of GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates) # noqa: E501", "short_description": "Create one GeoCoordinates", "args": {"user": {"description": "Username"}, "geo_coordinates": {"description": "Information about the GeoCoordinatesto be created"}}}, "args": ["user", "geo_coordinates"], "min_max_lineno": {"min_lineno": 101, "max_lineno": 123}, "calls": ["openapi_server.query_manager.post_resource", "openapi_server.models.geo_coordinates.GeoCoordinates.from_dict", "connexion.request.get_json"], "store_vars_calls": {"geo_coordinates": "GeoCoordinates.from_dict"}}}, "is_test": false}