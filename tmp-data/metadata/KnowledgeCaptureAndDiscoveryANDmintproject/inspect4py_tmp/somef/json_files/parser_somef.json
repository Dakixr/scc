{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/somef/src/somef/parser_somef.py", "fileNameBase": "parser_somef", "extension": "py"}, "dependencies": [{"import": "markdown", "type": "external"}, {"import": "re", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "regular_expressions", "type": "internal"}], "functions": {"extract_headers": {"args": ["original_text"], "returns": [["output"]], "min_max_lineno": {"min_lineno": 6, "max_lineno": 28}, "calls": ["parser_somef.extract_bash", "markdown.markdown", "markdown.markdown.split", "len", "line.startswith", "parser_somef.is_header", "parser_somef.get_tag_content", "splitted[].startswith"], "store_vars_calls": {"html_text": "markdown.markdown", "splitted": "html_text.split", "limit": "len", "text": "get_tag_content"}}, "extract_headers_with_tags": {"args": ["original_text"], "returns": [["output"]], "min_max_lineno": {"min_lineno": 30, "max_lineno": 44}, "calls": ["parser_somef.extract_bash", "markdown.markdown", "markdown.markdown.split", "len", "line.startswith", "parser_somef.is_header", "output.append", "parser_somef.replace_html_tags"], "store_vars_calls": {"html_text": "markdown.markdown", "splitted": "html_text.split", "limit": "len"}}, "extract_content_per_header": {"args": ["original_text", "headers"], "returns": [["content", "none_header_content"]], "min_max_lineno": {"min_lineno": 46, "max_lineno": 88}, "calls": ["list", "len", "original_text.split", "parser_somef.get_position", "parser_somef.get_text", "get_text.startswith", "content.append", "headers.keys", "len", "parser_somef.get_text", "regular_expressions.remove_links_images", "regular_expressions.remove_html_tags", "print", "text_tokenized[].startswith", "parser_somef.get_position", "parser_somef.get_text", "get_text.startswith", "content.append"], "store_vars_calls": {"keys": "list", "limit": "len", "text_tokenized": "original_text.split", "top_index": "get_position", "header_content": "get_text", "none_header_content": "regular_expressions.remove_html_tags", "bottom_index": "get_position"}}, "get_position": {"args": ["init_index", "text_tokenized", "text"], "returns": [["init_index"]], "min_max_lineno": {"min_lineno": 90, "max_lineno": 98}, "calls": ["len", "remove_hash().strip", "remove_hash().strip.startswith", "parser_somef.remove_hash"], "store_vars_calls": {"val": "remove_hash().strip"}}, "remove_hash": {"doc": {"short_description": "Removes hash from a given text"}, "args": ["text"], "returns": [["text"]], "min_max_lineno": {"min_lineno": 100, "max_lineno": 105}, "calls": ["text.startswith"]}, "get_text": {"args": ["init_index", "end_index", "text_tokenized"], "returns": [["output"]], "min_max_lineno": {"min_lineno": 107, "max_lineno": 117}, "calls": ["len"], "store_vars_calls": {"end_index": "len"}}, "extract_bash": {"args": ["text"], "returns": [["text", "output"]], "min_max_lineno": {"min_lineno": 119, "max_lineno": 132}, "calls": ["text.replace.find", "text.replace.find", "text.replace.find", "text.replace.replace", "str", "str"], "store_vars_calls": {"init": "text.find", "end": "text.find", "text": "text.replace"}}, "extract_blocks_excerpts": {"args": ["header_content"], "returns": [["output"]], "min_max_lineno": {"min_lineno": 134, "max_lineno": 217}, "calls": ["parser_somef.extract_bash", "text_mod.split", "len", "output.append", "p_text.clear", "output.append", "b_text.clear", "piece.replace.startswith", "piece.replace.startswith", "output.append", "parser_somef.join_elements", "parser_somef.join_elements", "output.append", "p_text.clear", "output.append", "b_text.clear", "piece.replace.find", "piece.replace.find", "parser_somef.retrieve_bash_key", "parser_somef.join_elements", "parser_somef.join_elements", "output.append", "p_text.clear", "piece.replace.replace", "len", "parser_somef.join_elements", "block_pieces[].startswith", "b_text.append", "output.append", "b_text.clear", "block_pieces[].startswith", "parser_somef.retrieve_bash_key", "bash_piece.replace.replace", "p_text.append", "p_text.append", "output.append", "output.append", "p_text.clear", "output.append", "b_text.clear", "b_text.append", "output.append", "b_text.clear", "output.append", "parser_somef.join_elements", "output.append", "p_text.clear", "parser_somef.join_elements", "parser_somef.join_elements", "parser_somef.join_elements", "parser_somef.join_elements"], "store_vars_calls": {"block_pieces": "text_mod.split", "limit": "len", "index_bash": "piece.find", "key": "retrieve_bash_key", "piece": "piece.replace", "bash_piece": "bash_piece.replace"}}, "retrieve_bash_key": {"args": ["bash_piece", "index_bash"], "returns": [["key"]], "min_max_lineno": {"min_lineno": 219, "max_lineno": 226}, "calls": ["bash_piece.find"]}, "join_elements": {"args": ["p_text"], "returns": [["output"]], "min_max_lineno": {"min_lineno": 228, "max_lineno": 237}, "calls": ["text.endswith"]}, "extract_text_excerpts_header": {"args": ["original_text"], "min_max_lineno": {"min_lineno": 239, "max_lineno": 279}, "calls": ["parser_somef.extract_headers", "list", "len", "parser_somef.process_blocks_header", "extract_headers.keys", "original_text.split", "parser_somef.get_position", "parser_somef.get_text", "get_text.startswith", "content.append", "len", "parser_somef.process_blocks_header", "text_tokenized[].startswith", "parser_somef.get_position", "parser_somef.get_text", "get_text.startswith", "content.append"], "store_vars_calls": {"headers": "extract_headers", "keys": "list", "limit": "len", "text_tokenized": "original_text.split", "top_index": "get_position", "header_content": "get_text", "bottom_index": "get_position"}}, "process_blocks_header": {"args": ["headers_content"], "returns": [["df"]], "min_max_lineno": {"min_lineno": 281, "max_lineno": 378}, "calls": ["pandas.DataFrame", "parser_somef.extract_bash", "text_mod.split", "len", "pandas.Series", "df.append.append", "p_text.clear", "pandas.Series", "df.append.append", "b_text.clear", "piece.replace.startswith", "piece.replace.startswith", "pandas.Series", "df.append.append", "pandas.Series", "df.append.append", "p_text.clear", "pandas.Series", "df.append.append", "b_text.clear", "piece.replace.find", "piece.replace.find", "parser_somef.retrieve_bash_key", "parser_somef.join_elements", "parser_somef.join_elements", "pandas.Series", "df.append.append", "p_text.clear", "piece.replace.replace", "len", "parser_somef.join_elements", "parser_somef.join_elements", "block_pieces[].startswith", "b_text.append", "pandas.Series", "df.append.append", "b_text.clear", "block_pieces[].startswith", "parser_somef.retrieve_bash_key", "bash_piece.replace.replace", "p_text.append", "p_text.append", "pandas.Series", "df.append.append", "pandas.Series", "df.append.append", "p_text.clear", "pandas.Series", "df.append.append", "b_text.clear", "parser_somef.join_elements", "b_text.append", "pandas.Series", "df.append.append", "b_text.clear", "pandas.Series", "df.append.append", "pandas.Series", "df.append.append", "p_text.clear", "parser_somef.join_elements", "parser_somef.join_elements", "parser_somef.join_elements", "parser_somef.join_elements", "parser_somef.join_elements"], "store_vars_calls": {"df": "df.append", "block_pieces": "text_mod.split", "limit": "len", "s_row": "pd.Series", "index_bash": "piece.find", "key": "retrieve_bash_key", "piece": "piece.replace", "bash_piece": "bash_piece.replace"}}, "extract_headers_parents": {"args": ["original_text"], "min_max_lineno": {"min_lineno": 380, "max_lineno": 393}, "calls": ["parser_somef.extract_headers_with_tags", "parser_somef.remove_tags_new", "parser_somef.update_parents", "parents.append"], "store_vars_calls": {"headers": "extract_headers_with_tags"}}, "remove_tags": {"args": ["header_parents"], "min_max_lineno": {"min_lineno": 395, "max_lineno": 405}, "calls": ["header_parents.keys", "re.sub", "re.sub"], "store_vars_calls": {"new_key": "re.sub", "new_value": "re.sub"}}, "remove_tags_new": {"args": ["header_parents"], "returns": [["output"]], "min_max_lineno": {"min_lineno": 406, "max_lineno": 421}, "calls": ["header_parents.keys", "new_list.append", "len", "len"]}, "update_parents": {"args": ["new_header", "parents"], "returns": [["parent", "parent_list"], ["parent", "parent_list"]], "min_max_lineno": {"min_lineno": 423, "max_lineno": 437}, "calls": ["parser_somef.minor_than", "print", "parent_list.append"]}, "minor_than": {"args": ["second", "first"], "min_max_lineno": {"min_lineno": 439, "max_lineno": 443}, "calls": ["int", "int"]}, "is_header": {"args": ["header"], "min_max_lineno": {"min_lineno": 445, "max_lineno": 452}, "calls": ["header.startswith", "header.startswith", "header.startswith", "header.startswith", "header.startswith", "header.startswith", "header.find"]}, "get_tag_content": {"args": ["header"], "min_max_lineno": {"min_lineno": 454, "max_lineno": 458}, "calls": ["header.index", "header.rindex", "parser_somef.replace_html_tags"], "store_vars_calls": {"init": "header.index", "end": "header.rindex"}}, "replace_html_tags": {"args": ["text"], "returns": [["text"]], "min_max_lineno": {"min_lineno": 461, "max_lineno": 468}, "calls": ["text.replace().replace.replace().replace", "text.replace().replace.replace().replace", "text.replace().replace.replace().replace", "text.replace().replace.replace().replace", "text.replace().replace.replace().replace", "text.replace().replace.replace", "text.replace().replace.replace", "text.replace().replace.replace", "text.replace().replace.replace", "text.replace().replace.replace"], "store_vars_calls": {"text": "text.replace().replace"}}}, "is_test": false}