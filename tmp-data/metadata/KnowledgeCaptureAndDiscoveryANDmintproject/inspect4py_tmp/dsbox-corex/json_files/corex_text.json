{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/dsbox-corex/corex_text.py", "fileNameBase": "corex_text", "extension": "py"}, "dependencies": [{"from_module": "sklearn", "import": "preprocessing", "type": "external"}, {"import": "os", "type": "external"}, {"import": "sys", "type": "external"}, {"from_module": "corex_topic", "import": "Corex", "type": "external"}, {"from_module": "collections", "import": "defaultdict", "type": "external"}, {"from_module": "scipy", "import": "sparse", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"from_module": "sklearn.feature_extraction.text", "import": "CountVectorizer", "type": "external"}, {"from_module": "sklearn.feature_extraction.text", "import": "TfidfVectorizer", "type": "external"}], "classes": {"TFIDF": {"min_max_lineno": {"min_lineno": 18, "max_lineno": 92}, "methods": {"__init__": {"doc": {"short_description": "TO DO:  Add functionality to analyze multiple columns together"}, "args": ["self", "replace_df", "raw_data_path"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 28}, "calls": ["sklearn.feature_extraction.text.TfidfVectorizer"], "store_vars_calls": {"self.bow": "TfidfVectorizer"}}, "fit": {"doc": {"short_description": "X = df[col] for single text column"}, "args": ["self", "X", "y"], "returns": [["self"]], "min_max_lineno": {"min_lineno": 29, "max_lineno": 45}, "calls": ["list", "len", "print", "corex_text.TFIDF.bow.fit_transform", "corex_text.TFIDF.bow.fit_transform", "corex_text.TFIDF._read_text"], "store_vars_calls": {"self.columns": "list", "self.idf_": "self.bow.fit_transform"}}, "transform": {"args": ["self", "X", "y"], "min_max_lineno": {"min_lineno": 46, "max_lineno": 59}, "calls": ["pandas.DataFrame", "corex_text.TFIDF.idf_df.fillna", "corex_text.TFIDF.idf_df.astype", "corex_text.TFIDF.idf_df.iterrows", "str"], "store_vars_calls": {"self.idf_df": "self.idf_df.astype"}}, "fit_transform": {"args": ["self", "X", "y"], "min_max_lineno": {"min_lineno": 63, "max_lineno": 67}, "calls": ["corex_text.TFIDF.fit", "corex_text.TFIDF.transform"]}, "_read_text": {"args": ["self", "df", "columns", "data_path"], "min_max_lineno": {"min_lineno": 68, "max_lineno": 78}, "calls": ["pandas.DataFrame", "pandas.DataFrame.iterrows", "open", "isinstance", "str", "os.path.join", "myfile.read"], "store_vars_calls": {"df": "pd.DataFrame"}}, "annotation": {"args": ["self"], "min_max_lineno": {"min_lineno": 79, "max_lineno": 89}, "calls": ["Primitive"], "store_vars_calls": {"self._annotation": "Primitive"}}, "_get_feature_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 90, "max_lineno": 92}}}}, "CorexText": {"min_max_lineno": {"min_lineno": 94, "max_lineno": 138}, "methods": {"__init__": {"args": ["self", "n_hidden"], "min_max_lineno": {"min_lineno": 96, "max_lineno": 102}, "calls": ["corex_topic.Corex", "sklearn.feature_extraction.text.TfidfVectorizer"], "store_vars_calls": {"self.model": "Corex", "self.bow": "TfidfVectorizer"}}, "fit": {"args": ["self", "X"], "returns": [["self"]], "min_max_lineno": {"min_lineno": 106, "max_lineno": 109}, "calls": ["corex_text.CorexText.fit_transform"]}, "transform": {"args": ["self", "X", "y"], "returns": [["factors"]], "min_max_lineno": {"min_lineno": 110, "max_lineno": 116}, "calls": ["corex_text.CorexText.bow.transform", "corex_text.CorexText.model.transform", "X.values.ravel"], "store_vars_calls": {"bow": "self.bow.transform", "factors": "self.model.transform"}}, "fit_transform": {"args": ["self", "X", "y"], "returns": [["factors"]], "min_max_lineno": {"min_lineno": 117, "max_lineno": 124}, "calls": ["corex_text.CorexText.bow.fit_transform", "corex_text.CorexText.model.fit_transform", "X.values.ravel"], "store_vars_calls": {"bow": "self.bow.fit_transform", "factors": "self.model.fit_transform"}}, "annotation": {"args": ["self"], "min_max_lineno": {"min_lineno": 125, "max_lineno": 135}, "calls": ["Primitive"], "store_vars_calls": {"self._annotation": "Primitive"}}, "get_feature_names": {"args": ["self"], "min_max_lineno": {"min_lineno": 136, "max_lineno": 138}, "calls": ["str", "range"]}}}}, "body": {"calls": ["sys.path.append"]}, "is_test": false}