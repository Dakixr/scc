{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/byod-cleaning-api/kbclean/evaluation/evaluator.py", "fileNameBase": "evaluator", "extension": "py"}, "dependencies": [{"import": "csv", "type": "external"}, {"import": "time", "type": "external"}, {"from_module": "collections", "import": "defaultdict", "type": "external"}, {"from_module": "datetime", "import": "datetime", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"import": "ftfy", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"from_module": "kbclean.evaluation.report", "import": "Report", "type": "external"}, {"from_module": "kbclean.recommendation.active", "import": "ActiveLearner", "type": "external"}, {"from_module": "kbclean.utils.data.helpers", "import": "diff_dfs", "type": "external"}, {"from_module": "loguru", "import": "logger", "type": "external"}, {"from_module": "sklearn.metrics", "import": "classification_report", "type": "external"}, {"from_module": "sklearn.metrics", "import": "confusion_matrix", "type": "external"}], "classes": {"Evaluator": {"min_max_lineno": {"min_lineno": 17, "max_lineno": 197}, "methods": {"__init__": {"args": ["self"], "min_max_lineno": {"min_lineno": 18, "max_lineno": 20}}, "read_dataset": {"args": ["self", "data_path", "data_range"], "returns": [["name2raw", "name2cleaned", "name2groundtruth"]], "min_max_lineno": {"min_lineno": 21, "max_lineno": 48}, "calls": ["pathlib.Path", "len", "sorted", "pandas.read_csv().applymap", "pandas.read_csv().applymap", "list", "list", "raw_path.iterdir", "raw_path.iterdir", "pandas.read_csv", "ftfy.fix_text", "pandas.read_csv", "ftfy.fix_text"], "store_vars_calls": {"data_path": "Path"}}, "average_report": {"args": ["self"], "returns": [["concat_df"]], "min_max_lineno": {"min_lineno": 49, "max_lineno": 58}, "calls": ["pandas.concat", "concat_df.groupby().sum.groupby().sum.groupby().sum", "concat_df.groupby().sum.groupby().sum.apply", "concat_df.groupby().sum.groupby().sum.groupby"], "store_vars_calls": {"concat_df": "concat_df.groupby().sum"}}, "evaluate_df": {"args": ["self", "detector", "raw_df", "cleaned_df", "groundtruth_df"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 62}, "calls": ["detector.detect", "kbclean.evaluation.report.Report"], "store_vars_calls": {"prob_df": "detector.detect"}}, "ievaluate_df": {"args": ["self", "detector", "recommender", "raw_df", "cleaned_df", "groundtruth_df", "score_df"], "min_max_lineno": {"min_lineno": 63, "max_lineno": 66}, "calls": ["detector.idetect", "kbclean.evaluation.report.Report"], "store_vars_calls": {"prob_df": "detector.idetect"}}, "fake_ievaluate_df": {"args": ["self", "detector", "raw_df", "cleaned_df", "groundtruth_df", "k"], "min_max_lineno": {"min_lineno": 67, "max_lineno": 71}, "calls": ["detector.eval_idetect", "kbclean.evaluation.report.Report"], "store_vars_calls": {"prob_df": "detector.eval_idetect"}}, "evaluate": {"args": ["self", "detector", "dataset", "output_path"], "returns": [["name2report"]], "min_max_lineno": {"min_lineno": 72, "max_lineno": 96}, "calls": ["evaluator.Evaluator.read_dataset", "name2raw.keys", "evaluator.Evaluator.average_report", "evaluator.Evaluator.to_csv", "loguru.logger.info", "loguru.logger.info", "evaluator.Evaluator.evaluate_df", "loguru.logger.info", "evaluator.Evaluator.serialize", "list", "pathlib.Path", "str", "str", "name2report.values", "pathlib.Path", "pathlib.Path"], "store_vars_calls": {"avg_report": "self.average_report", "report": "self.evaluate_df"}}, "ievaluate": {"args": ["self", "detector", "method", "dataset", "output_path", "step", "data_range"], "min_max_lineno": {"min_lineno": 97, "max_lineno": 171}, "calls": ["pathlib.Path", "evaluator.Evaluator.read_dataset", "collections.defaultdict", "name2raw.keys", "range", "print", "all", "loguru.logger.info", "kbclean.recommendation.active.ActiveLearner", "range", "evaluator.Evaluator.average_report", "evaluator.Evaluator.to_csv", "loguru.logger.info", "loguru.logger.info", "time.time", "loguru.logger.info", "loguru.logger.info", "loguru.logger.info", "time.time", "time.time", "evaluator.Evaluator.ievaluate_df", "loguru.logger.info", "running_times.append", "loguru.logger.info", "evaluator.Evaluator.serialize", "detector.reset", "name2groundtruth[].stack", "kbclean.recommendation.active.ActiveLearner.update", "time.time", "list", "str", "str", "name2ireport[].values", "numpy.mean", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path"], "store_vars_calls": {"output_path": "Path", "name2ireport": "defaultdict", "recommender": "ActiveLearner", "avg_report": "self.average_report", "start_time": "time.time", "report": "self.ievaluate_df"}}, "fake_ievaluate": {"args": ["self", "detector", "dataset", "output_path"], "returns": [["name2report"]], "min_max_lineno": {"min_lineno": 172, "max_lineno": 197}, "calls": ["pathlib.Path", "evaluator.Evaluator.read_dataset", "name2raw.keys", "evaluator.Evaluator.average_report", "evaluator.Evaluator.to_csv", "loguru.logger.info", "loguru.logger.info", "evaluator.Evaluator.fake_ievaluate_df", "loguru.logger.info", "evaluator.Evaluator.serialize", "list", "pathlib.Path", "str", "str", "name2report.values", "pathlib.Path"], "store_vars_calls": {"output_path": "Path", "avg_report": "self.average_report", "report": "self.fake_ievaluate_df"}}}}}, "is_test": false}