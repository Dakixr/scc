{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/mint_upload/src/mint_upload/object_storage.py", "fileNameBase": "object_storage", "extension": "py", "doc": {"short_description": "Class to upload data to the object storage", "full": "Class to upload data to the object storage"}}, "dependencies": [{"import": "json", "type": "external"}, {"import": "logging", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"import": "requests", "type": "external"}, {"import": "boto3", "type": "external"}, {"from_module": "botocore.client", "import": "Config", "type": "external"}, {"from_module": "botocore.exceptions", "import": "ClientError", "type": "external"}, {"from_module": "mint_upload.progress_percentage", "import": "ProgressPercentage", "type": "external"}], "classes": {"Uploader": {"doc": {"short_description": "Class to upload data to a object store", "full": "Class to upload data to a object store\n    "}, "min_max_lineno": {"min_lineno": 15, "max_lineno": 128}, "methods": {"__init__": {"doc": {"short_description": "Constructor", "args": {"s3_server": {"description": "S3 server url https://..", "type_name": "str", "is_optional": false}, "auth_server": {"description": "Auth server url https://", "type_name": "str", "is_optional": false}, "username": {"description": "The username", "type_name": "str", "is_optional": false}, "password": {"description": "The password", "type_name": "str", "is_optional": false}}}, "args": ["self", "s3_server", "auth_server", "username", "password"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 76}, "calls": ["boto3.client", "requests.post", "json.loads", "object_storage.Uploader.sts_client.assume_role_with_web_identity", "boto3.resource", "requests.exceptions.HTTPError", "requests.exceptions.HTTPError", "botocore.client.Config"], "store_vars_calls": {"self.sts_client": "boto3.client", "response": "self.sts_client.assume_role_with_web_identity", "tokens": "json.loads", "s3_resource": "boto3.resource"}}, "upload_file": {"doc": {"short_description": "Upload a file", "args": {"file_name": {"description": "File to upload", "type_name": "str", "is_optional": false}, "bucket_name": {"description": "Bucket to upload to", "type_name": "str", "is_optional": false}, "object_name": {"description": "S3 object name. If not specified the file_name is used.                 Defaults to None.", "type_name": "str", "is_optional": true}}}, "args": ["self", "file_name", "bucket_name", "object_name"], "min_max_lineno": {"min_lineno": 77, "max_lineno": 101}, "calls": ["object_storage.Uploader.client.upload_file", "pathlib.Path", "mint_upload.progress_percentage.ProgressPercentage"]}, "create_bucket": {"doc": {"short_description": "Create a new bucket", "args": {"bucket_name": {"description": "The bucket name", "type_name": "str", "is_optional": false}}, "returns": {"description": "True if success, false failue", "type_name": "boolean", "is_generator": false}}, "args": ["self", "bucket_name"], "min_max_lineno": {"min_lineno": 102, "max_lineno": 118}, "calls": ["object_storage.Uploader.client.create_bucket", "logging.error"]}, "get_cmd_line": {"doc": {"short_description": "Return the line to configure minio client if the user wants to use cmd", "returns": {"description": "the cmdline", "type_name": "str", "is_generator": false}}, "args": ["self"], "returns": [["cmd"]], "min_max_lineno": {"min_lineno": 119, "max_lineno": 128}}}}}, "is_test": false}