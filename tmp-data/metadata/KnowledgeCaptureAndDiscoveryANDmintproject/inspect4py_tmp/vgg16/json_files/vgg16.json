{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/spider/spider/featurization/vgg16/vgg16.py", "fileNameBase": "vgg16", "extension": "py"}, "dependencies": [{"from_module": "__future__", "import": "print_function", "type": "external"}, {"import": "sys", "type": "external"}, {"import": "os", "type": "external"}, {"import": "inspect", "type": "external"}, {"import": "urllib", "type": "external"}, {"import": "warnings", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"from_module": "scipy", "import": "misc", "type": "external"}, {"import": "tensorflow", "alias": "tf", "type": "external"}, {"from_module": "keras", "import": "backend", "alias": "K", "type": "external"}, {"from_module": "keras.models", "import": "Model", "type": "external"}, {"from_module": "keras.layers", "import": "Flatten", "type": "external"}, {"from_module": "keras.layers", "import": "Dense", "type": "external"}, {"from_module": "keras.layers", "import": "Input", "type": "external"}, {"from_module": "keras.layers", "import": "Conv2D", "type": "external"}, {"from_module": "keras.layers", "import": "MaxPooling2D", "type": "external"}, {"from_module": "keras.layers", "import": "GlobalMaxPooling2D", "type": "external"}, {"from_module": "keras.layers", "import": "GlobalAveragePooling2D", "type": "external"}, {"from_module": "keras.preprocessing", "import": "image", "type": "external"}, {"from_module": "keras.applications.imagenet_utils", "import": "preprocess_input", "type": "external"}, {"from_module": "keras.applications.imagenet_utils", "import": "decode_predictions", "type": "external"}, {"import": "utils", "type": "internal"}, {"from_module": "spider.featurization_base", "import": "FeaturizationTransformerPrimitiveBase", "type": "external"}], "classes": {"VGG16": {"min_max_lineno": {"min_lineno": 36, "max_lineno": 264}, "methods": {"__init__": {"args": ["self", "device", "num_cores", "output_feature_layer"], "min_max_lineno": {"min_lineno": 39, "max_lineno": 91}, "calls": ["tensorflow.ConfigProto", "tensorflow.Session", "keras.backend.set_session", "os.path.join", "vgg16.VGG16.model", "vgg16.VGG16.device[].lower", "os.path.abspath", "os.path.isdir", "os.makedirs", "vgg16.VGG16.device[].lower", "ValueError", "os.path.dirname"], "store_vars_calls": {"config": "tf.ConfigProto", "session": "tf.Session", "self.weights_directory": "os.path.join", "self.base_model": "self.model"}}, "model": {"args": ["self"], "returns": [["model"]], "min_max_lineno": {"min_lineno": 92, "max_lineno": 153}, "calls": ["keras.layers.Input", "keras.models.Model", "keras.models.Model.load_weights", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "utils.download_weights"], "store_vars_calls": {"img_input": "Input", "model": "Model"}}, "input_handler": {"doc": {"long_description": "data for implementation in the VGG16 network", "short_description": "Performs necessary manipulations to prepare input", "args": {"- data": {"description": "string file location of image file, or np.array of an image\nto feed into the network"}, "- method": {"description": "optional -- default 'bilinear' --, selects which method of\ninterpolation to perform when resizing the input is necessary"}}, "returns": {"description": "- x: 4D np.array to feed into the VGG16 network. Typically the output\nis always of shape (1, 224, 224, 3)", "is_generator": false}}, "args": ["self", "data", "method"], "returns": [["x"]], "min_max_lineno": {"min_lineno": 154, "max_lineno": 203}, "calls": ["isinstance", "keras.applications.imagenet_utils.preprocess_input", "ValueError", "isinstance", "os.path.isfile", "IOError", "keras.preprocessing.image.load_img", "keras.preprocessing.image.img_to_array", "utils.interpolate", "TypeError", "str", "len", "numpy.expand_dims", "len", "numpy.expand_dims"], "store_vars_calls": {"x": "np.expand_dims", "img": "image.load_img"}}, "model_handler": {"doc": {"short_description": "Used to construct and layout the VGG16 model with desired input and output", "args": {"- output_feature_layer": {"description": "The layer from VGG16 to output from the forward pass\nof the model"}}, "returns": {"description": "- A Keras model type with desired input and output", "is_generator": false}}, "args": ["self", "output_feature_layer"], "returns": [["model"]], "min_max_lineno": {"min_lineno": 204, "max_lineno": 227}, "calls": ["keras.models.Model", "warnings.warn", "keras.models.Model", "vgg16.VGG16.base_model.get_layer", "vgg16.VGG16.base_model.get_layer"], "store_vars_calls": {"model": "Model"}}, "imagenet_predictions": {"doc": {"short_description": "Outputs the predicted imagenet class of the input data", "args": {"- data": {"description": "file location or numpy array containing image data to feed into the network"}}, "returns": {"description": "- predictions: The top 5 predicted imagenet classes at the output of the model", "is_generator": false}}, "args": ["self", "data"], "returns": [["predictions"]], "min_max_lineno": {"min_lineno": 229, "max_lineno": 246}, "calls": ["vgg16.VGG16.model_handler", "vgg16.VGG16.input_handler", "vgg16.VGG16.predict", "keras.applications.imagenet_utils.decode_predictions"], "store_vars_calls": {"model": "self.model_handler", "x": "self.input_handler", "features": "model.predict", "predictions": "decode_predictions"}}, "produce": {"args": ["self", "inputs", "timeout", "iterations"], "min_max_lineno": {"min_lineno": 247, "max_lineno": 264}, "calls": ["vgg16.VGG16.model_handler", "isinstance", "vgg16.VGG16.input_handler", "vgg16.VGG16.predict", "numpy.squeeze", "vgg16.VGG16.features.append", "vgg16.VGG16.input_handler", "vgg16.VGG16.predict", "numpy.squeeze", "vgg16.VGG16.features.append"], "store_vars_calls": {"model": "self.model_handler", "x": "self.input_handler", "image_features": "np.squeeze"}}}}}, "is_test": false}