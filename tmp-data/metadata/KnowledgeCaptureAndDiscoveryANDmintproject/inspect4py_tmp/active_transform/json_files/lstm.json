{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/byod-cleaning-api/kbclean/detection/active_transform/lstm.py", "fileNameBase": "lstm", "extension": "py"}, "dependencies": [{"import": "time", "type": "external"}, {"from_module": "loguru", "import": "logger", "type": "external"}, {"from_module": "pytorch_lightning.core.lightning", "import": "LightningModule", "type": "external"}, {"from_module": "kbclean.detection.features.base", "import": "ConcatExtractor", "type": "external"}, {"from_module": "kbclean.detection.features.embedding", "import": "CharFastText", "type": "external"}, {"from_module": "kbclean.detection.features.embedding", "import": "CoValueFastText", "type": "external"}, {"from_module": "kbclean.detection.features.embedding", "import": "WordFastText", "type": "external"}, {"from_module": "kbclean.utils.data.readers", "import": "RowBasedValue", "type": "external"}, {"import": "os", "type": "external"}, {"import": "random", "type": "external"}, {"from_module": "functools", "import": "partial", "type": "external"}, {"from_module": "typing", "import": "List", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "torch", "type": "external"}, {"import": "torch", "alias": "F", "type": "external"}, {"from_module": "kbclean.detection.active_transform.holo", "import": "HoloDetector", "type": "external"}, {"from_module": "kbclean.detection.features.statistics", "import": "StatsExtractor", "type": "external"}, {"from_module": "kbclean.transformation.noisy_channel", "import": "CombinedNCGenerator", "type": "external"}, {"from_module": "kbclean.transformation.noisy_channel", "import": "NCGenerator", "type": "external"}, {"from_module": "kbclean.transformation.noisy_channel", "import": "SameNCGenerator", "type": "external"}, {"from_module": "kbclean.utils.data.helpers", "import": "split_train_test_dls", "type": "external"}, {"from_module": "kbclean.utils.data.helpers", "import": "unzip_and_stack_tensors", "type": "external"}, {"from_module": "pytorch_lightning", "import": "Trainer", "type": "external"}, {"from_module": "torch", "import": "nn", "type": "external"}, {"from_module": "torch", "import": "optim", "type": "external"}, {"from_module": "torch.nn.utils.rnn", "import": "pack_padded_sequence", "type": "external"}, {"from_module": "torch.nn.utils.rnn", "import": "pad_packed_sequence", "type": "external"}, {"from_module": "torch.utils.data.dataset", "import": "TensorDataset", "type": "external"}, {"from_module": "imblearn.over_sampling", "import": "SMOTE", "type": "external"}], "classes": {"Attention": {"extend": ["nn.Module"], "min_max_lineno": {"min_lineno": 33, "max_lineno": 54}, "methods": {"__init__": {"args": ["self", "feature_dim"], "min_max_lineno": {"min_lineno": 34, "max_lineno": 42}, "calls": ["torch.nn.Module.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.nn.init.kaiming_uniform_", "torch.nn.init.kaiming_uniform_", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "store_vars_calls": {"weight": "torch.zeros", "self.W": "nn.Parameter", "self.b": "nn.Parameter"}}, "forward": {"args": ["self", "x"], "min_max_lineno": {"min_lineno": 43, "max_lineno": 54}, "calls": ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mm().view", "torch.mm().view", "torch.mm().view", "torch.mm().view", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "x.view"], "store_vars_calls": {"eij": "torch.tanh", "a": "torch.exp"}}}}, "LSTMModel": {"extend": ["LightningModule"], "min_max_lineno": {"min_lineno": 56, "max_lineno": 131}, "methods": {"__init__": {"args": ["self", "hparams"], "min_max_lineno": {"min_lineno": 57, "max_lineno": 78}, "calls": ["pytorch_lightning.core.lightning.LightningModule.__init__", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.GRU", "torch.nn.GRU", "torch.nn.GRU", "torch.nn.GRU", "lstm.Attention", "lstm.Attention", "torch.nn.Linear", "torch.nn.Linear"], "store_vars_calls": {"self.dropout": "nn.Dropout", "self.char_lstm": "nn.GRU", "self.word_lstm": "nn.GRU", "self.char_attention": "Attention", "self.word_attention": "Attention", "self.fc": "nn.Linear"}}, "forward": {"args": ["self", "char_inputs", "char_lengths", "word_inputs", "word_lengths", "features"], "min_max_lineno": {"min_lineno": 80, "max_lineno": 102}, "calls": ["torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "lstm.LSTMModel.char_lstm", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "lstm.LSTMModel.char_attention", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "lstm.LSTMModel.word_lstm", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "lstm.LSTMModel.word_attention", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "char_lengths.cpu", "word_lengths.cpu", "lstm.LSTMModel.fc"], "store_vars_calls": {"packed_inputs": "pack_padded_sequence", "h": "torch.cat", "char_attn_outputs": "self.char_attention", "word_attn_outputs": "self.word_attention", "attn_outputs": "torch.cat"}}, "training_step": {"args": ["self", "batch", "batch_idx"], "returns": [["loss"]], "min_max_lineno": {"min_lineno": 103, "max_lineno": 116}, "calls": ["labels.view.view.view", "lstm.LSTMModel.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "lstm.LSTMModel.log", "lstm.LSTMModel.log", "labels.view.view.float"], "store_vars_calls": {"labels": "labels.view", "probs": "self.forward", "loss": "F.binary_cross_entropy"}}, "validation_step": {"args": ["self", "batch", "batch_idx"], "min_max_lineno": {"min_lineno": 117, "max_lineno": 128}, "calls": ["labels.view.view.view", "lstm.LSTMModel.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "lstm.LSTMModel.log", "lstm.LSTMModel.log", "labels.view.view.float"], "store_vars_calls": {"labels": "labels.view", "probs": "self.forward", "loss": "F.binary_cross_entropy"}}, "configure_optimizers": {"args": ["self"], "min_max_lineno": {"min_lineno": 129, "max_lineno": 131}, "calls": ["torch.optim.AdamW", "torch.optim.AdamW", "lstm.LSTMModel.parameters"]}}}, "LSTMDetector": {"extend": ["HoloDetector"], "min_max_lineno": {"min_lineno": 133, "max_lineno": 239}, "methods": {"__init__": {"args": ["self", "hparams"], "min_max_lineno": {"min_lineno": 134, "max_lineno": 141}, "calls": ["kbclean.detection.features.base.ConcatExtractor", "kbclean.detection.features.embedding.CharFastText", "kbclean.detection.features.embedding.WordFastText", "kbclean.detection.features.statistics.StatsExtractor"], "store_vars_calls": {"self.feature_extractor": "ConcatExtractor"}}, "extract_features": {"args": ["self", "data", "labels"], "returns": [["features"]], "min_max_lineno": {"min_lineno": 145, "max_lineno": 159}, "calls": ["lstm.LSTMDetector.feature_extractor.fit_transform", "lstm.LSTMDetector.feature_extractor[].n_features", "lstm.LSTMDetector.feature_extractor.transform", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "store_vars_calls": {"features": "self.feature_extractor.transform", "self.hparams.model.feature_dim": "self.feature_extractor[].n_features", "label_data": "torch.tensor"}}, "reset": {"args": ["self"], "min_max_lineno": {"min_lineno": 160, "max_lineno": 162}, "calls": ["lstm.LSTMModel"], "store_vars_calls": {"self.model": "LSTMModel"}}, "idetect_values": {"args": ["self", "ec_str_pairs", "row_values", "scores", "recommender"], "min_max_lineno": {"min_lineno": 163, "max_lineno": 211}, "calls": ["kbclean.transformation.noisy_channel.CombinedNCGenerator", "time.time", "kbclean.transformation.noisy_channel.CombinedNCGenerator.fit_transform", "loguru.logger.info", "lstm.LSTMDetector.extract_features", "lstm.LSTMModel", "torch.utils.data.dataset.TensorDataset", "torch.utils.data.dataset.TensorDataset", "kbclean.utils.data.helpers.split_train_test_dls", "lstm.LSTMDetector.model.train", "lstm.LSTMDetector.extract_features", "lstm.LSTMDetector.model.eval", "lstm.LSTMDetector.model.forward", "lstm.LSTMDetector.squeeze().detach().cpu().numpy", "len", "str", "pytorch_lightning.Trainer", "pytorch_lightning.Trainer.fit", "random.randint", "lstm.LSTMDetector.squeeze().detach().cpu", "time.time", "lstm.LSTMDetector.squeeze().detach", "lstm.LSTMDetector.squeeze"], "store_vars_calls": {"generator": "CombinedNCGenerator", "start_time": "time.time", "feature_tensors_with_labels": "self.extract_features", "self.model": "LSTMModel", "dataset": "TensorDataset", "feature_tensors": "self.extract_features", "pred": "self.model.forward", "trainer": "Trainer"}}, "idetect": {"args": ["self", "df", "score_df", "recommender"], "returns": [["result_df"]], "min_max_lineno": {"min_lineno": 212, "max_lineno": 239}, "calls": ["df.copy", "df.to_dict", "df[].values.tolist", "kbclean.utils.data.readers.RowBasedValue", "score_df[].values.tolist", "all", "pandas.Series", "lstm.LSTMDetector.idetect_values", "pandas.Series", "zip", "range", "len"], "store_vars_calls": {"result_df": "df.copy", "records": "df.to_dict", "values": "df[].values.tolist", "scores": "score_df[].values.tolist", "outliers": "self.idetect_values"}}}}}, "is_test": false}