{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/byod-cleaning-api/kbclean/detection/active_transform/holo.py", "fileNameBase": "holo", "extension": "py"}, "dependencies": [{"from_module": "functools", "import": "partial", "type": "external"}, {"from_module": "typing", "import": "List", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"from_module": "pytorch_lightning.core.lightning", "import": "LightningModule", "type": "external"}, {"import": "torch", "type": "external"}, {"import": "torch", "alias": "F", "type": "external"}, {"from_module": "kbclean.detection.addons.highway", "import": "Highway", "type": "external"}, {"from_module": "kbclean.detection.base", "import": "ActiveDetector", "type": "external"}, {"from_module": "kbclean.detection.features.holo", "import": "HoloFeatureExtractor", "type": "external"}, {"from_module": "kbclean.transformation.noisy_channel", "import": "NCGenerator", "type": "external"}, {"from_module": "kbclean.utils.data.helpers", "import": "split_train_test_dls", "type": "external"}, {"from_module": "kbclean.utils.data.helpers", "import": "unzip_and_stack_tensors", "type": "external"}, {"from_module": "pytorch_lightning", "import": "Trainer", "type": "external"}, {"from_module": "sklearn.preprocessing", "import": "MinMaxScaler", "type": "external"}, {"from_module": "torch", "import": "nn", "type": "external"}, {"from_module": "torch", "import": "optim", "type": "external"}, {"from_module": "torch.utils.data.dataset", "import": "TensorDataset", "type": "external"}, {"from_module": "torchnlp.encoders.text.text_encoder", "import": "stack_and_pad_tensors", "type": "external"}, {"from_module": "torchtext.data.utils", "import": "get_tokenizer", "type": "external"}, {"from_module": "torchtext.vocab", "import": "FastText", "type": "external"}], "classes": {"HoloLearnableModule": {"extend": ["nn.Module"], "min_max_lineno": {"min_lineno": 23, "max_lineno": 37}, "methods": {"__init__": {"args": ["self", "hparams"], "min_max_lineno": {"min_lineno": 24, "max_lineno": 32}, "calls": ["torch.nn.Module.__init__", "kbclean.detection.addons.highway.Highway", "torch.nn.Linear", "torch.nn.Linear"], "store_vars_calls": {"self.highway": "Highway", "self.linear": "nn.Linear"}}, "forward": {"args": ["self", "inputs"], "min_max_lineno": {"min_lineno": 33, "max_lineno": 37}, "calls": ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "holo.HoloLearnableModule.highway", "holo.HoloLearnableModule.linear"], "store_vars_calls": {"avg_input": "torch.mean", "hw_out": "self.highway"}}}}, "HoloModel": {"extend": ["LightningModule"], "min_max_lineno": {"min_lineno": 39, "max_lineno": 84}, "methods": {"__init__": {"args": ["self", "hparams"], "min_max_lineno": {"min_lineno": 40, "max_lineno": 54}, "calls": ["pytorch_lightning.core.lightning.LightningModule.__init__", "holo.HoloLearnableModule", "holo.HoloLearnableModule", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear"], "store_vars_calls": {"self.char_model": "HoloLearnableModule", "self.word_model": "HoloLearnableModule", "self.fcs": "nn.Sequential"}}, "forward": {"args": ["self", "word_inputs", "char_inputs", "other_inputs"], "min_max_lineno": {"min_lineno": 56, "max_lineno": 62}, "calls": ["holo.HoloModel.word_model", "holo.HoloModel.char_model", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "store_vars_calls": {"word_out": "self.word_model", "char_out": "self.char_model", "concat_inputs": "torch.cat().float"}}, "training_step": {"args": ["self", "batch", "batch_idx"], "min_max_lineno": {"min_lineno": 63, "max_lineno": 72}, "calls": ["labels.view.view.view", "holo.HoloModel.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "labels.view.view.float"], "store_vars_calls": {"labels": "labels.view", "probs": "self.forward", "loss": "F.binary_cross_entropy"}}, "validation_step": {"args": ["self", "batch", "batch_idx"], "min_max_lineno": {"min_lineno": 73, "max_lineno": 81}, "calls": ["labels.view.view.view", "holo.HoloModel.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "labels.view.view.float"], "store_vars_calls": {"labels": "labels.view", "probs": "self.forward", "loss": "F.binary_cross_entropy"}}, "configure_optimizers": {"args": ["self"], "min_max_lineno": {"min_lineno": 82, "max_lineno": 84}, "calls": ["torch.optim.AdamW", "torch.optim.AdamW", "holo.HoloModel.parameters"]}}}, "HoloDetector": {"extend": ["ActiveDetector"], "min_max_lineno": {"min_lineno": 86, "max_lineno": 203}, "methods": {"__init__": {"args": ["self", "hparams"], "min_max_lineno": {"min_lineno": 87, "max_lineno": 95}, "calls": ["kbclean.detection.features.holo.HoloFeatureExtractor", "torchtext.data.utils.get_tokenizer", "torchtext.vocab.FastText", "sklearn.preprocessing.MinMaxScaler", "kbclean.transformation.noisy_channel.NCGenerator"], "store_vars_calls": {"self.feature_extractor": "HoloFeatureExtractor", "self.tokenizer": "get_tokenizer", "self.fasttext": "FastText", "self.scaler": "MinMaxScaler", "self.generator": "NCGenerator"}}, "extract_features": {"args": ["self", "data", "labels"], "returns": [["word_data", "char_data", "features"], ["word_data", "char_data", "features", "label_data"]], "min_max_lineno": {"min_lineno": 96, "max_lineno": 129}, "calls": ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "holo.HoloDetector.scaler.fit_transform", "holo.HoloDetector.scaler.transform", "torchnlp.encoders.text.text_encoder.stack_and_pad_tensors", "torchnlp.encoders.text.text_encoder.stack_and_pad_tensors", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "holo.HoloDetector.feature_extractor.fit_transform", "holo.HoloDetector.feature_extractor.transform", "holo.HoloDetector.fasttext.lookup_vectors", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "holo.HoloDetector.fasttext.lookup_vectors", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "holo.HoloDetector.tokenizer", "list"], "store_vars_calls": {"features": "self.scaler.transform", "label_data": "torch.tensor"}}, "reset": {"args": ["self"], "min_max_lineno": {"min_lineno": 130, "max_lineno": 132}, "calls": ["holo.HoloModel"], "store_vars_calls": {"self.model": "HoloModel"}}, "idetect_values": {"args": ["self", "ec_str_pairs", "values", "recommender"], "min_max_lineno": {"min_lineno": 133, "max_lineno": 170}, "calls": ["holo.HoloDetector.generator.fit_transform", "holo.HoloDetector.extract_features", "torch.utils.data.dataset.TensorDataset", "torch.utils.data.dataset.TensorDataset", "kbclean.utils.data.helpers.split_train_test_dls", "holo.HoloDetector.extract_features", "holo.HoloDetector.model.eval", "holo.HoloDetector.model.forward", "holo.HoloDetector.squeeze().detach().cpu().numpy", "recommender.most_positives", "len", "holo.HoloModel", "holo.HoloDetector.model.train", "pytorch_lightning.Trainer", "pytorch_lightning.Trainer.fit", "holo.HoloDetector.squeeze().detach().cpu", "holo.HoloDetector.squeeze().detach", "holo.HoloDetector.squeeze"], "store_vars_calls": {"feature_tensors_with_labels": "self.extract_features", "dataset": "TensorDataset", "feature_tensors": "self.extract_features", "pred": "self.model.forward", "self.model": "HoloModel", "trainer": "Trainer"}}, "eval_idetect": {"args": ["self", "raw_df", "cleaned_df", "k"], "returns": [["result_df"]], "min_max_lineno": {"min_lineno": 171, "max_lineno": 188}, "calls": ["raw_df.copy", "raw_df[].values.tolist", "cleaned_df[].values.tolist", "zip", "pandas.Series", "holo.HoloDetector.idetect_values", "pandas.Series", "false_values.append", "range", "len"], "store_vars_calls": {"result_df": "raw_df.copy", "values": "raw_df[].values.tolist", "cleaned_values": "cleaned_df[].values.tolist", "outliers": "self.idetect_values"}}, "idetect": {"args": ["self", "df", "col2examples", "recommender"], "returns": [["result_df"]], "min_max_lineno": {"min_lineno": 189, "max_lineno": 203}, "calls": ["df.copy", "df[].values.tolist", "pandas.Series", "holo.HoloDetector.idetect_values", "pandas.Series", "range", "len"], "store_vars_calls": {"result_df": "df.copy", "values": "df[].values.tolist", "outliers": "self.idetect_values"}}}}}, "is_test": false}