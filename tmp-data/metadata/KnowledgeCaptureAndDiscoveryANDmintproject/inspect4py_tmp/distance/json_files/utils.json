{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/spider/spider/distance/utils.py", "fileNameBase": "utils", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}], "functions": {"get_random_constraints": {"doc": {"long_description": "Warning: if more constraints are requested than can be uniquely\n    generated for one or more classes, method will run forever.", "short_description": "Utility method for generating pairwise constraints from labels.", "args": {"labels": {"description": "an n-lenth vector containing the class labels for each instance.\nShould be normalized so that the set of label values ranges from\n0 to c-1, where c is the number of classes\nnumML: the number of must-link constraints per class to sample\nnumCL: the number of cannot-link constraints per class to sample"}}, "returns": {"description": "the list of pairwise constraints on the data - an m by 3 numpy\narray, with each row containing a constraint in the form \n<id1, id2, value>,where id1 and id2 are indexes of instances in\nthe training data and value is either 0 (indicating a must-link\nconstraint) or 1 (indicating a cannot-link constraint).", "type_name": "cons", "is_generator": false}, "raises": {"0": {"description": "if there are not at least two classes in the input label set,\nor the labels are not normalized properly", "type_name": "AssertError"}}}, "args": ["labels", "numML", "numCL"], "returns": [["cs"]], "min_max_lineno": {"min_lineno": 3, "max_lineno": 75}, "calls": ["numpy.unique", "len", "numpy.zeros", "set", "xrange", "numpy.random.randint", "numpy.random.randint", "xrange", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "xrange", "numpy.ones", "numpy.nonzero", "numpy.nonzero", "len", "len", "set.add", "set.add", "numpy.vstack", "len", "len", "set.add", "set.add", "numpy.vstack", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "len", "len", "len", "len"], "store_vars_calls": {"labset": "np.unique", "c": "len", "cs": "np.zeros", "conset": "set", "c1": "np.random.randint", "c2": "np.random.randint", "c3": "np.ones"}}, "normalize_labels": {"args": ["labs"], "returns": [["nlabs"]], "min_max_lineno": {"min_lineno": 76, "max_lineno": 97}, "calls": ["numpy.int32().flatten", "numpy.unique", "numpy.arange", "numpy.zeros_like", "xrange", "len", "len", "numpy.int32", "numpy.array"], "store_vars_calls": {"labs": "np.int32().flatten", "labset": "np.unique", "newlabs": "np.arange", "nlabs": "np.zeros_like"}}}, "is_test": true}