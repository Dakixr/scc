{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/byod-cleaning-api/kbclean/utils/distance/sdtw.py", "fileNameBase": "sdtw", "extension": "py"}, "dependencies": [{"import": "numpy", "alias": "np", "type": "external"}, {"import": "torch", "type": "external"}, {"from_module": "numba", "import": "jit", "type": "external"}, {"from_module": "torch.autograd", "import": "Function", "type": "external"}], "classes": {"_SoftDTW": {"extend": ["Function"], "min_max_lineno": {"min_lineno": 54, "max_lineno": 76}, "methods": {"forward": {"args": ["ctx", "D", "gamma"], "min_max_lineno": {"min_lineno": 55, "max_lineno": 65}, "calls": ["torch.Tensor().to().type", "D.detach().cpu().numpy", "torch.Tensor().to().type.item", "torch.Tensor().to().type", "ctx.save_for_backward", "torch.Tensor().to", "D.detach().cpu", "torch.Tensor().to", "torch.Tensor", "D.detach", "torch.Tensor", "sdtw.compute_softdtw"], "store_vars_calls": {"gamma": "torch.Tensor().to().type", "D_": "D.detach().cpu().numpy", "g_": "gamma.item", "R": "torch.Tensor().to().type"}}, "backward": {"args": ["ctx", "grad_output"], "min_max_lineno": {"min_lineno": 66, "max_lineno": 76}, "calls": ["D.detach().cpu().numpy", "R.detach().cpu().numpy", "gamma.item", "torch.Tensor().to().type", "D.detach().cpu", "R.detach().cpu", "torch.Tensor().to", "grad_output.view().expand_as", "D.detach", "R.detach", "torch.Tensor", "grad_output.view", "sdtw.compute_softdtw_backward"], "store_vars_calls": {"D_": "D.detach().cpu().numpy", "R_": "R.detach().cpu().numpy", "g_": "gamma.item", "E": "torch.Tensor().to().type"}}}}, "SoftDTW": {"min_max_lineno": {"min_lineno": 78, "max_lineno": 114}, "methods": {"__init__": {"args": ["self", "gamma", "normalize"], "min_max_lineno": {"min_lineno": 79, "max_lineno": 84}, "calls": ["super().__init__"]}, "calc_distance_matrix": {"args": ["self", "x", "y"], "returns": [["dist"]], "min_max_lineno": {"min_lineno": 85, "max_lineno": 93}, "calls": ["x.unsqueeze().expand.unsqueeze().expand.size", "y.unsqueeze().expand.unsqueeze().expand.size", "x.unsqueeze().expand.unsqueeze().expand.size", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "y.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "torch.pow().sum", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze", "y.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.pow"], "store_vars_calls": {"n": "x.size", "m": "y.size", "d": "x.size", "x": "x.unsqueeze().expand", "y": "y.unsqueeze().expand", "dist": "torch.pow().sum"}}, "forward": {"args": ["self", "x", "y"], "min_max_lineno": {"min_lineno": 94, "max_lineno": 114}, "calls": ["len", "len", "len", "x.unsqueeze.unsqueeze.unsqueeze", "y.unsqueeze.unsqueeze.unsqueeze", "sdtw.SoftDTW.calc_distance_matrix", "sdtw.SoftDTW.func_dtw", "sdtw.SoftDTW.calc_distance_matrix", "sdtw.SoftDTW.func_dtw", "sdtw.SoftDTW.calc_distance_matrix", "sdtw.SoftDTW.func_dtw", "sdtw.SoftDTW.calc_distance_matrix", "sdtw.SoftDTW.func_dtw", "result.squeeze"], "store_vars_calls": {"x": "x.unsqueeze", "y": "y.unsqueeze", "D_xy": "self.calc_distance_matrix", "out_xy": "self.func_dtw", "D_xx": "self.calc_distance_matrix", "out_xx": "self.func_dtw", "D_yy": "self.calc_distance_matrix", "out_yy": "self.func_dtw"}}}}}, "functions": {"compute_softdtw": {"args": ["D", "gamma"], "returns": [["R"]], "min_max_lineno": {"min_lineno": 7, "max_lineno": 25}, "calls": ["numba.jit", "range", "numpy.ones", "range", "range", "max", "max", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.log"], "store_vars_calls": {"rmax": "max"}}, "compute_softdtw_backward": {"args": ["D_", "R", "gamma"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 52}, "calls": ["numba.jit", "numpy.zeros", "numpy.zeros", "range", "range", "range", "numpy.exp", "numpy.exp", "numpy.exp"], "store_vars_calls": {"D": "np.zeros", "E": "np.zeros", "a": "np.exp", "b": "np.exp", "c": "np.exp"}}}, "is_test": false}