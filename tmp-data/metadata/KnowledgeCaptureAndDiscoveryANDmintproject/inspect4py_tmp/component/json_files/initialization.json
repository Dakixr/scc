{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/mic/src/mic/component/initialization.py", "fileNameBase": "initialization", "extension": "py"}, "dependencies": [{"import": "os", "type": "external"}, {"from_module": "pathlib", "import": "Path", "type": "external"}, {"import": "logging", "type": "external"}, {"from_module": "mic._utils", "import": "get_mic_logger", "type": "external"}, {"from_module": "jinja2", "import": "Environment", "type": "external"}, {"from_module": "jinja2", "import": "PackageLoader", "type": "external"}, {"from_module": "jinja2", "import": "select_autoescape", "type": "external"}, {"import": "platform", "type": "external"}], "functions": {"set_mask": {"args": ["value"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 21}, "calls": ["os.umask"]}, "create_base_directories": {"args": ["mic_component_dir", "interactive"], "returns": [["mic_component_dir"]], "min_max_lineno": {"min_lineno": 23, "max_lineno": 57}, "calls": ["mic_component_dir.exists", "src.mkdir", "docker.mkdir", "data.mkdir", "logging.info", "click.secho", "click.secho", "click.secho", "click.secho", "click.secho", "click.secho", "logging.info", "initialization.set_mask", "mic_component_dir.mkdir", "logging.info", "click.secho", "exit", "click.secho", "logging.exception", "exit", "click.confirm"]}, "render_gitignore": {"args": ["directory"], "returns": [["gitignore_file"]], "min_max_lineno": {"min_lineno": 59, "max_lineno": 70}, "calls": ["env.get_template", "gitignore_file.chmod", "logging.debug", "open", "initialization.render_template", "gi.write"], "store_vars_calls": {"template": "env.get_template", "ignore": "render_template"}}, "render_conda": {"args": ["directory"], "returns": [["conda"]], "min_max_lineno": {"min_lineno": 72, "max_lineno": 80}, "calls": ["env.get_template", "logging.debug", "open", "initialization.render_template", "gi.write"], "store_vars_calls": {"template": "env.get_template", "ignore": "render_template"}}, "render_run_sh": {"doc": {"long_description": "@type number_parameters:\n@param number_inputs:\n@type number_inputs:\n@param directory:\n@type directory:\n@param inputs:\n@type inputs:\n@param parameters:\n@type parameters:", "short_description": "@param number_parameters:"}, "args": ["directory", "inputs", "parameters", "outputs", "code"], "returns": [["run_file"]], "min_max_lineno": {"min_lineno": 82, "max_lineno": 119}, "calls": ["env.get_template", "run_file.chmod", "logging.debug", "len", "len", "len", "open", "initialization.render_template", "f.write"], "store_vars_calls": {"template": "env.get_template", "content": "render_template"}}, "render_io_sh": {"args": ["directory", "inputs", "parameters", "configs"], "returns": [["file"]], "min_max_lineno": {"min_lineno": 121, "max_lineno": 136}, "calls": ["env.get_template", "logging.debug", "open", "initialization.render_template", "f.write", "configs.items"], "store_vars_calls": {"template": "env.get_template", "content": "render_template"}}, "detect_framework": {"args": ["src_dir"], "returns": [["frameworks"]], "min_max_lineno": {"min_lineno": 138, "max_lineno": 150}, "calls": ["os.walk", "logging.debug", "pathlib.Path", "os.path.join", "Framework.__members__.items", "os.path.abspath", "frameworks.append"], "store_vars_calls": {"filepath": "Path"}}, "render_dockerfile": {"args": ["model_directory", "language", "custom"], "returns": [["run_file"]], "min_max_lineno": {"min_lineno": 152, "max_lineno": 181}, "calls": ["env.get_template", "env.get_template", "platform.system().lower", "logging.debug", "open", "initialization.render_template", "f.write", "open", "initialization.render_template", "f.write", "logging.debug", "logging.warning", "logging.info", "platform.system"], "store_vars_calls": {"template": "env.get_template", "os": "platform.system().lower", "content": "render_template"}}, "recursive_convert_to_lf": {"doc": {"short_description": "Convert windows CRLF endings into unix LF endigns. Returns an array of converted files", "returns": {"description": "converted_files", "is_generator": false}}, "args": ["dir"], "returns": [["converted_files"]], "min_max_lineno": {"min_lineno": 183, "max_lineno": 203}, "calls": ["os.walk", "root.find", "open_file.read.replace", "converted_files.append", "open", "open_file.read", "open", "open_file.write", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path"], "store_vars_calls": {"content": "open_file.read"}}, "render_bash_color": {"args": ["directory"], "returns": [["file"]], "min_max_lineno": {"min_lineno": 205, "max_lineno": 212}, "calls": ["env.get_template", "open", "initialization.render_template", "f.write"], "store_vars_calls": {"template": "env.get_template", "content": "render_template"}}, "render_output": {"args": ["directory", "outputs", "compress"], "returns": [["run_file"]], "min_max_lineno": {"min_lineno": 214, "max_lineno": 229}, "calls": ["env.get_template", "outputs.items", "files.append", "open", "f.write", "initialization.render_template", "initialization.render_template", "initialization.render_template"], "store_vars_calls": {"template": "env.get_template", "content": "render_template"}}, "render_template": {"args": ["template"], "min_max_lineno": {"min_lineno": 231, "max_lineno": 233}, "calls": ["template.render"]}}, "body": {"calls": ["jinja2.Environment", "mic._utils.get_mic_logger"], "store_vars_calls": {"env": "Environment", "logging": "get_mic_logger"}}, "is_test": false}