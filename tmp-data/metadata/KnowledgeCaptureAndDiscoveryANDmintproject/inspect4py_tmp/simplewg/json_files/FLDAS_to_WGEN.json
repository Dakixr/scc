{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/simplewg/FLDAS_to_WGEN.py", "fileNameBase": "FLDAS_to_WGEN", "extension": "py", "doc": {"long_description": "@author: deborahkhider\n\nThis routine uses FLDAS climatology to\ngenerate possible weather conditions\nfor an area given a percent level with\nrespect to observed conditions. The\nroutine prepares the CSV file for use with\nthe weather generator.", "short_description": "Created on Thu Dec 20 13:34:01 2018", "full": "Created on Thu Dec 20 13:34:01 2018\n\n@author: deborahkhider\n\nThis routine uses FLDAS climatology to\ngenerate possible weather conditions\nfor an area given a percent level with\nrespect to observed conditions. The\nroutine prepares the CSV file for use with\nthe weather generator. "}}, "dependencies": [{"import": "sys", "type": "external"}, {"import": "xarray", "alias": "xr", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "os", "type": "external"}, {"import": "glob", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "csv", "type": "external"}], "functions": {"startup": {"doc": {"short_description": "Calls the righ method for dataset_source", "args": {"path_monthly": {"description": "The path to the directory containing the netCDF files\nfor the monthly data", "type_name": "str", "is_optional": false}, "path_daily": {"description": "The path to the directory containing the netCDF files\nfor the daily data", "type_name": "str", "is_optional": false}, "flagP": {"description": "Name of the variable of interest as declared in the file", "type_name": "str", "is_optional": false}, "min_lon": {"description": "Minimum longitude for the bounding box", "type_name": "float", "is_optional": false}, "max_lon": {"description": "Maximum longitude for the bounding box", "type_name": "float", "is_optional": false}, "min_lat": {"description": "Minimum latitude for the bounding box", "type_name": "float", "is_optional": false}, "max_lat": {"description": "Maximum latitude for the bounding box", "type_name": "float", "is_optional": false}, "min_month": {"description": "The first month of the season of interest", "type_name": "int", "is_optional": false}, "max_month": {"description": "The last month of the season of interest", "type_name": "int", "is_optional": false}, "level": {"description": "The level at which to do the analysis", "type_name": "float", "is_optional": false}}}, "args": ["path_monthly", "path_daily", "flagP", "min_lon", "max_lon", "min_lat", "max_lat", "min_month", "max_month", "level"], "min_max_lineno": {"min_lineno": 24, "max_lineno": 57}, "calls": ["FLDAS_to_WGEN.clim_FLDAS", "FLDAS_to_WGEN.findYear", "FLDAS_to_WGEN.FLDAS_to_csv"], "store_vars_calls": {"dt_mean": "clim_FLDAS", "year": "findYear"}}, "clim_FLDAS": {"doc": {"long_description": "This function takes the seasonal average over several years\nto estimate the climatology and deviation for a specipic year.\nWorks only for FLDAS monthly datasets.", "short_description": "Calculate climatology for the FLDAS data", "args": {"path": {"description": "The path to the directory containing the netCDF files", "type_name": "str", "is_optional": false}, "flagP": {"description": "Name of the variable of interest as declared in the file", "type_name": "str", "is_optional": false}, "min_lon": {"description": "Minimum longitude for the bounding box", "type_name": "float", "is_optional": false}, "max_lon": {"description": "Maximum longitude for the bounding box", "type_name": "float", "is_optional": false}, "min_lat": {"description": "Minimum latitude for the bounding box", "type_name": "float", "is_optional": false}, "max_lat": {"description": "Maximum latitude for the bounding box", "type_name": "float", "is_optional": false}, "min_month": {"description": "The first month of the season of interest", "type_name": "int", "is_optional": false}, "max_month": {"description": "The last month of the season of interest", "type_name": "int", "is_optional": false}, "year": {"description": "The year of interest for the comparison", "type_name": "int", "is_optional": false}}, "returns": {"description": "The average for all years\ndt_mean (pandas dataframe): The monthly weather", "type_name": "'climatology.csv'", "is_generator": false}}, "args": ["path_monthly", "flagP", "min_lon", "max_lon", "min_lat", "max_lat", "min_month", "max_month"], "returns": [["dt_mean"]], "min_max_lineno": {"min_lineno": 58, "max_lineno": 153}, "calls": ["numpy.arange", "pandas.DataFrame", "pandas.DataFrame", "os.path.join", "glob.glob", "sys.exit", "xarray.open_dataset", "os.listdir", "os.path.isdir", "nc_files.append", "numpy.arange", "numpy.arange", "data.astype.astype", "P.append", "years.append", "months.append", "xr.open_dataset.close", "xr.open_dataset.close", "dt[].unique", "[].transform().unique", "os.path.join", "time.astype().astype", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.nanmean", "time.astype().astype", "[].transform", "time.astype", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "time.astype().astype", "time.astype", "time.astype", "pd.DataFrame.groupby"], "store_vars_calls": {"season": "np.arange", "dt": "pd.DataFrame", "dt_mean": "pd.DataFrame", "files": "glob.glob", "nc_fid": "xr.open_dataset", "idx_x": "np.arange", "idx_y": "np.arange", "data": "data.astype"}}, "findYear": {"args": ["dt_mean", "level"], "returns": [["year"]], "min_max_lineno": {"min_lineno": 155, "max_lineno": 194}, "calls": ["int", "dt_mean.sort_values", "round", "numpy.array", "numpy.arange", "numpy.array", "numpy.arange", "abs", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "dt_mean[].count"], "store_vars_calls": {"prob": "int", "dt_sort": "dt_mean.sort_values"}}, "FLDAS_to_csv": {"doc": {"long_description": "This method prepares the  csvfile to run the weather generator", "short_description": "Prepare file for WGENW", "args": {"- year": {"description": "The year of interest. Ontained from findYear method", "type_name": "int", "is_optional": false}, "- min_month": {"description": "The first month of the season of interest", "type_name": "int", "is_optional": false}, "- max_month": {"description": "The last month of the season of interest", "type_name": "int", "is_optional": false}, "- min_lat": {"description": "The minimum latitude for the bounding box", "type_name": "float", "is_optional": false}, "- max_lat": {"description": "The maximum latitude for the bounding box", "type_name": "float", "is_optional": false}, "- min_lon": {"description": "The minimum longitude for the bounding box", "type_name": "float", "is_optional": false}, "- max_lon": {"description": "The maximum longitude for the bounding box", "type_name": "float", "is_optional": false}}}, "args": ["year", "min_month", "max_month", "min_lat", "max_lat", "min_lon", "max_lon"], "min_max_lineno": {"min_lineno": 195, "max_lineno": 289}, "calls": ["numpy.arange", "str", "open", "csv.writer", "csv.writer.writerow", "os.getcwd", "glob.glob", "xarray.open_mfdataset", "str", "numpy.where", "numpy.where", "str", "numpy.logical_and", "numpy.logical_and", "data.astype.astype", "data.astype.astype", "numpy.nanmean", "data.astype.astype", "numpy.nansum", "len", "csv.writer.writerow", "xr.open_mfdataset.close", "str", "len", "numpy.nanmin", "numpy.nanmax", "str", "str", "len", "numpy.where", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "len", "round", "round", "round", "round", "round", "round", "str", "str", "len", "str", "str", "len", "sys.exit", "str", "str"], "store_vars_calls": {"season": "np.arange", "wgenwriter": "csv.writer", "nc_files": "glob.glob", "nc_fid": "xr.open_mfdataset", "month_str": "str", "data": "data.astype", "avWind": "np.nanmean", "totP": "np.nansum", "wet_days": "len"}}}, "body": {"calls": ["float", "float", "float", "float", "int", "int", "float", "FLDAS_to_WGEN.startup"], "store_vars_calls": {"min_lon": "float", "max_lon": "float", "min_lat": "float", "max_lat": "float", "min_month": "int", "max_month": "int", "level": "float"}}, "is_test": true}