{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/MINT-WorkflowDomain/WINGSWorkflowComponents/GeneralDataPreparation/deprecated/netCDF_simple/code/library/openNetCDF/OpenNetCDF.py", "fileNameBase": "OpenNetCDF", "extension": "py"}, "dependencies": [{"from_module": "netCDF4", "import": "MFDataset", "type": "external"}, {"import": "pickle", "type": "external"}, {"import": "sys", "type": "external"}], "functions": {"getKeys": {"doc": {"short_description": "Get the variables names in the NetCDF file"}, "args": ["nc_fid"], "returns": [["keys"]], "min_max_lineno": {"min_lineno": 5, "max_lineno": 12}, "calls": ["keys.append", "getattr"]}, "getMFNcVar": {"doc": {"long_description": "This function gets the variable contained in a netCDF file \nand return them into Python nested dictionaries. The first\ndictionary's key contains the longname, while the\nsecond dictionary contains values, standard name (CF),\nunits and the missing data flag.", "short_description": "Extract variables from a dataset across multiple netCDF files.", "args": {"nc_files": {"description": "A list of netCDF files containing the dataset", "type_name": "list", "is_optional": false}, "keys": {"description": "A list of keys to fetch the variables according\nto the CF standard", "type_name": "list", "is_optional": false}}, "returns": {"description": "dict_out (dict): A dictionary containing the standard names as keys and\nthe associated data as values.", "is_generator": false}}, "args": ["nc_fid", "keys"], "returns": [["dict_out"]], "min_max_lineno": {"min_lineno": 13, "max_lineno": 86}, "calls": ["nc_fid.variables[].ncattrs", "nc_vars_longname.append", "nc_vars_longname.append", "nc_fid.variables[].ncattrs", "nc_vars_units.append", "nc_vars_units.append", "nc_fid.variables[].ncattrs", "nc_vars_standardname.append", "nc_vars_standardname.append", "nc_fid.variables[].ncattrs", "nc_vars_scale_factor.append", "nc_vars_scale_factor.append", "nc_fid.variables[].ncattrs", "nc_vars_add_offset.append", "nc_vars_add_offset.append", "nc_fid.variables[].ncattrs", "nc_vars_missing_value.append", "nc_vars_missing_value.append", "nc_vars_longname.index", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr"], "store_vars_calls": {"idx": "nc_vars_longname.index"}}}, "body": {"calls": ["netCDF4.MFDataset", "OpenNetCDF.getKeys", "OpenNetCDF.getMFNcVar"], "store_vars_calls": {"nc_fid": "MFDataset", "keys": "getKeys", "dict_out": "getMFNcVar"}}, "is_test": false}