{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/spider/spider/distance_base.py", "fileNameBase": "distance_base", "extension": "py"}, "dependencies": [{"from_module": "__future__", "import": "absolute_import", "type": "external"}, {"from_module": "__future__", "import": "division", "type": "external"}, {"from_module": "__future__", "import": "print_function", "type": "external"}, {"from_module": "__future__", "import": "unicode_literals", "type": "external"}, {"import": "abc", "type": "external"}, {"from_module": "base", "import": "PrimitiveBase", "type": "internal"}, {"from_module": "base", "import": "ContinueFitMixin", "type": "internal"}, {"from_module": "base", "import": "SamplingCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "ProbabilisticCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "Scores", "type": "internal"}, {"from_module": "base", "import": "Gradients", "type": "internal"}, {"from_module": "base", "import": "GradientCompositionalityMixin", "type": "internal"}, {"from_module": "base", "import": "InspectLossMixin", "type": "internal"}, {"from_module": "transformer", "import": "TransformerPrimitiveBase", "type": "external"}], "classes": {"PairwiseDistanceLearnerPrimitiveBase": {"doc": {"long_description": "different sets of instances.\n\nClass is parametrized using four type variables, ``Inputs``, ``InputLabels``, ``Outputs``, and ``Params``.", "short_description": "A base class for primitives which learn distances (however defined) between two", "full": "A base class for primitives which learn distances (however defined) between two\ndifferent sets of instances.\n\nClass is parametrized using four type variables, ``Inputs``, ``InputLabels``, ``Outputs``, and ``Params``."}, "min_max_lineno": {"min_lineno": 16, "max_lineno": 28}, "methods": {"produce": {"doc": {"short_description": "Computes distance matrix between two sets of data.", "args": {"inputs": {"description": "A pair of collections of instances.", "type_name": "Tuple[Inputs, Inputs]", "is_optional": false}, "timeout": {"description": "A maximum time this primitive should take to produce outputs during this method call, in seconds.", "type_name": "float", "is_optional": false}, "iterations": {"description": "How many of internal iterations should the primitive do.", "type_name": "int", "is_optional": false}, "Outputs": {"description": "A n by m distance matrix describing the relationship between each instance in inputs[0] and each instance\nin inputs[1] (n and m are the number of instances in inputs[0] and inputs[1], respectively)."}}}, "args": ["self", "inputs", "timeout", "iterations"], "min_max_lineno": {"min_lineno": 19, "max_lineno": 23}}, "set_training_data": {"doc": {"short_description": "Sets training data of this primitive.", "args": {"inputs": {"description": "The inputs.", "type_name": "Inputs", "is_optional": false}, "outputs": {"description": "A set of class labels for the inputs.", "type_name": "InputLabels", "is_optional": false}}}, "args": ["self", "inputs", "outputs"], "min_max_lineno": {"min_lineno": 24, "max_lineno": 28}}}}, "PairwiseDistanceTransformerPrimitiveBase": {"doc": {"long_description": "different sets of instances without learning any sort of model.", "short_description": "A base class for primitives which compute distances (however defined) between two", "full": "A base class for primitives which compute distances (however defined) between two\ndifferent sets of instances without learning any sort of model."}, "min_max_lineno": {"min_lineno": 30, "max_lineno": 37}, "methods": {"produce": {"doc": {"short_description": "Computes distance matrix between two sets of data.", "args": {"inputs": {"description": "A pair of collections of instances.", "type_name": "Tuple[Inputs, Inputs]", "is_optional": false}, "timeout": {"description": "A maximum time this primitive should take to produce outputs during this method call, in seconds.", "type_name": "float", "is_optional": false}, "iterations": {"description": "How many of internal iterations should the primitive do.", "type_name": "int", "is_optional": false}, "Outputs": {"description": "A n by m distance matrix describing the relationship between each instance in inputs[0] and each instance\nin inputs[1] (n and m are the number of instances in inputs[0] and inputs[1], respectively)."}}}, "args": ["self", "inputs", "timeout", "iterations"], "min_max_lineno": {"min_lineno": 33, "max_lineno": 37}}}}}, "body": {"calls": ["TypeVar"], "store_vars_calls": {"InputLabels": "TypeVar"}}, "is_test": false}