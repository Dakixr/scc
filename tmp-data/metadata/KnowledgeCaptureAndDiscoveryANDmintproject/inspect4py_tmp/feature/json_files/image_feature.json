{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/dsbox-ta2/python/dsbox/custom_primitives/feature/image_feature.py", "fileNameBase": "image_feature", "extension": "py", "doc": {"short_description": "Feature generation for images", "full": "Feature generation for images"}}, "dependencies": [{"from_module": "sklearn.base", "import": "BaseEstimator", "type": "external"}, {"from_module": "sklearn.base", "import": "TransformerMixin", "type": "external"}, {"from_module": "sklearn.decomposition", "import": "PCA", "type": "external"}, {"from_module": "sklearn.cluster", "import": "MiniBatchKMeans", "type": "external"}, {"from_module": "dsbox.planner.levelone", "import": "Primitive", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}], "classes": {"PcaImageFeature": {"doc": {"short_description": "Image Feature Generation using PCA", "full": "Image Feature Generation using PCA\n\nParameters\n----------\nexplained_variance : float, default: 0.9, range: 0 < explained_variance < 1\n    Controls the number of features to generate.\n    Higher explained_variance implies more features."}, "extend": ["BaseEstimator", "TransformerMixin"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 53}, "methods": {"__init__": {"args": ["self", "explained_variance"], "min_max_lineno": {"min_lineno": 22, "max_lineno": 26}}, "fit": {"doc": {"long_description": "image_tensor : array-like, shape (n_samples, *)", "short_description": "Fit the model with image_tensor."}, "args": ["self", "image_tensor", "y"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 36}, "calls": ["image_tensor.reshape", "sklearn.decomposition.PCA", "image_feature.PcaImageFeature.pca.fit"], "store_vars_calls": {"data": "image_tensor.reshape", "self.pca": "PCA"}}, "transform": {"doc": {"short_description": "Apply dimensionality reduction to X."}, "args": ["self", "image_tensor"], "min_max_lineno": {"min_lineno": 37, "max_lineno": 42}, "calls": ["image_tensor.reshape", "image_feature.PcaImageFeature.pca.transform"], "store_vars_calls": {"data": "image_tensor.reshape"}}, "annotation": {"args": ["self"], "min_max_lineno": {"min_lineno": 43, "max_lineno": 53}, "calls": ["dsbox.planner.levelone.Primitive"], "store_vars_calls": {"self._annotation": "Primitive"}}}}, "ColorRegionImageFeature": {"doc": {"short_description": "Image Feature Generation based on color cluster sizes", "full": "Image Feature Generation based on color cluster sizes\n\nParameters\n----------\nn_cluster : int, default: 8, range: n_cluster > 0\n    Number of color region clusters."}, "extend": ["BaseEstimator", "TransformerMixin"], "min_max_lineno": {"min_lineno": 55, "max_lineno": 112}, "methods": {"__init__": {"args": ["self", "n_cluster"], "min_max_lineno": {"min_lineno": 64, "max_lineno": 68}}, "fit": {"doc": {"short_description": "Fit the model with image_tensor"}, "args": ["self", "image_tensor", "y"], "min_max_lineno": {"min_lineno": 69, "max_lineno": 72}}, "transform": {"doc": {"short_description": "Apply color cluster based dimension reduction to image_tensor"}, "args": ["self", "image_tensor", "y"], "min_max_lineno": {"min_lineno": 73, "max_lineno": 101}, "calls": ["sklearn.cluster.MiniBatchKMeans", "range", "numpy.vstack", "len", "image_tensor.reshape", "image_feature.ColorRegionImageFeature.kmeans.fit", "numpy.uint8", "numpy.unique", "numpy.argsort", "numpy.zeros", "range", "results.append", "len", "image_tensor.reshape", "Exception", "len", "len"], "store_vars_calls": {"self.kmeans": "MiniBatchKMeans", "pixel_data": "image_tensor.reshape", "centers": "np.uint8", "sort_index": "np.argsort", "result": "np.zeros"}}, "annotation": {"args": ["self"], "min_max_lineno": {"min_lineno": 102, "max_lineno": 112}, "calls": ["dsbox.planner.levelone.Primitive"], "store_vars_calls": {"self._annotation": "Primitive"}}}}}, "is_test": false}