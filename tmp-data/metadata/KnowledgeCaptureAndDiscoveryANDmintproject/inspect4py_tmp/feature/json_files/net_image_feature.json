{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/dsbox-ta2/python/dsbox/custom_primitives/feature/net_image_feature.py", "fileNameBase": "net_image_feature", "extension": "py", "doc": {"short_description": "Feature generation based on deep learning for images", "full": "Feature generation based on deep learning for images"}}, "dependencies": [{"from_module": "sklearn.base", "import": "BaseEstimator", "type": "external"}, {"from_module": "sklearn.base", "import": "TransformerMixin", "type": "external"}, {"from_module": "scipy.misc", "import": "imresize", "type": "external"}, {"from_module": "keras.models", "import": "Model", "type": "external"}, {"import": "keras", "alias": "resnet50", "type": "external"}, {"import": "keras", "alias": "vgg16", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}], "classes": {"ResNet50ImageFeature": {"doc": {"short_description": "Image Feature Generation using pretrained deep neural network RestNet50.", "full": "Image Feature Generation using pretrained deep neural network RestNet50.\n\nParameters\n----------\nlayer_index : int, default: 0, domain: range(11)\n    Layer of the network to use to generate features. Smaller\n    indices are closer to the output layers of the network.\n\nresize_data : Boolean, default: True, domain: {True, False}\n    If True resize images to 224 by 224."}, "extend": ["BaseEstimator", "TransformerMixin"], "min_max_lineno": {"min_lineno": 15, "max_lineno": 86}, "methods": {"__init__": {"args": ["self", "layer_index", "preprocess_data", "resize_data"], "min_max_lineno": {"min_lineno": 31, "max_lineno": 50}, "calls": ["keras.models.Model", "keras.models.Model", "keras.ResNet50", "keras.ResNet50", "len", "len"], "store_vars_calls": {"self.model": "Model", "ResNet50ImageFeature.RESNET50_MODEL": "resnet50.ResNet50"}}, "fit": {"doc": {"short_description": "Fit the model with X"}, "args": ["self", "X", "y"], "min_max_lineno": {"min_lineno": 51, "max_lineno": 54}}, "preprocess": {"doc": {"short_description": "Preprocess image data by modifying it directly"}, "args": ["self", "image_tensor"], "min_max_lineno": {"min_lineno": 55, "max_lineno": 58}, "calls": ["keras.preprocess_input", "keras.preprocess_input"]}, "transform": {"doc": {"short_description": "Apply neural network-based feature extraction to image_tensor"}, "args": ["self", "image_tensor", "y"], "min_max_lineno": {"min_lineno": 59, "max_lineno": 86}, "calls": ["net_image_feature.ResNet50ImageFeature.model.predict", "net_image_feature.ResNet50ImageFeature.reshape", "ValueError", "net_image_feature.ResNet50ImageFeature.preprocess", "len", "numpy.empty", "range", "image_tensor.copy", "scipy.misc.imresize"], "store_vars_calls": {"result": "self.model.predict", "y": "np.empty", "data": "image_tensor.copy"}}}}, "Vgg16ImageFeature": {"doc": {"short_description": "Image Feature Generation using pretrained deep neural network VGG16.", "full": "Image Feature Generation using pretrained deep neural network VGG16.\n\nParameters\n----------\nlayer_index : int, default: 0, domain: range(5)\n    Layer of the network to use to generate features. Smaller\n    indices are closer to the output layers of the network.\n\nresize_data : Boolean, default: True, domain: {True, False}\n    If True resize images to 224 by 224."}, "extend": ["BaseEstimator", "TransformerMixin"], "min_max_lineno": {"min_lineno": 99, "max_lineno": 169}, "methods": {"__init__": {"args": ["self", "layer_index", "preprocess_data", "resize_data"], "min_max_lineno": {"min_lineno": 115, "max_lineno": 134}, "calls": ["keras.models.Model", "keras.models.Model", "keras.VGG16", "keras.VGG16", "len", "len"], "store_vars_calls": {"self.model": "Model", "Vgg16ImageFeature.VGG16_MODEL": "vgg16.VGG16"}}, "fit": {"doc": {"short_description": "Fit the model with X"}, "args": ["self", "X", "y"], "min_max_lineno": {"min_lineno": 135, "max_lineno": 138}}, "preprocess": {"doc": {"short_description": "Preprocess image data by modifying it directly"}, "args": ["self", "image_tensor"], "min_max_lineno": {"min_lineno": 139, "max_lineno": 142}, "calls": ["keras.preprocess_input", "keras.preprocess_input"]}, "transform": {"doc": {"short_description": "Apply neural network-based feature extraction to image_tensor"}, "args": ["self", "image_tensor", "y"], "min_max_lineno": {"min_lineno": 143, "max_lineno": 169}, "calls": ["net_image_feature.Vgg16ImageFeature.model.predict", "net_image_feature.Vgg16ImageFeature.reshape", "ValueError", "net_image_feature.Vgg16ImageFeature.preprocess", "len", "numpy.empty", "range", "image_tensor.copy", "scipy.misc.imresize"], "store_vars_calls": {"result": "self.model.predict", "y": "np.empty", "data": "image_tensor.copy"}}}}}, "is_test": false}