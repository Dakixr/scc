{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/MINT-WorkflowDomain/WINGSWorkflowComponents/cycles-baseline-0.9.4-alpha/src/cycles-wrapper.py", "fileNameBase": "cycles-wrapper", "extension": "py", "doc": {"short_description": "Cycles Executor.", "full": "Cycles Executor."}}, "dependencies": [{"import": "argparse", "type": "external"}, {"import": "csv", "type": "external"}, {"import": "logging", "type": "external"}, {"import": "os", "type": "external"}, {"import": "shutil", "type": "external"}, {"import": "subprocess", "type": "external"}, {"import": "sys", "type": "external"}, {"from_module": "string", "import": "Template", "type": "external"}], "functions": {"_generate_inputs": {"args": ["prefix", "start_year", "end_year", "baseline", "crop", "start_planting_date", "end_planting_date", "fertilizer_rate", "weed_fraction", "forcing", "weather_file", "reinit_file", "crop_file", "soil_file"], "min_max_lineno": {"min_lineno": 16, "max_lineno": 84}, "calls": ["open", "string.Template", "string.Template.substitute", "open", "string.Template", "string.Template.substitute", "open", "f.write", "t_ctrl_file.read", "open", "f.write", "t_op_file.read", "float", "int", "int", "open", "string.Template", "string.Template.substitute", "t_wd_file.read", "int"], "store_vars_calls": {"src": "Template", "result": "src.substitute", "wd_src": "Template", "wd_result": "wd_src.substitute"}}, "_launch": {"args": ["prefix", "baseline"], "min_max_lineno": {"min_lineno": 86, "max_lineno": 96}, "calls": ["subprocess.check_output", "print", "print", "exit"], "store_vars_calls": {"output": "subprocess.check_output"}}, "_main": {"min_max_lineno": {"min_lineno": 98, "max_lineno": 125}, "calls": ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "cycles-wrapper._generate_inputs", "cycles-wrapper._launch", "vars", "vars"], "store_vars_calls": {"parser": "argparse.ArgumentParser", "args": "parser.parse_args"}}}, "body": {"calls": ["logging.getLogger"], "store_vars_calls": {"log": "logging.getLogger"}}, "main_info": {"main_flag": 1, "main_function": "cycles-wrapper._main", "type": "script"}, "is_test": false}