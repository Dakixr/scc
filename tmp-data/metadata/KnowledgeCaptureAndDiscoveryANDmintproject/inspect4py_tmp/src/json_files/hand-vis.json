{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/HAND-TauDEM/hand_v2_mint_component/src/hand-vis.py", "fileNameBase": "hand-vis", "extension": "py"}, "dependencies": [{"import": "argparse", "type": "external"}, {"import": "numpy", "alias": "np", "type": "external"}, {"import": "numpy", "alias": "ma", "type": "external"}, {"import": "pandas", "alias": "pd", "type": "external"}, {"import": "rasterio", "type": "external"}, {"import": "rasterio", "type": "external"}, {"from_module": "shapely.geometry", "import": "shape", "type": "external"}, {"from_module": "shapely.geometry", "import": "mapping", "type": "external"}, {"from_module": "shapely.geometry.multipolygon", "import": "MultiPolygon", "type": "external"}, {"import": "fiona", "type": "external"}], "functions": {"argparser": {"returns": [["args"]], "min_max_lineno": {"min_lineno": 16, "max_lineno": 43}, "calls": ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.error", "argparse.ArgumentParser.error", "argparse.ArgumentParser.error"], "store_vars_calls": {"parser": "argparse.ArgumentParser", "args": "parser.parse_args"}}, "digi": {"args": ["nodata", "raster"], "returns": [["bins", "digi"], ["bins"]], "min_max_lineno": {"min_lineno": 44, "max_lineno": 79}, "calls": ["args.binmethod.split", "numpy.append", "numpy.digitize", "digi.squeeze().astype.squeeze().astype", "raster.filled", "len", "int", "int", "float", "float", "len", "hand-vis.digi.np_space", "rasterio.uint16", "rasterio.uint16"], "store_vars_calls": {"binning": "args.binmethod.split", "bins": "np.logspace", "digi": "digi.squeeze().astype"}, "functions": {"np_space": {"returns": [["bins"]], "min_max_lineno": {"min_lineno": 46, "max_lineno": 54}, "calls": ["float", "float", "int"]}}}, "output_raster": {"args": ["profile", "nodata", "digi"], "min_max_lineno": {"min_lineno": 81, "max_lineno": 93}, "calls": ["profile.update", "rasterio.open", "rasterio.open", "dst.write", "int", "digi.astype"]}, "output_vector": {"args": ["crs", "digi", "transform", "bins"], "returns": [["vec"]], "min_max_lineno": {"min_lineno": 94, "max_lineno": 168}, "calls": ["list", "pandas.DataFrame", "hand-vis.output_vector.vec_for"], "store_vars_calls": {"shapes": "list", "uniq_val": "pd.DataFrame", "vec": "fiona.open", "multipolygon": "mapping"}, "functions": {"fiona_open": {"args": ["vecfile"], "returns": [["vec"]], "min_max_lineno": {"min_lineno": 96, "max_lineno": 105}, "calls": ["fiona.open"], "store_vars_calls": {"vec": "fiona.open"}}, "vec_for": {"min_max_lineno": {"min_lineno": 106, "max_lineno": 132}, "calls": ["uniq_val_subset.iterrows", "print", "vecvec.write", "shapely.geometry.mapping", "shapely.geometry.shape", "shapely.geometry.multipolygon.MultiPolygon", "hand-vis.output_vector.vec_for.vec_write"], "store_vars_calls": {"multipolygon": "mapping"}, "functions": {"vec_write": {"args": ["vecvec"], "min_max_lineno": {"min_lineno": 108, "max_lineno": 120}, "calls": ["print", "vecvec.write"]}}}}}, "main": {"min_max_lineno": {"min_lineno": 185, "max_lineno": 205}, "calls": ["hand-vis.argparser", "hand-vis.digi", "rasterio.open", "rasterio.open", "src.crs.to_string", "numpy.array", "hand-vis.output_raster", "hand-vis.output_vector", "src.read", "src.read"], "store_vars_calls": {"args": "argparser", "crs": "src.crs.to_string", "raster": "ma.array"}}}, "main_info": {"main_flag": 1, "main_function": "hand-vis.main", "type": "script"}, "is_test": false}