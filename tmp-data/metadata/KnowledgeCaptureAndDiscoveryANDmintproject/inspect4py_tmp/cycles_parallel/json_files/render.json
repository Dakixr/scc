{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/Dash/viz/models/cycles_parallel/render.py", "fileNameBase": "render", "extension": "py"}, "functions": {"generate_layout": {"args": ["thread_id"], "returns": [["layout"]], "min_max_lineno": {"min_lineno": 17, "max_lineno": 85}, "calls": ["html.Div", "dcc.Store", "dcc.Store", "dcc.Store", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.H3", "html.Label", "dcc.Input", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.Div", "html.P", "dcc.Dropdown", "html.P", "dcc.Dropdown", "html.P", "dcc.Dropdown", "html.P", "html.Div", "html.P", "dcc.Dropdown", "html.Button", "dcc.Loading", "dcc.Loading", "dict", "dcc.RangeSlider", "dict", "html.Div", "html.Div", "sorted", "sorted"], "store_vars_calls": {"layout": "html.Div"}}, "load_spatial_data": {"args": ["thread_id"], "returns": [["spatial_df"]], "min_max_lineno": {"min_lineno": 87, "max_lineno": 100}, "calls": ["thread_id.isalnum", "pd.DataFrame", "pd.read_sql"], "store_vars_calls": {"spatial_df": "pd.DataFrame"}}, "update_output": {"args": ["thread_id", "mapdata"], "returns": [["kids", "locationsdata"]], "min_max_lineno": {"min_lineno": 103, "max_lineno": 124}, "calls": ["app.callback", "pd.DataFrame", "thread_id.isalnum", "load_spatial_data.to_dict", "render.load_spatial_data", "px.scatter_mapbox", "px.scatter_mapbox.update_layout", "px.scatter_mapbox.update_layout", "Output", "Output", "Input", "State", "thread_id.isalnum", "html.P", "dcc.Graph"], "store_vars_calls": {"df": "load_spatial_data", "locationsdata": "df.to_dict", "fig": "px.scatter_mapbox"}}, "selectData": {"args": ["selectData", "sData"], "returns": [["selectedData"]], "min_max_lineno": {"min_lineno": 126, "max_lineno": 137}, "calls": ["app.callback", "pd.DataFrame", "pd.DataFrame.to_dict", "Output", "Input", "State"], "store_vars_calls": {"dfPoints": "pd.DataFrame", "selectedData": "dfPoints.to_dict"}}, "set_dropdowns": {"args": ["thread_id"], "returns": [["crop_options", "planting_options", "planting_starts", "yearslider"]], "min_max_lineno": {"min_lineno": 139, "max_lineno": 177}, "calls": ["app.callback", "pd.DataFrame", "pd.DataFrame.crop_name.unique", "pd.DataFrame.start_planting_day.unique", "pd.DataFrame.start_year.min", "pd.DataFrame.end_year.max", "pd.read_sql", "dict", "dict", "dict", "dcc.RangeSlider", "Output", "Output", "Output", "Output", "Output", "Input", "sorted", "sorted", "range", "range"], "store_vars_calls": {"df": "pd.DataFrame", "crops": "df.crop_name.unique", "planting_starts": "df.start_planting_day.unique", "start_year": "df.start_year.min", "end_year": "df.end_year.max"}}, "update_figure": {"args": ["n_clicks", "selectedPoints", "crop", "planting", "year", "yearmin", "yearmax", "selectlist", "scale", "thread_id", "mapData"], "returns": [["pc"]], "min_max_lineno": {"min_lineno": 178, "max_lineno": 241}, "calls": ["app.callback", "list.append", "list", "isinstance", "pd.DataFrame", "px.parallel_coordinates", "dcc.Graph", "Output", "sorted", "len", "pd.DataFrame", "pd.DataFrame", "pd.merge", "pd.read_sql", "Input", "Input", "State", "State", "State", "State", "State", "State", "State", "State", "State", "set", "list", "str", "pd.merge.id.unique", "list"], "store_vars_calls": {"selectlist": "list", "figdata": "pd.DataFrame", "fig": "px.parallel_coordinates", "pc": "dcc.Graph", "md": "pd.DataFrame", "dfPoints": "pd.DataFrame", "dfMap": "pd.merge"}}}, "is_test": false}