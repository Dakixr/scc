{"file": {"path": "/Users/dakixr/Desktop/github/scc/tmp-data/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/ods-docker/scripts/extract_csvs.py", "fileNameBase": "extract_csvs", "extension": "py"}, "dependencies": [{"import": "csv", "type": "external"}, {"import": "codecs", "type": "external"}, {"import": "cStringIO", "type": "external"}, {"import": "json", "type": "external"}, {"import": "requests", "type": "external"}], "classes": {"UnicodeWriter": {"doc": {"long_description": "which is encoded in the given encoding.", "short_description": "A CSV writer which will write rows to CSV file \"f\",", "full": "A CSV writer which will write rows to CSV file \"f\",\nwhich is encoded in the given encoding."}, "min_max_lineno": {"min_lineno": 21, "max_lineno": 49}, "methods": {"__init__": {"args": ["self", "f", "dialect", "encoding"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 33}, "calls": ["cStringIO.StringIO", "csv.writer", "codecs.getincrementalencoder"], "store_vars_calls": {"self.queue": "cStringIO.StringIO", "self.writer": "csv.writer"}}, "writerow": {"args": ["self", "row"], "min_max_lineno": {"min_lineno": 34, "max_lineno": 45}, "calls": ["extract_csvs.UnicodeWriter.writer.writerow", "extract_csvs.UnicodeWriter.queue.getvalue", "extract_csvs.UnicodeWriter.decode", "extract_csvs.UnicodeWriter.encoder.encode", "extract_csvs.UnicodeWriter.stream.write", "extract_csvs.UnicodeWriter.queue.truncate", "s.encode"], "store_vars_calls": {"data": "self.encoder.encode"}}, "writerows": {"args": ["self", "rows"], "min_max_lineno": {"min_lineno": 46, "max_lineno": 49}, "calls": ["extract_csvs.UnicodeWriter.writerow"]}}}}, "functions": {"collectFacts": {"args": ["title", "recurse"], "returns": [["facts"]], "min_max_lineno": {"min_lineno": 51, "max_lineno": 72}, "calls": ["tfacts.items", "prop.replace", "session.get().json", "values.append", "extract_csvs.collectFacts", "session.get"], "store_vars_calls": {"propname": "prop.replace"}}, "getCategoryProperties": {"args": ["category"], "min_max_lineno": {"min_lineno": 74, "max_lineno": 84}, "calls": ["sorted", "session.get().json", "value[].replace", "value[].replace.replace", "properties.append", "session.get"], "store_vars_calls": {"prop": "value[].replace", "propname": "prop.replace"}}, "writeCollectionFile": {"args": ["category"], "min_max_lineno": {"min_lineno": 86, "max_lineno": 113}, "calls": ["category.replace.replace", "category.replace.replace", "extract_csvs.getCategoryProperties", "category.replace.lower", "print", "print", "getCategoryProperties.insert", "open", "extract_csvs.UnicodeWriter", "extract_csvs.UnicodeWriter.writerow", "extract_csvs.collectFacts", "extract_csvs.UnicodeWriter.writerow", "session.get().json", "print", "print", "row.append", "session.get", "collectFacts.get"], "store_vars_calls": {"category": "category.replace", "catname": "category.replace", "catprops": "getCategoryProperties", "csvwriter": "UnicodeWriter", "pfacts": "collectFacts"}}, "collectCategories": {"min_max_lineno": {"min_lineno": 116, "max_lineno": 121}, "calls": ["cat.endswith", "session.get().json", "extract_csvs.writeCollectionFile", "session.get"]}}, "body": {"calls": ["requests.Session", "extract_csvs.collectCategories"], "store_vars_calls": {"session": "requests.Session"}}, "is_test": false}